{"version":3,"sources":["webpack:///./autosave.js","webpack:////home/git/gitlab/node_modules/mousetrap/plugins/pause/mousetrap-pause.js","webpack:///./pages/snippets/show/index.js","webpack:///./task_list.js","webpack:///./droplab/plugins/input_setter.js","webpack:///./blob/viewer/index.js","webpack:///./comment_type_toggle.js","webpack:///./notes.js","webpack:////home/git/gitlab/node_modules/deckar01-task_list/dist/task_list.js","webpack:///./line_highlighter.js","webpack:///./init_notes.js","webpack:///./snippet/snippet_embed.js","webpack:///./dropzone_input.js","webpack:///./gl_form.js","webpack:///./zen_mode.js"],"names":["Autosave","field","key","_this","this","_classCallCheck","isLocalStorageAvailable","AccessorUtilities","isLocalStorageAccessSafe","join","data","restore","on","save","length","text","window","localStorage","getItem","val","trigger","event","Event","bubbles","cancelable","get","dispatchEvent","setItem","reset","removeItem","off","Mousetrap","self","_originalStopCallback","stopCallback","enabled","e","element","combo","pause","unpause","__webpack_require__","r","__webpack_exports__","_line_highlighter__WEBPACK_IMPORTED_MODULE_0__","_blob_viewer__WEBPACK_IMPORTED_MODULE_1__","_zen_mode__WEBPACK_IMPORTED_MODULE_2__","_init_notes__WEBPACK_IMPORTED_MODULE_3__","_snippet_snippet_embed__WEBPACK_IMPORTED_MODULE_4__","document","addEventListener","LineHighlighter","BlobViewer","initNotes","ZenMode","snippetEmbed","TaskList","options","arguments","undefined","selector","dataType","fieldName","onSuccess","onError","errorMessages","response","_typeof","errors","Flash","init","disable","$","concat","taskList","update","bind","$target","target","patchData","axios","patch","attr","then","_ref","catch","err","InputSetter","hook","destroyed","config","eventWrapper","addEvents","setInputs","list","removeEvents","removeEventListener","selectedItem","detail","selected","Array","isArray","forEach","setInput","input","newValue","getAttribute","valueAttribute","inputAttribute","hasAttribute","setAttribute","tagName","value","textContent","destroy","initAuxiliaryViewer","initRichViewer","initMainViewers","auxiliaryViewer","querySelector","loadViewer","viewer","dataset","richType","initViewer","promise","module","default","error","Promise","all","viewerParam","url","resolve","innerHTML","html","$fileHolder","switcher","switcherBtns","querySelectorAll","copySourceBtn","simpleViewer","richViewer","initBindings","switchToInitialViewer","initialViewerName","location","hash","indexOf","switchToViewer","from","el","switchViewHandler","classList","contains","blur","currentTarget","preventDefault","remove","activeViewer","add","tooltip","name","_this2","newViewer","oldButton","newButton","oldViewer","toggleCopyButtonState","renderGFM","handleLocationHash","Object","assign","ISetter","CommentTypeToggle","opts","dropdownTrigger","dropdownList","noteTypeInput","submitButton","closeButton","reopenButton","droplab","DropLab","setConfig","push","normalizeNewlines","str","replace","autosize","Autosize","REGEX_QUICK_ACTIONS","Notes","notes_url","note_ids","last_fetched_at","view","enableGFM","defaultAutocompleteConfig","notes_classCallCheck","updateTargetButtons","updateComment","visibilityChange","cancelDiscussionForm","onAddDiffNote","onAddImageDiffNote","setupDiscussionNoteForm","onReplyToDiscussionNote","removeNote","cancelEdit","updateNote","addDiscussionNote","addNoteError","addNote","resetMainTargetForm","refresh","keydownNoteText","toggleCommitList","postComment","clearFlashWrapper","clearFlash","onHashChange","updatedNotesTrackingMap","noteable_url","URL","notesCountBadge","find","basePollingInterval","maxPollingSteps","$wrapperEl","isInMRPage","cleanBinding","addBinding","setPollingInterval","setupMainTargetNoteForm","collapseLongCommitList","setViewType","getPagePath","clone","addClass","insertAfter","getLocationHash","$anchor","getElementById","loadLazyDiff","instance","Cookies","showEditForm","removeAttachment","updateFormAttachment","onClickRetryLazyLoad","reenableTargetFormSubmitButton","$textarea","discussionNoteForm","editNote","myLastNote","isMetaKey","which","gon","current_user_id","closest","confirm","removeDiscussionNoteForm","removeNoteEditForm","interval","clearInterval","setInterval","pollingInterval","hidden","getContent","refreshing","headers","X-Last-Fetched-At","notes","each","i","note","renderNote","shouldReset","nthInterval","Math","pow","initRefresh","noteEntity","votesBlock","commands_changes","checkMergeRequestStatus","eq","loadAwardsHandler","awardsHandler","addAwardToEmojiBar","emoji_award","scrollToAwards","$note","localTimeAgo","updateNoteTargetSelector","$noteToCleanHighlight","$form","$notesList","discussion_html","renderDiscussionNote","valid","id","isNewNote","$newNote","animateAppendNote","setupNewNote","updateNotesCount","isUpdatedNote","isEditing","hasClass","initialContent","trim","currentContent","sanitizedNoteNote","isTextareaUntouched","putConflictEditWarningInPlace","$updatedNote","animateUpdateNote","commands_only","keys","addFlash","parentTimeline","discussionContainer","form","row","lineType","diffAvatarContainer","discussion_id","discussion_line_code","on_image","isParallelView","prevAll","first","diff_discussion_html","$discussion","after","$notes","contentContainerClass","split","append","children","gl","diffNotesCompileComponents","discussion_resolvable","renderDiscussionAvatar","changesDiscussionContainer","avatarHolder","createElement","click","createEvent","initEvent","formClone","setupNoteForm","removeClass","parents","initCommentTypeToggle","textarea","glForm","GLForm","formParentTimeline","$parentTimeline","isNewDiffComment","discussionId","mergeRequestId","ResolveService","toggleResolveForDiscussion","$targetNote","$noteEntityEl","revertNoteEditForm","replaceWith","$el","isAllowed","isInViewport","scrollToElement","show","scrollTo","$editForm","getEditFormSelector","$currentlyEditing","checkContentToAllowEditing","putEditFormInPlace","noteId","hide","insertBefore","enable","noteElId","prev","diffNoteApps","$destroy","notesTr","$diffFile","removeBadgeEvent","CustomEvent","badgeNumber","index","replyToDiscussionNote","replyLink","cleanForm","dataHolder","diffFileData","discussionID","focus","link","$link","showReplyInput","toggleDiffNote","newForm","clickEvent","$noteContainer","appendTo","addForm","hasNotes","replyButton","rowCssToAdd","_ref2","forceShow","_ref2$showReplyInput","nextRow","next","targetRow","is","lineTypeSelector","notesContentSelector","notesContent","isCurrentlyShown","showNow","toggleClass","blurEvent","filename","closebtn","closetext","reopenbtn","reopentext","$originalContentEl","originalContent","postUrl","targetId","targetType","markdownVersion","updateCount","parseInt","$retryButton","prop","$container","renderPlaceholderComponent","$errorContainer","$successContainer","_ref3","renderDiffContent","$element","$closestSystemCommitList","siblings","systemNotes","has","systemNote","$systemNote","headerMessage","_len","flashParams","_key","flashContainer","_construct","style","display","content","formData","serialize","formContent","_","escape","formAction","formContentOriginal","test","tempFormContent","executedCommands","filter","command","RegExp","commandDescription","description","toLowerCase","_ref4","uniqueId","isDiscussionNote","currentUsername","currentUserFullname","currentUserAvatar","discussionClass","$tempNote","_ref5","_this3","$submitBtn","noteUniqueId","systemNoteUniqueId","$notesContainer","$closeBtn","parent","isMainForm","isDiscussionForm","isDiscussionResolve","_this$getFormData","getFormData","hasQuickActions","stripQuickActions","createPlaceholderNote","current_username","current_user_fullname","current_user_avatar_url","createPlaceholderSystemNote","getQuickActionDescription","AjaxCache","GfmAutoComplete","dataSources","commands","post","res","notePosition","_JSON$parse","JSON","parse","x","y","width","height","addBadgeEvent","handleQuickActions","closestDiffFile","_this4","$editingNote","$noteBodyText","_this$getFormData2","cachedNoteBodyText","_ref6","updateNoteError","initDroplab","addTargetClass","Boolean","Vue","components","GlSkeletonLoading","render","lines","prepend","fileHolder","syntaxHighlight","noteIds","inArray","mrWidget","checkStatus","noteHtml","jQuery","factory","modules","installedModules","moduleId","exports","l","call","m","c","d","getter","o","defineProperty","configurable","enumerable","n","__esModule","object","property","prototype","hasOwnProperty","p","s","NodeArray","item","nodeList","slice","apply","className","parentNode","eventName","initCustomEvent","el1","container","updateTaskList","checkbox","disabled","changeEvent","changedEvent","checkboxes","checked","defaultPrevented","updateSource","incomplete","complete","escapePattern","incompletePattern","completePattern","itemPattern","startFencesPattern","endFencesPattern","itemsInParasPattern","source","itemIndex","clean","inCodeBlock","line","len","ref","results","match","fn","method","jquery__WEBPACK_IMPORTED_MODULE_0__","jquery__WEBPACK_IMPORTED_MODULE_0___default","highlightLineClass","fileHolderSelector","scrollFileHolder","_hash","setHash","highlightLine","clickHandler","highlightHash","bindEvents","newHash","range","clearHighlight","hashToRange","highlightRange","lineSelector","scrollOptions","offset","current","lineNumber","shiftKey","matches","reverse","firstLineNumber","lastLineNumber","__setLocationHash__","history","pushState","title","_notes__WEBPACK_IMPORTED_MODULE_0__","dataEl","notesUrl","notesIds","now","diffView","initialize","_window$location","protocol","host","pathname","shareBtn","embedBtn","snippetUrlArea","embedAction","innerText","scriptTag","dropzoneInput","handlePaste","pasteText","addFileToForm","updateAttachingMessage","isImage","getFilename","uploadFile","$attachButton","$attachingFileMessage","$cancelButton","$retryLink","$uploadProgress","$uploadingErrorContainer","$uploadingErrorMessage","$uploadingProgressContainer","uploadsPath","uploads_path","maxFileSize","max_file_size","formTextarea","wrap","$mdArea","setupMarkdownPreview","$formDropzone","dropzone","dictDefaultMessage","clickable","paramName","maxFilesize","uploadMultiple","csrf","previewContainer","processing","alert","dragover","css","dragleave","drop","success","header","processingFileCount","getQueuedFiles","getUploadingFiles","shouldPad","markdown","file","errorMessage","xhr","message","responseText","isString","totaluploadprogress","totalUploadProgress","files","round","sending","removedfile","queuecomplete","child","stopPropagation","Dropzone","forElement","removeAllFiles","dropzoneInstance","failedFiles","map","failedFile","status","ERROR","accepted","addFile","pasteEvent","originalEvent","clipboardData","items","image","getAsFile","type","formattedText","caretStart","selectionStart","caretEnd","selectionEnd","textEnd","beforeSelection","substring","afterSelection","setSelectionRange","scrollHeight","path","getData","closeSpinner","FormData","md","$child","insertToTextArea","messageContainer","attachingMessage","filesCount","autoDiscover","GFMConfig","setupForm","clearEventListeners","autoComplete","isNewForm","utils","disableButtonIfEmptyField","setup","addEventListeners","addMarkdownListeners","isAutosizeable","setupAutosize","setHeightData","destroyAutosize","setTimeout","outerHeight","removeMarkdownListeners","active_backdrop","active_textarea","enter","exit","keyCode","backdrop","removeAttr","$dropzone","zen_area"],"mappings":"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","file":"pages.snippets.show.10aca27c.chunk.js","sourcesContent":["/* eslint-disable no-param-reassign, prefer-template, no-void, consistent-return */\n\nimport AccessorUtilities from './lib/utils/accessor';\n\nexport default class Autosave {\n  constructor(field, key) {\n    this.field = field;\n\n    this.isLocalStorageAvailable = AccessorUtilities.isLocalStorageAccessSafe();\n    if (key.join != null) {\n      key = key.join('/');\n    }\n    this.key = 'autosave/' + key;\n    this.field.data('autosave', this);\n    this.restore();\n    this.field.on('input', () => this.save());\n  }\n\n  restore() {\n    if (!this.isLocalStorageAvailable) return;\n    if (!this.field.length) return;\n\n    const text = window.localStorage.getItem(this.key);\n\n    if ((text != null ? text.length : void 0) > 0) {\n      this.field.val(text);\n    }\n\n    this.field.trigger('input');\n    // v-model does not update with jQuery trigger\n    // https://github.com/vuejs/vue/issues/2804#issuecomment-216968137\n    const event = new Event('change', { bubbles: true, cancelable: false });\n    const field = this.field.get(0);\n    if (field) {\n      field.dispatchEvent(event);\n    }\n  }\n\n  save() {\n    if (!this.field.length) return;\n\n    const text = this.field.val();\n\n    if (this.isLocalStorageAvailable && (text != null ? text.length : void 0) > 0) {\n      return window.localStorage.setItem(this.key, text);\n    }\n\n    return this.reset();\n  }\n\n  reset() {\n    if (!this.isLocalStorageAvailable) return;\n\n    return window.localStorage.removeItem(this.key);\n  }\n\n  dispose() {\n    this.field.off('input');\n  }\n}\n","/**\n * adds a pause and unpause method to Mousetrap\n * this allows you to enable or disable keyboard shortcuts\n * without having to reset Mousetrap and rebind everything\n */\n/* global Mousetrap:true */\nMousetrap = (function(Mousetrap) {\n    var self = Mousetrap,\n        _originalStopCallback = self.stopCallback,\n        enabled = true;\n\n    self.stopCallback = function(e, element, combo) {\n        if (!enabled) {\n            return true;\n        }\n\n        return _originalStopCallback(e, element, combo);\n    };\n\n    self.pause = function() {\n        enabled = false;\n    };\n\n    self.unpause = function() {\n        enabled = true;\n    };\n\n    return self;\n}) (Mousetrap);\n","import LineHighlighter from '~/line_highlighter';\nimport BlobViewer from '~/blob/viewer';\nimport ZenMode from '~/zen_mode';\nimport initNotes from '~/init_notes';\nimport snippetEmbed from '~/snippet/snippet_embed';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  new LineHighlighter(); // eslint-disable-line no-new\n  new BlobViewer(); // eslint-disable-line no-new\n  initNotes();\n  new ZenMode(); // eslint-disable-line no-new\n  snippetEmbed();\n});\n","import $ from 'jquery';\nimport 'deckar01-task_list';\nimport axios from './lib/utils/axios_utils';\nimport Flash from './flash';\n\nexport default class TaskList {\n  constructor(options = {}) {\n    this.selector = options.selector;\n    this.dataType = options.dataType;\n    this.fieldName = options.fieldName;\n    this.onSuccess = options.onSuccess || (() => {});\n    this.onError = function showFlash(e) {\n      let errorMessages = '';\n\n      if (e.response.data && typeof e.response.data === 'object') {\n        errorMessages = e.response.data.errors.join(' ');\n      }\n\n      return new Flash(errorMessages || 'Update failed', 'alert');\n    };\n\n    this.init();\n  }\n\n  init() {\n    // Prevent duplicate event bindings\n    this.disable();\n    $(`${this.selector} .js-task-list-container`).taskList('enable');\n    $(document).on(\n      'tasklist:changed',\n      `${this.selector} .js-task-list-container`,\n      this.update.bind(this),\n    );\n  }\n\n  disable() {\n    $(`${this.selector} .js-task-list-container`).taskList('disable');\n    $(document).off('tasklist:changed', `${this.selector} .js-task-list-container`);\n  }\n\n  update(e) {\n    const $target = $(e.target);\n    const patchData = {};\n    patchData[this.dataType] = {\n      [this.fieldName]: $target.val(),\n    };\n\n    return axios\n      .patch($target.data('updateUrl') || $('form.js-issuable-update').attr('action'), patchData)\n      .then(({ data }) => this.onSuccess(data))\n      .catch(err => this.onError(err));\n  }\n}\n","/* eslint-disable */\n\nconst InputSetter = {\n  init(hook) {\n    this.hook = hook;\n    this.destroyed = false;\n    this.config = hook.config.InputSetter || (this.hook.config.InputSetter = {});\n\n    this.eventWrapper = {};\n\n    this.addEvents();\n  },\n\n  addEvents() {\n    this.eventWrapper.setInputs = this.setInputs.bind(this);\n    this.hook.list.list.addEventListener('click.dl', this.eventWrapper.setInputs);\n  },\n\n  removeEvents() {\n    this.hook.list.list.removeEventListener('click.dl', this.eventWrapper.setInputs);\n  },\n\n  setInputs(e) {\n    if (this.destroyed) return;\n\n    const selectedItem = e.detail.selected;\n\n    if (!Array.isArray(this.config)) this.config = [this.config];\n\n    this.config.forEach(config => this.setInput(config, selectedItem));\n  },\n\n  setInput(config, selectedItem) {\n    const input = config.input || this.hook.trigger;\n    const newValue = selectedItem.getAttribute(config.valueAttribute);\n    const inputAttribute = config.inputAttribute;\n\n    if (input.hasAttribute(inputAttribute)) return input.setAttribute(inputAttribute, newValue);\n    if (input.tagName === 'INPUT') return (input.value = newValue);\n    return (input.textContent = newValue);\n  },\n\n  destroy() {\n    this.destroyed = true;\n\n    this.removeEvents();\n  },\n};\n\nexport default InputSetter;\n","import $ from 'jquery';\nimport Flash from '../../flash';\nimport { handleLocationHash } from '../../lib/utils/common_utils';\nimport axios from '../../lib/utils/axios_utils';\n\nexport default class BlobViewer {\n  constructor() {\n    BlobViewer.initAuxiliaryViewer();\n    BlobViewer.initRichViewer();\n\n    this.initMainViewers();\n  }\n\n  static initAuxiliaryViewer() {\n    const auxiliaryViewer = document.querySelector('.blob-viewer[data-type=\"auxiliary\"]');\n    if (!auxiliaryViewer) return;\n\n    BlobViewer.loadViewer(auxiliaryViewer);\n  }\n\n  static initRichViewer() {\n    const viewer = document.querySelector('.blob-viewer[data-type=\"rich\"]');\n    if (!viewer || !viewer.dataset.richType) return;\n\n    const initViewer = promise =>\n      promise\n        .then(module => module.default(viewer))\n        .catch(error => {\n          Flash('Error loading file viewer.');\n          throw error;\n        });\n\n    switch (viewer.dataset.richType) {\n      case 'balsamiq':\n        initViewer(import(/* webpackChunkName: 'balsamiq_viewer' */ '../balsamiq_viewer'));\n        break;\n      case 'notebook':\n        initViewer(import(/* webpackChunkName: 'notebook_viewer' */ '../notebook_viewer'));\n        break;\n      case 'pdf':\n        initViewer(import(/* webpackChunkName: 'pdf_viewer' */ '../pdf_viewer'));\n        break;\n      case 'sketch':\n        initViewer(import(/* webpackChunkName: 'sketch_viewer' */ '../sketch_viewer'));\n        break;\n      case 'stl':\n        initViewer(import(/* webpackChunkName: 'stl_viewer' */ '../stl_viewer'));\n        break;\n      default:\n        break;\n    }\n  }\n\n  initMainViewers() {\n    this.$fileHolder = $('.file-holder');\n    if (!this.$fileHolder.length) return;\n\n    this.switcher = document.querySelector('.js-blob-viewer-switcher');\n    this.switcherBtns = document.querySelectorAll('.js-blob-viewer-switch-btn');\n    this.copySourceBtn = document.querySelector('.js-copy-blob-source-btn');\n\n    this.simpleViewer = this.$fileHolder[0].querySelector('.blob-viewer[data-type=\"simple\"]');\n    this.richViewer = this.$fileHolder[0].querySelector('.blob-viewer[data-type=\"rich\"]');\n\n    this.initBindings();\n\n    this.switchToInitialViewer();\n  }\n\n  switchToInitialViewer() {\n    const initialViewer = this.$fileHolder[0].querySelector('.blob-viewer:not(.hidden)');\n    let initialViewerName = initialViewer.getAttribute('data-type');\n\n    if (this.switcher && window.location.hash.indexOf('#L') === 0) {\n      initialViewerName = 'simple';\n    }\n\n    this.switchToViewer(initialViewerName);\n  }\n\n  initBindings() {\n    if (this.switcherBtns.length) {\n      Array.from(this.switcherBtns).forEach(el => {\n        el.addEventListener('click', this.switchViewHandler.bind(this));\n      });\n    }\n\n    if (this.copySourceBtn) {\n      this.copySourceBtn.addEventListener('click', () => {\n        if (this.copySourceBtn.classList.contains('disabled')) return this.copySourceBtn.blur();\n\n        return this.switchToViewer('simple');\n      });\n    }\n  }\n\n  switchViewHandler(e) {\n    const target = e.currentTarget;\n\n    e.preventDefault();\n\n    this.switchToViewer(target.getAttribute('data-viewer'));\n  }\n\n  toggleCopyButtonState() {\n    if (!this.copySourceBtn) return;\n\n    if (this.simpleViewer.getAttribute('data-loaded')) {\n      this.copySourceBtn.setAttribute('title', 'Copy source to clipboard');\n      this.copySourceBtn.classList.remove('disabled');\n    } else if (this.activeViewer === this.simpleViewer) {\n      this.copySourceBtn.setAttribute(\n        'title',\n        'Wait for the source to load to copy it to the clipboard',\n      );\n      this.copySourceBtn.classList.add('disabled');\n    } else {\n      this.copySourceBtn.setAttribute('title', 'Switch to the source to copy it to the clipboard');\n      this.copySourceBtn.classList.add('disabled');\n    }\n\n    $(this.copySourceBtn).tooltip('_fixTitle');\n  }\n\n  switchToViewer(name) {\n    const newViewer = this.$fileHolder[0].querySelector(`.blob-viewer[data-type='${name}']`);\n    if (this.activeViewer === newViewer) return;\n\n    const oldButton = document.querySelector('.js-blob-viewer-switch-btn.active');\n    const newButton = document.querySelector(`.js-blob-viewer-switch-btn[data-viewer='${name}']`);\n    const oldViewer = this.$fileHolder[0].querySelector(`.blob-viewer:not([data-type='${name}'])`);\n\n    if (oldButton) {\n      oldButton.classList.remove('active');\n    }\n\n    if (newButton) {\n      newButton.classList.add('active');\n      newButton.blur();\n    }\n\n    if (oldViewer) {\n      oldViewer.classList.add('hidden');\n    }\n\n    newViewer.classList.remove('hidden');\n\n    this.activeViewer = newViewer;\n\n    this.toggleCopyButtonState();\n\n    BlobViewer.loadViewer(newViewer)\n      .then(viewer => {\n        $(viewer).renderGFM();\n\n        this.$fileHolder.trigger('highlight:line');\n        handleLocationHash();\n\n        this.toggleCopyButtonState();\n      })\n      .catch(() => new Flash('Error loading viewer'));\n  }\n\n  static loadViewer(viewerParam) {\n    const viewer = viewerParam;\n    const url = viewer.getAttribute('data-url');\n\n    if (!url || viewer.getAttribute('data-loaded') || viewer.getAttribute('data-loading')) {\n      return Promise.resolve(viewer);\n    }\n\n    viewer.setAttribute('data-loading', 'true');\n\n    return axios.get(url).then(({ data }) => {\n      viewer.innerHTML = data.html;\n      viewer.setAttribute('data-loaded', 'true');\n\n      return viewer;\n    });\n  }\n}\n","import DropLab from './droplab/drop_lab';\nimport ISetter from './droplab/plugins/input_setter';\n\n// Todo: Remove this when fixing issue in input_setter plugin\nconst InputSetter = Object.assign({}, ISetter);\n\nclass CommentTypeToggle {\n  constructor(opts = {}) {\n    this.dropdownTrigger = opts.dropdownTrigger;\n    this.dropdownList = opts.dropdownList;\n    this.noteTypeInput = opts.noteTypeInput;\n    this.submitButton = opts.submitButton;\n    this.closeButton = opts.closeButton;\n    this.reopenButton = opts.reopenButton;\n  }\n\n  initDroplab() {\n    this.droplab = new DropLab();\n\n    const config = this.setConfig();\n\n    this.droplab.init(this.dropdownTrigger, this.dropdownList, [InputSetter], config);\n  }\n\n  setConfig() {\n    const config = {\n      InputSetter: [\n        {\n          input: this.noteTypeInput,\n          valueAttribute: 'data-value',\n        },\n        {\n          input: this.submitButton,\n          valueAttribute: 'data-submit-text',\n        },\n      ],\n    };\n\n    if (this.closeButton) {\n      config.InputSetter.push(\n        {\n          input: this.closeButton,\n          valueAttribute: 'data-close-text',\n        },\n        {\n          input: this.closeButton,\n          valueAttribute: 'data-close-text',\n          inputAttribute: 'data-alternative-text',\n        },\n      );\n    }\n\n    if (this.reopenButton) {\n      config.InputSetter.push(\n        {\n          input: this.reopenButton,\n          valueAttribute: 'data-reopen-text',\n        },\n        {\n          input: this.reopenButton,\n          valueAttribute: 'data-reopen-text',\n          inputAttribute: 'data-alternative-text',\n        },\n      );\n    }\n\n    return config;\n  }\n}\n\nexport default CommentTypeToggle;\n","/* eslint-disable no-restricted-properties, func-names, no-var, camelcase,\nno-unused-expressions, one-var, default-case,\nprefer-template, consistent-return, no-alert, no-return-assign,\nno-param-reassign, prefer-arrow-callback, no-else-return, vars-on-top,\nno-unused-vars, no-shadow, no-useless-escape, class-methods-use-this */\n\n/* global ResolveService */\n/* global mrRefreshWidgetUrl */\n\nimport $ from 'jquery';\nimport _ from 'underscore';\nimport Cookies from 'js-cookie';\nimport Autosize from 'autosize';\nimport 'vendor/jquery.caret'; // required by jquery.atwho\nimport 'vendor/jquery.atwho';\nimport AjaxCache from '~/lib/utils/ajax_cache';\nimport Vue from 'vue';\nimport syntaxHighlight from '~/syntax_highlight';\nimport { GlSkeletonLoading } from '@gitlab/ui';\nimport axios from './lib/utils/axios_utils';\nimport { getLocationHash } from './lib/utils/url_utility';\nimport Flash from './flash';\nimport { defaultAutocompleteConfig } from './gfm_auto_complete';\nimport CommentTypeToggle from './comment_type_toggle';\nimport GLForm from './gl_form';\nimport loadAwardsHandler from './awards_handler';\nimport Autosave from './autosave';\nimport TaskList from './task_list';\nimport {\n  isInViewport,\n  getPagePath,\n  scrollToElement,\n  isMetaKey,\n  isInMRPage,\n} from './lib/utils/common_utils';\nimport imageDiffHelper from './image_diff/helpers/index';\nimport { localTimeAgo } from './lib/utils/datetime_utility';\n\nwindow.autosize = Autosize;\n\nfunction normalizeNewlines(str) {\n  return str.replace(/\\r\\n/g, '\\n');\n}\n\nconst MAX_VISIBLE_COMMIT_LIST_COUNT = 3;\nconst REGEX_QUICK_ACTIONS = /^\\/\\w+.*$/gm;\n\nexport default class Notes {\n  static initialize(notes_url, note_ids, last_fetched_at, view, enableGFM) {\n    if (!this.instance) {\n      this.instance = new Notes(notes_url, note_ids, last_fetched_at, view, enableGFM);\n    }\n  }\n\n  static getInstance() {\n    return this.instance;\n  }\n\n  constructor(notes_url, note_ids, last_fetched_at, view, enableGFM = defaultAutocompleteConfig) {\n    this.updateTargetButtons = this.updateTargetButtons.bind(this);\n    this.updateComment = this.updateComment.bind(this);\n    this.visibilityChange = this.visibilityChange.bind(this);\n    this.cancelDiscussionForm = this.cancelDiscussionForm.bind(this);\n    this.onAddDiffNote = this.onAddDiffNote.bind(this);\n    this.onAddImageDiffNote = this.onAddImageDiffNote.bind(this);\n    this.setupDiscussionNoteForm = this.setupDiscussionNoteForm.bind(this);\n    this.onReplyToDiscussionNote = this.onReplyToDiscussionNote.bind(this);\n    this.removeNote = this.removeNote.bind(this);\n    this.cancelEdit = this.cancelEdit.bind(this);\n    this.updateNote = this.updateNote.bind(this);\n    this.addDiscussionNote = this.addDiscussionNote.bind(this);\n    this.addNoteError = this.addNoteError.bind(this);\n    this.addNote = this.addNote.bind(this);\n    this.resetMainTargetForm = this.resetMainTargetForm.bind(this);\n    this.refresh = this.refresh.bind(this);\n    this.keydownNoteText = this.keydownNoteText.bind(this);\n    this.toggleCommitList = this.toggleCommitList.bind(this);\n    this.postComment = this.postComment.bind(this);\n    this.clearFlashWrapper = this.clearFlash.bind(this);\n    this.onHashChange = this.onHashChange.bind(this);\n\n    this.notes_url = notes_url;\n    this.note_ids = note_ids;\n    this.enableGFM = enableGFM;\n    // Used to keep track of updated notes while people are editing things\n    this.updatedNotesTrackingMap = {};\n    this.last_fetched_at = last_fetched_at;\n    this.noteable_url = document.URL;\n    this.notesCountBadge ||\n      (this.notesCountBadge = $('.issuable-details').find('.notes-tab .badge'));\n    this.basePollingInterval = 15000;\n    this.maxPollingSteps = 4;\n\n    this.$wrapperEl = isInMRPage() ? $(document).find('.diffs') : $(document);\n    this.cleanBinding();\n    this.addBinding();\n    this.setPollingInterval();\n    this.setupMainTargetNoteForm(enableGFM);\n    this.taskList = new TaskList({\n      dataType: 'note',\n      fieldName: 'note',\n      selector: '.notes',\n    });\n    this.collapseLongCommitList();\n    this.setViewType(view);\n\n    // We are in the Merge Requests page so we need another edit form for Changes tab\n    if (getPagePath(1) === 'merge_requests') {\n      $('.note-edit-form')\n        .clone()\n        .addClass('mr-note-edit-form')\n        .insertAfter('.note-edit-form');\n    }\n\n    const hash = getLocationHash();\n    const $anchor = hash && document.getElementById(hash);\n\n    if ($anchor) {\n      this.loadLazyDiff({ currentTarget: $anchor });\n    }\n  }\n\n  setViewType(view) {\n    this.view = Cookies.get('diff_view') || view;\n  }\n\n  addBinding() {\n    // Edit note link\n    this.$wrapperEl.on('click', '.js-note-edit', this.showEditForm.bind(this));\n    this.$wrapperEl.on('click', '.note-edit-cancel', this.cancelEdit);\n    // Reopen and close actions for Issue/MR combined with note form submit\n    this.$wrapperEl.on('click', '.js-comment-submit-button', this.postComment);\n    this.$wrapperEl.on('click', '.js-comment-save-button', this.updateComment);\n    this.$wrapperEl.on('keyup input', '.js-note-text', this.updateTargetButtons);\n    // resolve a discussion\n    this.$wrapperEl.on('click', '.js-comment-resolve-button', this.postComment);\n    // remove a note (in general)\n    this.$wrapperEl.on('click', '.js-note-delete', this.removeNote);\n    // delete note attachment\n    this.$wrapperEl.on('click', '.js-note-attachment-delete', this.removeAttachment);\n    // update the file name when an attachment is selected\n    this.$wrapperEl.on('change', '.js-note-attachment-input', this.updateFormAttachment);\n    // reply to diff/discussion notes\n    this.$wrapperEl.on('click', '.js-discussion-reply-button', this.onReplyToDiscussionNote);\n    // add diff note\n    this.$wrapperEl.on('click', '.js-add-diff-note-button', this.onAddDiffNote);\n    // add diff note for images\n    this.$wrapperEl.on('click', '.js-add-image-diff-note-button', this.onAddImageDiffNote);\n    // hide diff note form\n    this.$wrapperEl.on('click', '.js-close-discussion-note-form', this.cancelDiscussionForm);\n    // toggle commit list\n    this.$wrapperEl.on('click', '.system-note-commit-list-toggler', this.toggleCommitList);\n\n    this.$wrapperEl.on('click', '.js-toggle-lazy-diff', this.loadLazyDiff);\n    this.$wrapperEl.on(\n      'click',\n      '.js-toggle-lazy-diff-retry-button',\n      this.onClickRetryLazyLoad.bind(this),\n    );\n\n    // fetch notes when tab becomes visible\n    this.$wrapperEl.on('visibilitychange', this.visibilityChange);\n    // when issue status changes, we need to refresh data\n    this.$wrapperEl.on('issuable:change', this.refresh);\n    // ajax:events that happen on Form when actions like Reopen, Close are performed on Issues and MRs.\n    this.$wrapperEl.on('ajax:success', '.js-main-target-form', this.addNote);\n    this.$wrapperEl.on('ajax:success', '.js-discussion-note-form', this.addDiscussionNote);\n    this.$wrapperEl.on('ajax:success', '.js-main-target-form', this.resetMainTargetForm);\n    this.$wrapperEl.on(\n      'ajax:complete',\n      '.js-main-target-form',\n      this.reenableTargetFormSubmitButton,\n    );\n    // when a key is clicked on the notes\n    this.$wrapperEl.on('keydown', '.js-note-text', this.keydownNoteText);\n    // When the URL fragment/hash has changed, `#note_xxx`\n    $(window).on('hashchange', this.onHashChange);\n  }\n\n  cleanBinding() {\n    this.$wrapperEl.off('click', '.js-note-edit');\n    this.$wrapperEl.off('click', '.note-edit-cancel');\n    this.$wrapperEl.off('click', '.js-note-delete');\n    this.$wrapperEl.off('click', '.js-note-attachment-delete');\n    this.$wrapperEl.off('click', '.js-discussion-reply-button');\n    this.$wrapperEl.off('click', '.js-add-diff-note-button');\n    this.$wrapperEl.off('click', '.js-add-image-diff-note-button');\n    this.$wrapperEl.off('visibilitychange');\n    this.$wrapperEl.off('keyup input', '.js-note-text');\n    this.$wrapperEl.off('click', '.js-note-target-reopen');\n    this.$wrapperEl.off('click', '.js-note-target-close');\n    this.$wrapperEl.off('keydown', '.js-note-text');\n    this.$wrapperEl.off('click', '.js-comment-resolve-button');\n    this.$wrapperEl.off('click', '.system-note-commit-list-toggler');\n    this.$wrapperEl.off('click', '.js-toggle-lazy-diff');\n    this.$wrapperEl.off('click', '.js-toggle-lazy-diff-retry-button');\n    this.$wrapperEl.off('ajax:success', '.js-main-target-form');\n    this.$wrapperEl.off('ajax:success', '.js-discussion-note-form');\n    this.$wrapperEl.off('ajax:complete', '.js-main-target-form');\n    $(window).off('hashchange', this.onHashChange);\n  }\n\n  static initCommentTypeToggle(form) {\n    const dropdownTrigger = form.querySelector('.js-comment-type-dropdown .dropdown-toggle');\n    const dropdownList = form.querySelector('.js-comment-type-dropdown .dropdown-menu');\n    const noteTypeInput = form.querySelector('#note_type');\n    const submitButton = form.querySelector('.js-comment-type-dropdown .js-comment-submit-button');\n    const closeButton = form.querySelector('.js-note-target-close');\n    const reopenButton = form.querySelector('.js-note-target-reopen');\n\n    const commentTypeToggle = new CommentTypeToggle({\n      dropdownTrigger,\n      dropdownList,\n      noteTypeInput,\n      submitButton,\n      closeButton,\n      reopenButton,\n    });\n\n    commentTypeToggle.initDroplab();\n  }\n\n  keydownNoteText(e) {\n    var $textarea,\n      discussionNoteForm,\n      editNote,\n      myLastNote,\n      myLastNoteEditBtn,\n      newText,\n      originalText;\n    if (isMetaKey(e)) {\n      return;\n    }\n\n    $textarea = $(e.target);\n    // Edit previous note when UP arrow is hit\n    switch (e.which) {\n      case 38:\n        if ($textarea.val() !== '') {\n          return;\n        }\n        myLastNote = $(\n          `li.note[data-author-id='${gon.current_user_id}'][data-editable]:last`,\n          $textarea.closest('.note, .notes_holder, #notes'),\n        );\n        if (myLastNote.length) {\n          myLastNoteEditBtn = myLastNote.find('.js-note-edit');\n          return myLastNoteEditBtn.trigger('click', [true, myLastNote]);\n        }\n        break;\n      // Cancel creating diff note or editing any note when ESCAPE is hit\n      case 27:\n        discussionNoteForm = $textarea.closest('.js-discussion-note-form');\n        if (discussionNoteForm.length) {\n          if ($textarea.val() !== '') {\n            if (!window.confirm('Are you sure you want to cancel creating this comment?')) {\n              return;\n            }\n          }\n          this.removeDiscussionNoteForm(discussionNoteForm);\n          return;\n        }\n        editNote = $textarea.closest('.note');\n        if (editNote.length) {\n          originalText = $textarea.closest('form').data('originalNote');\n          newText = $textarea.val();\n          if (originalText !== newText) {\n            if (!window.confirm('Are you sure you want to cancel editing this comment?')) {\n              return;\n            }\n          }\n          return this.removeNoteEditForm(editNote);\n        }\n    }\n  }\n\n  initRefresh() {\n    if (Notes.interval) {\n      clearInterval(Notes.interval);\n    }\n    return (Notes.interval = setInterval(\n      (function(_this) {\n        return function() {\n          return _this.refresh();\n        };\n      })(this),\n      this.pollingInterval,\n    ));\n  }\n\n  refresh() {\n    if (!document.hidden) {\n      return this.getContent();\n    }\n  }\n\n  getContent() {\n    if (this.refreshing) {\n      return;\n    }\n\n    this.refreshing = true;\n\n    axios\n      .get(`${this.notes_url}?html=true`, {\n        headers: {\n          'X-Last-Fetched-At': this.last_fetched_at,\n        },\n      })\n      .then(({ data }) => {\n        const { notes } = data;\n        this.last_fetched_at = data.last_fetched_at;\n        this.setPollingInterval(data.notes.length);\n        $.each(notes, (i, note) => this.renderNote(note));\n\n        this.refreshing = false;\n      })\n      .catch(() => {\n        this.refreshing = false;\n      });\n  }\n\n  /**\n   * Increase @pollingInterval up to 120 seconds on every function call,\n   * if `shouldReset` has a truthy value, 'null' or 'undefined' the variable\n   * will reset to @basePollingInterval.\n   *\n   * Note: this function is used to gradually increase the polling interval\n   * if there aren't new notes coming from the server\n   */\n  setPollingInterval(shouldReset) {\n    var nthInterval;\n    if (shouldReset == null) {\n      shouldReset = true;\n    }\n    nthInterval = this.basePollingInterval * Math.pow(2, this.maxPollingSteps - 1);\n    if (shouldReset) {\n      this.pollingInterval = this.basePollingInterval;\n    } else if (this.pollingInterval < nthInterval) {\n      this.pollingInterval *= 2;\n    }\n    return this.initRefresh();\n  }\n\n  handleQuickActions(noteEntity) {\n    var votesBlock;\n    if (noteEntity.commands_changes) {\n      if ('merge' in noteEntity.commands_changes) {\n        Notes.checkMergeRequestStatus();\n      }\n\n      if ('emoji_award' in noteEntity.commands_changes) {\n        votesBlock = $('.js-awards-block').eq(0);\n\n        loadAwardsHandler()\n          .then(awardsHandler => {\n            awardsHandler.addAwardToEmojiBar(votesBlock, noteEntity.commands_changes.emoji_award);\n            awardsHandler.scrollToAwards();\n          })\n          .catch(() => {\n            // ignore\n          });\n      }\n    }\n  }\n\n  setupNewNote($note) {\n    // Update datetime format on the recent note\n    localTimeAgo($note.find('.js-timeago'), false);\n\n    this.collapseLongCommitList();\n    this.taskList.init();\n\n    // This stops the note highlight, #note_xxx`, from being removed after real time update\n    // The `:target` selector does not re-evaluate after we replace element in the DOM\n    Notes.updateNoteTargetSelector($note);\n    this.$noteToCleanHighlight = $note;\n  }\n\n  onHashChange() {\n    if (this.$noteToCleanHighlight) {\n      Notes.updateNoteTargetSelector(this.$noteToCleanHighlight);\n    }\n\n    this.$noteToCleanHighlight = null;\n  }\n\n  static updateNoteTargetSelector($note) {\n    const hash = getLocationHash();\n    // Needs to be an explicit true/false for the jQuery `toggleClass(force)`\n    const addTargetClass = Boolean(hash && $note.filter(`#${hash}`).length > 0);\n    $note.toggleClass('target', addTargetClass);\n  }\n\n  /**\n   * Render note in main comments area.\n   *\n   * Note: for rendering inline notes use renderDiscussionNote\n   */\n  renderNote(noteEntity, $form, $notesList = $('.main-notes-list')) {\n    if (noteEntity.discussion_html) {\n      return this.renderDiscussionNote(noteEntity, $form);\n    }\n\n    if (!noteEntity.valid) {\n      if (noteEntity.errors && noteEntity.errors.commands_only) {\n        if (noteEntity.commands_changes && Object.keys(noteEntity.commands_changes).length > 0) {\n          $notesList.find('.system-note.being-posted').remove();\n        }\n        this.addFlash(noteEntity.errors.commands_only, 'notice', this.parentTimeline.get(0));\n        this.refresh();\n      }\n      return;\n    }\n\n    const $note = $notesList.find(`#note_${noteEntity.id}`);\n    if (Notes.isNewNote(noteEntity, this.note_ids)) {\n      if (isInMRPage()) {\n        return;\n      }\n\n      this.note_ids.push(noteEntity.id);\n\n      if ($notesList.length) {\n        $notesList.find('.system-note.being-posted').remove();\n      }\n      const $newNote = Notes.animateAppendNote(noteEntity.html, $notesList);\n\n      this.setupNewNote($newNote);\n      this.refresh();\n      return this.updateNotesCount(1);\n    } else if (Notes.isUpdatedNote(noteEntity, $note)) {\n      // The server can send the same update multiple times so we need to make sure to only update once per actual update.\n      const isEditing = $note.hasClass('is-editing');\n      const initialContent = normalizeNewlines(\n        $note\n          .find('.original-note-content')\n          .text()\n          .trim(),\n      );\n      const $textarea = $note.find('.js-note-text');\n      const currentContent = $textarea.val();\n      // There can be CRLF vs LF mismatches if we don't sanitize and compare the same way\n      const sanitizedNoteNote = normalizeNewlines(noteEntity.note);\n      const isTextareaUntouched =\n        currentContent === initialContent || currentContent === sanitizedNoteNote;\n\n      if (isEditing && isTextareaUntouched) {\n        $textarea.val(noteEntity.note);\n        this.updatedNotesTrackingMap[noteEntity.id] = noteEntity;\n      } else if (isEditing && !isTextareaUntouched) {\n        this.putConflictEditWarningInPlace(noteEntity, $note);\n        this.updatedNotesTrackingMap[noteEntity.id] = noteEntity;\n      } else {\n        const $updatedNote = Notes.animateUpdateNote(noteEntity.html, $note);\n        this.setupNewNote($updatedNote);\n      }\n    }\n  }\n\n  isParallelView() {\n    return Cookies.get('diff_view') === 'parallel';\n  }\n\n  /**\n   * Render note in discussion area. To render inline notes use renderDiscussionNote.\n   */\n  renderDiscussionNote(noteEntity, $form) {\n    var discussionContainer, form, row, lineType, diffAvatarContainer;\n\n    if (!Notes.isNewNote(noteEntity, this.note_ids)) {\n      return;\n    }\n    this.note_ids.push(noteEntity.id);\n\n    form = $form || $(`.js-discussion-note-form[data-discussion-id=\"${noteEntity.discussion_id}\"]`);\n    row =\n      form.length || !noteEntity.discussion_line_code\n        ? form.closest('tr')\n        : $(`#${noteEntity.discussion_line_code}`);\n\n    if (noteEntity.on_image) {\n      row = form;\n    }\n\n    lineType = this.isParallelView() ? form.find('#line_type').val() : 'old';\n    diffAvatarContainer = row\n      .prevAll('.line_holder')\n      .first()\n      .find('.js-avatar-container.' + lineType + '_line');\n    // is this the first note of discussion?\n    discussionContainer = $(`.notes[data-discussion-id=\"${noteEntity.discussion_id}\"]`);\n    if (!discussionContainer.length) {\n      discussionContainer = form.closest('.discussion').find('.notes');\n    }\n    if (discussionContainer.length === 0) {\n      if (noteEntity.diff_discussion_html) {\n        var $discussion = $(noteEntity.diff_discussion_html).renderGFM();\n\n        if (!this.isParallelView() || row.hasClass('js-temp-notes-holder') || noteEntity.on_image) {\n          // insert the note and the reply button after the temp row\n          row.after($discussion);\n        } else {\n          // Merge new discussion HTML in\n          var $notes = $discussion.find(`.notes[data-discussion-id=\"${noteEntity.discussion_id}\"]`);\n          var contentContainerClass =\n            '.' +\n            $notes\n              .closest('.notes_content')\n              .attr('class')\n              .split(' ')\n              .join('.');\n\n          row\n            .find(contentContainerClass + ' .content')\n            .append($notes.closest('.content').children());\n        }\n      } else {\n        Notes.animateAppendNote(noteEntity.discussion_html, $('.main-notes-list'));\n      }\n    } else {\n      // append new note to all matching discussions\n      Notes.animateAppendNote(noteEntity.html, discussionContainer);\n    }\n\n    if (typeof gl.diffNotesCompileComponents !== 'undefined' && noteEntity.discussion_resolvable) {\n      gl.diffNotesCompileComponents();\n\n      this.renderDiscussionAvatar(diffAvatarContainer, noteEntity);\n    }\n\n    localTimeAgo($('.js-timeago'), false);\n    Notes.checkMergeRequestStatus();\n    return this.updateNotesCount(1);\n  }\n\n  getLineHolder(changesDiscussionContainer) {\n    return $(changesDiscussionContainer)\n      .closest('.notes_holder')\n      .prevAll('.line_holder')\n      .first()\n      .get(0);\n  }\n\n  renderDiscussionAvatar(diffAvatarContainer, noteEntity) {\n    var avatarHolder = diffAvatarContainer.find('.diff-comment-avatar-holders');\n\n    if (!avatarHolder.length) {\n      avatarHolder = document.createElement('diff-note-avatars');\n      avatarHolder.setAttribute('discussion-id', noteEntity.discussion_id);\n\n      diffAvatarContainer.append(avatarHolder);\n\n      gl.diffNotesCompileComponents();\n    }\n  }\n\n  /**\n   * Called in response the main target form has been successfully submitted.\n   *\n   * Removes any errors.\n   * Resets text and preview.\n   * Resets buttons.\n   */\n  resetMainTargetForm(e) {\n    var form;\n    form = $('.js-main-target-form');\n    // remove validation errors\n    form.find('.js-errors').remove();\n    // reset text and preview\n    form.find('.js-md-write-button').click();\n    form\n      .find('.js-note-text')\n      .val('')\n      .trigger('input');\n    form\n      .find('.js-note-text')\n      .data('autosave')\n      .reset();\n\n    var event = document.createEvent('Event');\n    event.initEvent('autosize:update', true, false);\n    form.find('.js-autosize')[0].dispatchEvent(event);\n\n    this.updateTargetButtons(e);\n  }\n\n  reenableTargetFormSubmitButton() {\n    var form;\n    form = $('.js-main-target-form');\n    return form.find('.js-note-text').trigger('input');\n  }\n\n  /**\n   * Shows the main form and does some setup on it.\n   *\n   * Sets some hidden fields in the form.\n   */\n  setupMainTargetNoteForm(enableGFM) {\n    var form;\n    // find the form\n    form = $('.js-new-note-form');\n    // Set a global clone of the form for later cloning\n    this.formClone = form.clone();\n    // show the form\n    this.setupNoteForm(form, enableGFM);\n    // fix classes\n    form.removeClass('js-new-note-form');\n    form.addClass('js-main-target-form');\n    form.find('#note_line_code').remove();\n    form.find('#note_position').remove();\n    form.find('#note_type').val('');\n    form.find('#note_project_id').remove();\n    form.find('#in_reply_to_discussion_id').remove();\n    form\n      .find('.js-comment-resolve-button')\n      .closest('comment-and-resolve-btn')\n      .remove();\n    this.parentTimeline = form.parents('.timeline');\n\n    if (form.length) {\n      Notes.initCommentTypeToggle(form.get(0));\n    }\n  }\n\n  /**\n   * General note form setup.\n   *\n   * deactivates the submit button when text is empty\n   * hides the preview button when text is empty\n   * set up GFM auto complete\n   * show the form\n   */\n  setupNoteForm(form, enableGFM = defaultAutocompleteConfig) {\n    var textarea, key;\n    this.glForm = new GLForm(form, enableGFM);\n    textarea = form.find('.js-note-text');\n    key = [\n      'Note',\n      form.find('#note_noteable_type').val(),\n      form.find('#note_noteable_id').val(),\n      form.find('#note_commit_id').val(),\n      form.find('#note_type').val(),\n      form.find('#note_project_id').val(),\n      form.find('#in_reply_to_discussion_id').val(),\n\n      // LegacyDiffNote\n      form.find('#note_line_code').val(),\n\n      // DiffNote\n      form.find('#note_position').val(),\n    ];\n    return new Autosave(textarea, key);\n  }\n\n  /**\n   * Called in response to the new note form being submitted\n   *\n   * Adds new note to list.\n   */\n  addNote($form, note) {\n    return this.renderNote(note);\n  }\n\n  addNoteError($form) {\n    let formParentTimeline;\n    if ($form.hasClass('js-main-target-form')) {\n      formParentTimeline = $form.parents('.timeline');\n    } else if ($form.hasClass('js-discussion-note-form')) {\n      formParentTimeline = $form.closest('.discussion-notes').find('.notes');\n    }\n    return this.addFlash(\n      'Your comment could not be submitted! Please check your network connection and try again.',\n      'alert',\n      formParentTimeline.get(0),\n    );\n  }\n\n  updateNoteError($parentTimeline) {\n    // eslint-disable-next-line no-new\n    new Flash(\n      'Your comment could not be updated! Please check your network connection and try again.',\n    );\n  }\n\n  /**\n   * Called in response to the new note form being submitted\n   *\n   * Adds new note to list.\n   */\n  addDiscussionNote($form, note, isNewDiffComment) {\n    if ($form.attr('data-resolve-all') != null) {\n      var projectPath = $form.data('projectPath');\n      var discussionId = $form.data('discussionId');\n      var mergeRequestId = $form.data('noteableIid');\n\n      if (ResolveService != null) {\n        ResolveService.toggleResolveForDiscussion(mergeRequestId, discussionId);\n      }\n    }\n\n    this.renderNote(note, $form);\n    // cleanup after successfully creating a diff/discussion note\n    if (isNewDiffComment) {\n      this.removeDiscussionNoteForm($form);\n    }\n  }\n\n  /**\n   * Called in response to the edit note form being submitted\n   *\n   * Updates the current note field.\n   */\n  updateNote(noteEntity, $targetNote) {\n    var $noteEntityEl, $note_li;\n    // Convert returned HTML to a jQuery object so we can modify it further\n    $noteEntityEl = $(noteEntity.html);\n    this.revertNoteEditForm($targetNote);\n    $noteEntityEl.renderGFM();\n    // Find the note's `li` element by ID and replace it with the updated HTML\n    $note_li = $('.note-row-' + noteEntity.id);\n\n    $note_li.replaceWith($noteEntityEl);\n    this.setupNewNote($noteEntityEl);\n\n    if (typeof gl.diffNotesCompileComponents !== 'undefined') {\n      gl.diffNotesCompileComponents();\n    }\n  }\n\n  checkContentToAllowEditing($el) {\n    var initialContent = $el\n      .find('.original-note-content')\n      .text()\n      .trim();\n    var currentContent = $el.find('.js-note-text').val();\n    var isAllowed = true;\n\n    if (currentContent === initialContent) {\n      this.removeNoteEditForm($el);\n    } else {\n      var $buttons = $el.find('.note-form-actions');\n      var isWidgetVisible = isInViewport($el.get(0));\n\n      if (!isWidgetVisible) {\n        scrollToElement($el);\n      }\n\n      $el.find('.js-finish-edit-warning').show();\n      isAllowed = false;\n    }\n\n    return isAllowed;\n  }\n\n  /**\n   * Called in response to clicking the edit note link\n   *\n   * Replaces the note text with the note edit form\n   * Adds a data attribute to the form with the original content of the note for cancellations\n   */\n  showEditForm(e, scrollTo, myLastNote) {\n    e.preventDefault();\n\n    var $target = $(e.target);\n    var $editForm = $(this.getEditFormSelector($target));\n    var $note = $target.closest('.note');\n    var $currentlyEditing = $('.note.is-editing:visible');\n\n    if ($currentlyEditing.length) {\n      var isEditAllowed = this.checkContentToAllowEditing($currentlyEditing);\n\n      if (!isEditAllowed) {\n        return;\n      }\n    }\n\n    $note.find('.js-note-attachment-delete').show();\n    $editForm.addClass('current-note-edit-form');\n    $note.addClass('is-editing');\n    this.putEditFormInPlace($target);\n  }\n\n  /**\n   * Called in response to clicking the edit note link\n   *\n   * Hides edit form and restores the original note text to the editor textarea.\n   */\n  cancelEdit(e) {\n    e.preventDefault();\n    const $target = $(e.target);\n    const $note = $target.closest('.note');\n    const noteId = $note.attr('data-note-id');\n\n    this.revertNoteEditForm($target);\n\n    if (this.updatedNotesTrackingMap[noteId]) {\n      const $newNote = $(this.updatedNotesTrackingMap[noteId].html);\n      $note.replaceWith($newNote);\n      this.setupNewNote($newNote);\n      // Now that we have taken care of the update, clear it out\n      delete this.updatedNotesTrackingMap[noteId];\n    } else {\n      $note.find('.js-finish-edit-warning').hide();\n      this.removeNoteEditForm($note);\n    }\n  }\n\n  revertNoteEditForm($target) {\n    $target = $target || $('.note.is-editing:visible');\n    var selector = this.getEditFormSelector($target);\n    var $editForm = $(selector);\n\n    $editForm.insertBefore('.diffs');\n    $editForm.find('.js-comment-save-button').enable();\n    $editForm.find('.js-finish-edit-warning').hide();\n  }\n\n  getEditFormSelector($el) {\n    var selector = '.note-edit-form:not(.mr-note-edit-form)';\n\n    if ($el.parents('#diffs').length) {\n      selector = '.note-edit-form.mr-note-edit-form';\n    }\n\n    return selector;\n  }\n\n  removeNoteEditForm($note) {\n    var form = $note.find('.diffs .current-note-edit-form');\n\n    $note.removeClass('is-editing');\n    form.removeClass('current-note-edit-form');\n    form.find('.js-finish-edit-warning').hide();\n    // Replace markdown textarea text with original note text.\n    return form.find('.js-note-text').val(form.find('form.edit-note').data('originalNote'));\n  }\n\n  /**\n   * Called in response to deleting a note of any kind.\n   *\n   * Removes the actual note from view.\n   * Removes the whole discussion if the last note is being removed.\n   */\n  removeNote(e) {\n    var noteElId, noteId, dataNoteId, $note, lineHolder;\n    $note = $(e.currentTarget).closest('.note');\n    noteElId = $note.attr('id');\n    noteId = $note.attr('data-note-id');\n    lineHolder = $(e.currentTarget)\n      .closest('.notes[data-discussion-id]')\n      .closest('.notes_holder')\n      .prev('.line_holder');\n    $(`.note[id=\"${noteElId}\"]`).each(\n      (function(_this) {\n        // A same note appears in the \"Discussion\" and in the \"Changes\" tab, we have\n        // to remove all. Using $('.note[id='noteId']') ensure we get all the notes,\n        // where $('#noteId') would return only one.\n        return function(i, el) {\n          var $note, $notes;\n          $note = $(el);\n          $notes = $note.closest('.discussion-notes');\n          const discussionId = $('.notes', $notes).data('discussionId');\n\n          if (typeof gl.diffNotesCompileComponents !== 'undefined') {\n            if (gl.diffNoteApps[noteElId]) {\n              gl.diffNoteApps[noteElId].$destroy();\n            }\n          }\n\n          $note.remove();\n\n          // check if this is the last note for this line\n          if ($notes.find('.note').length === 0) {\n            var notesTr = $notes.closest('tr');\n\n            // \"Discussions\" tab\n            $notes.closest('.timeline-entry').remove();\n\n            $(`.js-diff-avatars-${discussionId}`).trigger('remove.vue');\n\n            // The notes tr can contain multiple lists of notes, like on the parallel diff\n            // notesTr does not exist for image diffs\n            if (notesTr.find('.discussion-notes').length > 1 || notesTr.length === 0) {\n              const $diffFile = $notes.closest('.diff-file');\n              if ($diffFile.length > 0) {\n                const removeBadgeEvent = new CustomEvent('removeBadge.imageDiff', {\n                  detail: {\n                    // badgeNumber's start with 1 and index starts with 0\n                    badgeNumber: $notes.index() + 1,\n                  },\n                });\n\n                $diffFile[0].dispatchEvent(removeBadgeEvent);\n              }\n\n              $notes.remove();\n            } else if (notesTr.length > 0) {\n              notesTr.remove();\n            }\n          }\n        };\n      })(this),\n    );\n\n    Notes.checkMergeRequestStatus();\n    return this.updateNotesCount(-1);\n  }\n\n  /**\n   * Called in response to clicking the delete attachment link\n   *\n   * Removes the attachment wrapper view, including image tag if it exists\n   * Resets the note editing form\n   */\n  removeAttachment() {\n    const $note = $(this).closest('.note');\n    $note.find('.note-attachment').remove();\n    $note.find('.note-body > .note-text').show();\n    $note.find('.note-header').show();\n    return $note.find('.diffs .current-note-edit-form').remove();\n  }\n\n  /**\n   * Called when clicking on the \"reply\" button for a diff line.\n   *\n   * Shows the note form below the notes.\n   */\n  onReplyToDiscussionNote(e) {\n    this.replyToDiscussionNote(e.target);\n  }\n\n  replyToDiscussionNote(target) {\n    var form, replyLink;\n    form = this.cleanForm(this.formClone.clone());\n    replyLink = $(target).closest('.js-discussion-reply-button');\n    // insert the form after the button\n    replyLink\n      .closest('.discussion-reply-holder')\n      .hide()\n      .after(form);\n    // show the form\n    return this.setupDiscussionNoteForm(replyLink, form);\n  }\n\n  /**\n   * Shows the diff or discussion form and does some setup on it.\n   *\n   * Sets some hidden fields in the form.\n   *\n   * Note: dataHolder must have the \"discussionId\" and \"lineCode\" data attributes set.\n   */\n  setupDiscussionNoteForm(dataHolder, form) {\n    // set up note target\n    let diffFileData = dataHolder.closest('.text-file');\n\n    if (diffFileData.length === 0) {\n      diffFileData = dataHolder.closest('.image');\n    }\n\n    var discussionID = dataHolder.data('discussionId');\n\n    if (discussionID) {\n      form.attr('data-discussion-id', discussionID);\n      form.find('#in_reply_to_discussion_id').val(discussionID);\n    }\n\n    form.find('#note_project_id').val(dataHolder.data('discussionProjectId'));\n\n    form.attr('data-line-code', dataHolder.data('lineCode'));\n    form.find('#line_type').val(dataHolder.data('lineType'));\n\n    form.find('#note_noteable_type').val(diffFileData.data('noteableType'));\n    form.find('#note_noteable_id').val(diffFileData.data('noteableId'));\n    form.find('#note_commit_id').val(diffFileData.data('commitId'));\n\n    form.find('#note_type').val(dataHolder.data('noteType'));\n\n    // LegacyDiffNote\n    form.find('#note_line_code').val(dataHolder.data('lineCode'));\n\n    // DiffNote\n    form.find('#note_position').val(dataHolder.attr('data-position'));\n\n    form\n      .find('.js-close-discussion-note-form')\n      .show()\n      .removeClass('hide');\n    form.find('.js-note-target-close').remove();\n    form.find('.js-note-new-discussion').remove();\n    this.setupNoteForm(form);\n\n    form.removeClass('js-main-target-form').addClass('discussion-form js-discussion-note-form');\n\n    if (typeof gl.diffNotesCompileComponents !== 'undefined') {\n      var $commentBtn = form.find('comment-and-resolve-btn');\n      $commentBtn.attr(':discussion-id', `'${discussionID}'`);\n\n      gl.diffNotesCompileComponents();\n    }\n\n    form.find('.js-note-text').focus();\n    form.find('.js-comment-resolve-button').attr('data-discussion-id', discussionID);\n  }\n\n  /**\n   * Called when clicking on the \"add a comment\" button on the side of a diff line.\n   *\n   * Inserts a temporary row for the form below the line.\n   * Sets up the form and shows it.\n   */\n  onAddDiffNote(e) {\n    e.preventDefault();\n    const link = e.currentTarget || e.target;\n    const $link = $(link);\n    const showReplyInput = !$link.hasClass('js-diff-comment-avatar');\n    this.toggleDiffNote({\n      target: $link,\n      lineType: link.dataset.lineType,\n      showReplyInput,\n    });\n  }\n\n  onAddImageDiffNote(e) {\n    const $link = $(e.currentTarget || e.target);\n    const $diffFile = $link.closest('.diff-file');\n\n    const clickEvent = new CustomEvent('click.imageDiff', {\n      detail: e,\n    });\n\n    $diffFile[0].dispatchEvent(clickEvent);\n\n    // Set up comment form\n    let newForm;\n    const $noteContainer = $link.closest('.diff-viewer').find('.note-container');\n    const $form = $noteContainer.find('> .discussion-form');\n\n    if ($form.length === 0) {\n      newForm = this.cleanForm(this.formClone.clone());\n      newForm.appendTo($noteContainer);\n    } else {\n      newForm = $form;\n    }\n\n    this.setupDiscussionNoteForm($link, newForm);\n  }\n\n  toggleDiffNote({ target, lineType, forceShow, showReplyInput = false }) {\n    var $link,\n      addForm,\n      hasNotes,\n      newForm,\n      noteForm,\n      replyButton,\n      row,\n      rowCssToAdd,\n      targetContent,\n      isDiffCommentAvatar;\n    $link = $(target);\n    row = $link.closest('tr');\n    const nextRow = row.next();\n    let targetRow = row;\n    if (nextRow.is('.notes_holder')) {\n      targetRow = nextRow;\n    }\n\n    hasNotes = nextRow.is('.notes_holder');\n    addForm = false;\n    let lineTypeSelector = '';\n    rowCssToAdd =\n      '<tr class=\"notes_holder js-temp-notes-holder\"><td class=\"notes_content\" colspan=\"3\"><div class=\"content\"></div></td></tr>';\n    // In parallel view, look inside the correct left/right pane\n    if (this.isParallelView()) {\n      lineTypeSelector = `.${lineType}`;\n      rowCssToAdd =\n        '<tr class=\"notes_holder js-temp-notes-holder\"><td class=\"notes_line old\"></td><td class=\"notes_content parallel old\"><div class=\"content\"></div></td><td class=\"notes_line new\"></td><td class=\"notes_content parallel new\"><div class=\"content\"></div></td></tr>';\n    }\n    const notesContentSelector = `.notes_content${lineTypeSelector} .content`;\n    let notesContent = targetRow.find(notesContentSelector);\n\n    if (hasNotes && showReplyInput) {\n      targetRow.show();\n      notesContent = targetRow.find(notesContentSelector);\n      if (notesContent.length) {\n        notesContent.show();\n        replyButton = notesContent.find('.js-discussion-reply-button:visible');\n        if (replyButton.length) {\n          this.replyToDiscussionNote(replyButton[0]);\n        } else {\n          // In parallel view, the form may not be present in one of the panes\n          noteForm = notesContent.find('.js-discussion-note-form');\n          if (noteForm.length === 0) {\n            addForm = true;\n          }\n        }\n      }\n    } else if (showReplyInput) {\n      // add a notes row and insert the form\n      row.after(rowCssToAdd);\n      targetRow = row.next();\n      notesContent = targetRow.find(notesContentSelector);\n      addForm = true;\n    } else {\n      const isCurrentlyShown = targetRow.find('.content:not(:empty)').is(':visible');\n      const isForced = forceShow === true || forceShow === false;\n      const showNow = forceShow === true || (!isCurrentlyShown && !isForced);\n\n      targetRow.toggleClass('hide', !showNow);\n      notesContent.toggleClass('hide', !showNow);\n    }\n\n    if (addForm) {\n      newForm = this.cleanForm(this.formClone.clone());\n      newForm.appendTo(notesContent);\n      // show the form\n      return this.setupDiscussionNoteForm($link, newForm);\n    }\n  }\n\n  /**\n   * Called in response to \"cancel\" on a diff note form.\n   *\n   * Shows the reply button again.\n   * Removes the form and if necessary it's temporary row.\n   */\n  removeDiscussionNoteForm(form) {\n    var glForm, row;\n    row = form.closest('tr');\n    glForm = form.data('glForm');\n    glForm.destroy();\n    form\n      .find('.js-note-text')\n      .data('autosave')\n      .reset();\n    // show the reply button (will only work for replies)\n    form.prev('.discussion-reply-holder').show();\n    if (row.is('.js-temp-notes-holder')) {\n      // remove temporary row for diff lines\n      return row.remove();\n    } else {\n      // only remove the form\n      return form.remove();\n    }\n  }\n\n  cancelDiscussionForm(e) {\n    e.preventDefault();\n    const $form = $(e.target).closest('.js-discussion-note-form');\n    const $discussionNote = $(e.target).closest('.discussion-notes');\n\n    if ($discussionNote.length === 0) {\n      // Only send blur event when the discussion form\n      // is not part of a discussion note\n      const $diffFile = $form.closest('.diff-file');\n\n      if ($diffFile.length > 0) {\n        const blurEvent = new CustomEvent('blur.imageDiff', {\n          detail: e,\n        });\n\n        $diffFile[0].dispatchEvent(blurEvent);\n      }\n    }\n\n    return this.removeDiscussionNoteForm($form);\n  }\n\n  /**\n   * Called after an attachment file has been selected.\n   *\n   * Updates the file name for the selected attachment.\n   */\n  updateFormAttachment() {\n    var filename, form;\n    form = $(this).closest('form');\n    // get only the basename\n    filename = $(this)\n      .val()\n      .replace(/^.*[\\\\\\/]/, '');\n    return form.find('.js-attachment-filename').text(filename);\n  }\n\n  /**\n   * Called when the tab visibility changes\n   */\n  visibilityChange() {\n    return this.refresh();\n  }\n\n  updateTargetButtons(e) {\n    var closebtn, closetext, form, reopenbtn, reopentext, textarea;\n    textarea = $(e.target);\n    form = textarea.parents('form');\n    reopenbtn = form.find('.js-note-target-reopen');\n    closebtn = form.find('.js-note-target-close');\n\n    if (textarea.val().trim().length > 0) {\n      reopentext = reopenbtn.attr('data-alternative-text');\n      closetext = closebtn.attr('data-alternative-text');\n      if (reopenbtn.text() !== reopentext) {\n        reopenbtn.text(reopentext);\n      }\n      if (closebtn.text() !== closetext) {\n        closebtn.text(closetext);\n      }\n      if (reopenbtn.is(':not(.btn-comment-and-reopen)')) {\n        reopenbtn.addClass('btn-comment-and-reopen');\n      }\n      if (closebtn.is(':not(.btn-comment-and-close)')) {\n        closebtn.addClass('btn-comment-and-close');\n      }\n    } else {\n      reopentext = reopenbtn.data('originalText');\n      closetext = closebtn.data('originalText');\n      if (reopenbtn.text() !== reopentext) {\n        reopenbtn.text(reopentext);\n      }\n      if (closebtn.text() !== closetext) {\n        closebtn.text(closetext);\n      }\n      if (reopenbtn.is('.btn-comment-and-reopen')) {\n        reopenbtn.removeClass('btn-comment-and-reopen');\n      }\n      if (closebtn.is('.btn-comment-and-close')) {\n        closebtn.removeClass('btn-comment-and-close');\n      }\n    }\n  }\n\n  putEditFormInPlace($el) {\n    var $editForm = $(this.getEditFormSelector($el));\n    var $note = $el.closest('.note');\n\n    $editForm.insertAfter($note.find('.note-text'));\n\n    var $originalContentEl = $note.find('.original-note-content');\n    var originalContent = $originalContentEl.text().trim();\n    var postUrl = $originalContentEl.data('postUrl');\n    var targetId = $originalContentEl.data('targetId');\n    var targetType = $originalContentEl.data('targetType');\n    var markdownVersion = $originalContentEl.data('markdownVersion');\n\n    this.glForm = new GLForm($editForm.find('form'), this.enableGFM);\n\n    $editForm\n      .find('form')\n      .attr('action', `${postUrl}?html=true`)\n      .attr('data-remote', 'true')\n      .attr('data-markdown-version', markdownVersion);\n    $editForm.find('.js-form-target-id').val(targetId);\n    $editForm.find('.js-form-target-type').val(targetType);\n    $editForm\n      .find('.js-note-text')\n      .focus()\n      .val(originalContent);\n    $editForm.find('.js-md-write-button').trigger('click');\n    $editForm.find('.referenced-users').hide();\n  }\n\n  putConflictEditWarningInPlace(noteEntity, $note) {\n    if ($note.find('.js-conflict-edit-warning').length === 0) {\n      const $alert = $(`<div class=\"js-conflict-edit-warning alert alert-danger\">\n        This comment has changed since you started editing, please review the\n        <a href=\"#note_${noteEntity.id}\" target=\"_blank\" rel=\"noopener noreferrer\">\n          updated comment\n        </a>\n        to ensure information is not lost\n      </div>`);\n      $alert.insertAfter($note.find('.note-text'));\n    }\n  }\n\n  updateNotesCount(updateCount) {\n    return this.notesCountBadge.text(parseInt(this.notesCountBadge.text(), 10) + updateCount);\n  }\n\n  static renderPlaceholderComponent($container) {\n    const el = $container.find('.js-code-placeholder').get(0);\n    // eslint-disable-next-line no-new\n    new Vue({\n      el,\n      components: {\n        GlSkeletonLoading,\n      },\n      render(createElement) {\n        return createElement('gl-skeleton-loading');\n      },\n    });\n  }\n\n  static renderDiffContent($container, data) {\n    const { discussion_html } = data;\n    const lines = $(discussion_html).find('.line_holder');\n    lines.addClass('fade-in');\n    $container.find('.diff-content > table > tbody').prepend(lines);\n    const fileHolder = $container.find('.file-holder');\n    $container.find('.line-holder-placeholder').remove();\n    syntaxHighlight(fileHolder);\n  }\n\n  onClickRetryLazyLoad(e) {\n    const $retryButton = $(e.currentTarget);\n\n    $retryButton.prop('disabled', true);\n\n    return this.loadLazyDiff(e).then(() => {\n      $retryButton.prop('disabled', false);\n    });\n  }\n\n  loadLazyDiff(e) {\n    const $container = $(e.currentTarget).closest('.js-toggle-container');\n    Notes.renderPlaceholderComponent($container);\n\n    $container.find('.js-toggle-lazy-diff').removeClass('js-toggle-lazy-diff');\n\n    const $tableEl = $container.find('tbody');\n    if ($tableEl.length === 0) return;\n\n    const fileHolder = $container.find('.file-holder');\n    const url = fileHolder.data('linesPath');\n\n    const $errorContainer = $container.find('.js-error-lazy-load-diff');\n    const $successContainer = $container.find('.js-success-lazy-load');\n\n    /**\n     * We only fetch resolved discussions.\n     * Unresolved discussions don't have an endpoint being provided.\n     */\n    if (url) {\n      return axios\n        .get(url)\n        .then(({ data }) => {\n          // Reset state in case last request returned error\n          $successContainer.removeClass('hidden');\n          $errorContainer.addClass('hidden');\n\n          Notes.renderDiffContent($container, data);\n        })\n        .catch(() => {\n          $successContainer.addClass('hidden');\n          $errorContainer.removeClass('hidden');\n        });\n    }\n    return Promise.resolve();\n  }\n\n  toggleCommitList(e) {\n    const $element = $(e.currentTarget);\n    const $closestSystemCommitList = $element.siblings('.system-note-commit-list');\n\n    $element\n      .find('.fa')\n      .toggleClass('fa-angle-down')\n      .toggleClass('fa-angle-up');\n    $closestSystemCommitList.toggleClass('hide-shade');\n  }\n\n  /**\n   * Scans system notes with `ul` elements in system note body\n   * then collapse long commit list pushed by user to make it less\n   * intrusive.\n   */\n  collapseLongCommitList() {\n    const systemNotes = $('#notes-list')\n      .find('li.system-note')\n      .has('ul');\n\n    $.each(systemNotes, function(index, systemNote) {\n      const $systemNote = $(systemNote);\n      const headerMessage = $systemNote\n        .find('.note-text')\n        .find('p:first')\n        .text()\n        .replace(':', '');\n\n      $systemNote.find('.note-header .system-note-message').html(headerMessage);\n\n      if ($systemNote.find('li').length > MAX_VISIBLE_COMMIT_LIST_COUNT) {\n        $systemNote.find('.note-text').addClass('system-note-commit-list');\n        $systemNote.find('.system-note-commit-list-toggler').show();\n      } else {\n        $systemNote.find('.note-text').addClass('system-note-commit-list hide-shade');\n      }\n    });\n  }\n\n  addFlash(...flashParams) {\n    this.flashContainer = new Flash(...flashParams);\n  }\n\n  clearFlash() {\n    if (this.flashContainer) {\n      this.flashContainer.style.display = 'none';\n      this.flashContainer = null;\n    }\n  }\n\n  cleanForm($form) {\n    // Remove JS classes that are not needed here\n    $form.find('.js-comment-type-dropdown').removeClass('btn-group');\n\n    // Remove dropdown\n    $form.find('.dropdown-menu').remove();\n\n    return $form;\n  }\n\n  /**\n   * Check if note does not exists on page\n   */\n  static isNewNote(noteEntity, noteIds) {\n    return $.inArray(noteEntity.id, noteIds) === -1;\n  }\n\n  /**\n   * Check if $note already contains the `noteEntity` content\n   */\n  static isUpdatedNote(noteEntity, $note) {\n    // There can be CRLF vs LF mismatches if we don't sanitize and compare the same way\n    const sanitizedNoteEntityText = normalizeNewlines(noteEntity.note.trim());\n    const currentNoteText = normalizeNewlines(\n      $note\n        .find('.original-note-content')\n        .first()\n        .text()\n        .trim(),\n    );\n    return sanitizedNoteEntityText !== currentNoteText;\n  }\n\n  static checkMergeRequestStatus() {\n    if (getPagePath(1) === 'merge_requests' && gl.mrWidget) {\n      gl.mrWidget.checkStatus();\n    }\n  }\n\n  static animateAppendNote(noteHtml, $notesList) {\n    const $note = $(noteHtml);\n\n    $note.addClass('fade-in-full').renderGFM();\n    $notesList.append($note);\n    return $note;\n  }\n\n  static animateUpdateNote(noteHtml, $note) {\n    const $updatedNote = $(noteHtml);\n\n    $updatedNote.addClass('fade-in').renderGFM();\n    $note.replaceWith($updatedNote);\n    return $updatedNote;\n  }\n\n  /**\n   * Get data from Form attributes to use for saving/submitting comment.\n   */\n  getFormData($form) {\n    const content = $form.find('.js-note-text').val();\n    return {\n      formData: $form.serialize(),\n      formContent: _.escape(content),\n      formAction: $form.attr('action'),\n      formContentOriginal: content,\n    };\n  }\n\n  /**\n   * Identify if comment has any quick actions\n   */\n  hasQuickActions(formContent) {\n    return REGEX_QUICK_ACTIONS.test(formContent);\n  }\n\n  /**\n   * Remove quick actions and leave comment with pure message\n   */\n  stripQuickActions(formContent) {\n    return formContent.replace(REGEX_QUICK_ACTIONS, '').trim();\n  }\n\n  /**\n   * Gets appropriate description from quick actions found in provided `formContent`\n   */\n  getQuickActionDescription(formContent, availableQuickActions = []) {\n    let tempFormContent;\n\n    // Identify executed quick actions from `formContent`\n    const executedCommands = availableQuickActions.filter((command, index) => {\n      const commandRegex = new RegExp(`/${command.name}`);\n      return commandRegex.test(formContent);\n    });\n\n    if (executedCommands && executedCommands.length) {\n      if (executedCommands.length > 1) {\n        tempFormContent = 'Applying multiple commands';\n      } else {\n        const commandDescription = executedCommands[0].description.toLowerCase();\n        tempFormContent = `Applying command to ${commandDescription}`;\n      }\n    } else {\n      tempFormContent = 'Applying command';\n    }\n\n    return tempFormContent;\n  }\n\n  /**\n   * Create placeholder note DOM element populated with comment body\n   * that we will show while comment is being posted.\n   * Once comment is _actually_ posted on server, we will have final element\n   * in response that we will show in place of this temporary element.\n   */\n  createPlaceholderNote({\n    formContent,\n    uniqueId,\n    isDiscussionNote,\n    currentUsername,\n    currentUserFullname,\n    currentUserAvatar,\n  }) {\n    const discussionClass = isDiscussionNote ? 'discussion' : '';\n    const $tempNote = $(\n      `<li id=\"${uniqueId}\" class=\"note being-posted fade-in-half timeline-entry\">\n         <div class=\"timeline-entry-inner\">\n            <div class=\"timeline-icon\">\n               <a href=\"/${_.escape(currentUsername)}\">\n                 <img class=\"avatar s40\" src=\"${currentUserAvatar}\" />\n               </a>\n            </div>\n            <div class=\"timeline-content ${discussionClass}\">\n               <div class=\"note-header\">\n                  <div class=\"note-header-info\">\n                     <a href=\"/${_.escape(currentUsername)}\">\n                       <span class=\"d-none d-sm-inline-block\">${_.escape(currentUsername)}</span>\n                       <span class=\"note-headline-light\">${_.escape(currentUsername)}</span>\n                     </a>\n                  </div>\n               </div>\n               <div class=\"note-body\">\n                 <div class=\"note-text\">\n                   <p>${formContent}</p>\n                 </div>\n               </div>\n            </div>\n         </div>\n      </li>`,\n    );\n\n    $tempNote.find('.d-none.d-sm-inline-block').text(_.escape(currentUserFullname));\n    $tempNote.find('.note-headline-light').text(`@${_.escape(currentUsername)}`);\n\n    return $tempNote;\n  }\n\n  /**\n   * Create Placeholder System Note DOM element populated with quick action description\n   */\n  createPlaceholderSystemNote({ formContent, uniqueId }) {\n    const $tempNote = $(\n      `<li id=\"${uniqueId}\" class=\"note system-note timeline-entry being-posted fade-in-half\">\n         <div class=\"timeline-entry-inner\">\n           <div class=\"timeline-content\">\n             <i>${formContent}</i>\n           </div>\n         </div>\n       </li>`,\n    );\n\n    return $tempNote;\n  }\n\n  /**\n   * This method does following tasks step-by-step whenever a new comment\n   * is submitted by user (both main thread comments as well as discussion comments).\n   *\n   * 1) Get Form metadata\n   * 2) Identify comment type; a) Main thread b) Discussion thread c) Discussion resolve\n   * 3) Build temporary placeholder element (using `createPlaceholderNote`)\n   * 4) Show placeholder note on UI\n   * 5) Perform network request to submit the note using `axios.post`\n   *    a) If request is successfully completed\n   *        1. Remove placeholder element\n   *        2. Show submitted Note element\n   *        3. Perform post-submit errands\n   *           a. Mark discussion as resolved if comment submission was for resolve.\n   *           b. Reset comment form to original state.\n   *    b) If request failed\n   *        1. Remove placeholder element\n   *        2. Show error Flash message about failure\n   */\n  postComment(e) {\n    e.preventDefault();\n\n    // Get Form metadata\n    const $submitBtn = $(e.target);\n    $submitBtn.prop('disabled', true);\n    let $form = $submitBtn.parents('form');\n    const $closeBtn = $form.find('.js-note-target-close');\n    const isDiscussionNote =\n      $submitBtn\n        .parent()\n        .find('li.droplab-item-selected')\n        .attr('id') === 'discussion';\n    const isMainForm = $form.hasClass('js-main-target-form');\n    const isDiscussionForm = $form.hasClass('js-discussion-note-form');\n    const isDiscussionResolve = $submitBtn.hasClass('js-comment-resolve-button');\n    const { formData, formContent, formAction, formContentOriginal } = this.getFormData($form);\n    let noteUniqueId;\n    let systemNoteUniqueId;\n    let hasQuickActions = false;\n    let $notesContainer;\n    let tempFormContent;\n\n    // Get reference to notes container based on type of comment\n    if (isDiscussionForm) {\n      $notesContainer = $form.parent('.discussion-notes').find('.notes');\n    } else if (isMainForm) {\n      $notesContainer = $('ul.main-notes-list');\n    }\n\n    // If comment is to resolve discussion, disable submit buttons while\n    // comment posting is finished.\n    if (isDiscussionResolve) {\n      $form.find('.js-comment-submit-button').disable();\n    }\n\n    tempFormContent = formContent;\n    if (this.hasQuickActions(formContent)) {\n      tempFormContent = this.stripQuickActions(formContent);\n      hasQuickActions = true;\n    }\n\n    // Show placeholder note\n    if (tempFormContent) {\n      noteUniqueId = _.uniqueId('tempNote_');\n      $notesContainer.append(\n        this.createPlaceholderNote({\n          formContent: tempFormContent,\n          uniqueId: noteUniqueId,\n          isDiscussionNote,\n          currentUsername: gon.current_username,\n          currentUserFullname: gon.current_user_fullname,\n          currentUserAvatar: gon.current_user_avatar_url,\n        }),\n      );\n    }\n\n    // Show placeholder system note\n    if (hasQuickActions) {\n      systemNoteUniqueId = _.uniqueId('tempSystemNote_');\n      $notesContainer.append(\n        this.createPlaceholderSystemNote({\n          formContent: this.getQuickActionDescription(\n            formContent,\n            AjaxCache.get(gl.GfmAutoComplete.dataSources.commands),\n          ),\n          uniqueId: systemNoteUniqueId,\n        }),\n      );\n    }\n\n    // Clear the form textarea\n    if ($notesContainer.length) {\n      if (isMainForm) {\n        this.resetMainTargetForm(e);\n      } else if (isDiscussionForm) {\n        this.removeDiscussionNoteForm($form);\n      }\n    }\n\n    $closeBtn.text($closeBtn.data('originalText'));\n\n    // Make request to submit comment on server\n    return axios\n      .post(`${formAction}?html=true`, formData)\n      .then(res => {\n        const note = res.data;\n\n        $submitBtn.prop('disabled', false);\n        // Submission successful! remove placeholder\n        $notesContainer.find(`#${noteUniqueId}`).remove();\n\n        const $diffFile = $form.closest('.diff-file');\n        if ($diffFile.length > 0) {\n          const blurEvent = new CustomEvent('blur.imageDiff', {\n            detail: e,\n          });\n\n          $diffFile[0].dispatchEvent(blurEvent);\n        }\n\n        // Reset cached commands list when command is applied\n        if (hasQuickActions) {\n          $form.find('textarea.js-note-text').trigger('clear-commands-cache.atwho');\n        }\n\n        // Clear previous form errors\n        this.clearFlashWrapper();\n\n        // Check if this was discussion comment\n        if (isDiscussionForm) {\n          // Remove flash-container\n          $notesContainer.find('.flash-container').remove();\n\n          // If comment intends to resolve discussion, do the same.\n          if (isDiscussionResolve) {\n            $form\n              .attr('data-discussion-id', $submitBtn.data('discussionId'))\n              .attr('data-resolve-all', 'true')\n              .attr('data-project-path', $submitBtn.data('projectPath'));\n          }\n\n          // Show final note element on UI\n          const isNewDiffComment = $notesContainer.length === 0;\n          this.addDiscussionNote($form, note, isNewDiffComment);\n\n          if (isNewDiffComment) {\n            // Add image badge, avatar badge and toggle discussion badge for new image diffs\n            const notePosition = $form.find('#note_position').val();\n            if ($diffFile.length > 0 && notePosition.length > 0) {\n              const { x, y, width, height } = JSON.parse(notePosition);\n              const addBadgeEvent = new CustomEvent('addBadge.imageDiff', {\n                detail: {\n                  x,\n                  y,\n                  width,\n                  height,\n                  noteId: `note_${note.id}`,\n                  discussionId: note.discussion_id,\n                },\n              });\n\n              $diffFile[0].dispatchEvent(addBadgeEvent);\n            }\n          }\n\n          // append flash-container to the Notes list\n          if ($notesContainer.length) {\n            $notesContainer.append('<div class=\"flash-container\" style=\"display: none;\"></div>');\n          }\n        } else if (isMainForm) {\n          // Check if this was main thread comment\n          // Show final note element on UI and perform form and action buttons cleanup\n          this.addNote($form, note);\n          this.reenableTargetFormSubmitButton(e);\n        }\n\n        if (note.commands_changes) {\n          this.handleQuickActions(note);\n        }\n\n        $form.trigger('ajax:success', [note]);\n      })\n      .catch(() => {\n        // Submission failed, remove placeholder note and show Flash error message\n        $notesContainer.find(`#${noteUniqueId}`).remove();\n        $submitBtn.prop('disabled', false);\n        const blurEvent = new CustomEvent('blur.imageDiff', {\n          detail: e,\n        });\n\n        const closestDiffFile = $form.closest('.diff-file');\n\n        if (closestDiffFile.length) {\n          closestDiffFile[0].dispatchEvent(blurEvent);\n        }\n\n        if (hasQuickActions) {\n          $notesContainer.find(`#${systemNoteUniqueId}`).remove();\n        }\n\n        // Show form again on UI on failure\n        if (isDiscussionForm && $notesContainer.length) {\n          const replyButton = $notesContainer.parent().find('.js-discussion-reply-button');\n          this.replyToDiscussionNote(replyButton[0]);\n          $form = $notesContainer.parent().find('form');\n        }\n\n        $form.find('.js-note-text').val(formContentOriginal);\n        this.reenableTargetFormSubmitButton(e);\n        this.addNoteError($form);\n      });\n  }\n\n  /**\n   * This method does following tasks step-by-step whenever an existing comment\n   * is updated by user (both main thread comments as well as discussion comments).\n   *\n   * 1) Get Form metadata\n   * 2) Update note element with new content\n   * 3) Perform network request to submit the updated note using `axios.post`\n   *    a) If request is successfully completed\n   *        1. Show submitted Note element\n   *    b) If request failed\n   *        1. Revert Note element to original content\n   *        2. Show error Flash message about failure\n   */\n  updateComment(e) {\n    e.preventDefault();\n\n    // Get Form metadata\n    const $submitBtn = $(e.target);\n    const $form = $submitBtn.parents('form');\n    const $closeBtn = $form.find('.js-note-target-close');\n    const $editingNote = $form.parents('.note.is-editing');\n    const $noteBody = $editingNote.find('.js-task-list-container');\n    const $noteBodyText = $noteBody.find('.note-text');\n    const { formData, formContent, formAction } = this.getFormData($form);\n    const $diffFile = $form.closest('.diff-file');\n    const $notesContainer = $form.closest('.notes');\n\n    // Cache original comment content\n    const cachedNoteBodyText = $noteBodyText.html();\n\n    // Show updated comment content temporarily\n    $noteBodyText.html(formContent);\n    $editingNote.removeClass('is-editing fade-in-full').addClass('being-posted fade-in-half');\n    $editingNote\n      .find('.note-headline-meta a')\n      .html(\n        '<i class=\"fa fa-spinner fa-spin\" aria-label=\"Comment is being updated\" aria-hidden=\"true\"></i>',\n      );\n\n    // Make request to update comment on server\n    axios\n      .post(`${formAction}?html=true`, formData)\n      .then(({ data }) => {\n        // Submission successful! render final note element\n        this.updateNote(data, $editingNote);\n      })\n      .catch(() => {\n        // Submission failed, revert back to original note\n        $noteBodyText.html(_.escape(cachedNoteBodyText));\n        $editingNote.removeClass('being-posted fade-in');\n        $editingNote.find('.fa.fa-spinner').remove();\n\n        // Show Flash message about failure\n        this.updateNoteError();\n      });\n\n    return $closeBtn.text($closeBtn.data('originalText'));\n  }\n}\n\nwindow.Notes = Notes;\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"TaskList\"] = factory();\n\telse\n\t\troot[\"TaskList\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nvar NodeArray, TaskList, closest, createEvent,\n  indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\nNodeArray = function(nodeList) {\n  return Array.prototype.slice.apply(nodeList);\n};\n\nclosest = function(el, className) {\n  while (el && !el.classList.contains(className)) {\n    el = el.parentNode;\n  }\n  return el;\n};\n\ncreateEvent = function(eventName, detail) {\n  var event;\n  if (typeof Event === 'function') {\n    event = new Event(eventName, {\n      bubbles: true,\n      cancelable: true\n    });\n    event.detail = detail;\n  } else {\n    event = document.createEvent('CustomEvent');\n    event.initCustomEvent(eventName, true, true, detail);\n  }\n  return event;\n};\n\nTaskList = (function() {\n  function TaskList(el1) {\n    this.el = el1;\n    this.container = closest(this.el, 'js-task-list-container');\n    this.field = this.container.querySelector('.js-task-list-field');\n    this.container.addEventListener('change', (function(_this) {\n      return function(event) {\n        if (event.target.classList.contains('task-list-item-checkbox')) {\n          return _this.updateTaskList(event.target);\n        }\n      };\n    })(this));\n    this.enable();\n  }\n\n  TaskList.prototype.enable = function() {\n    var event;\n    if (this.container.querySelectorAll('.js-task-list-field').length > 0) {\n      NodeArray(this.container.querySelectorAll('.task-list-item')).forEach(function(item) {\n        return item.classList.add('enabled');\n      });\n      NodeArray(this.container.querySelectorAll('.task-list-item-checkbox')).forEach(function(checkbox) {\n        return checkbox.disabled = false;\n      });\n      this.container.classList.add('is-task-list-enabled');\n      event = createEvent('tasklist:enabled');\n      return this.container.dispatchEvent(event);\n    }\n  };\n\n  TaskList.prototype.disable = function() {\n    var event;\n    NodeArray(this.container.querySelectorAll('.task-list-item')).forEach(function(item) {\n      return item.classList.remove('enabled');\n    });\n    NodeArray(this.container.querySelectorAll('.task-list-item-checkbox')).forEach(function(checkbox) {\n      return checkbox.disabled = true;\n    });\n    this.container.classList.remove('is-task-list-enabled');\n    event = createEvent('tasklist:disabled');\n    return this.container.dispatchEvent(event);\n  };\n\n  TaskList.prototype.updateTaskList = function(item) {\n    var changeEvent, changedEvent, checkboxes, index;\n    checkboxes = this.container.querySelectorAll('.task-list-item-checkbox');\n    index = 1 + NodeArray(checkboxes).indexOf(item);\n    changeEvent = createEvent('tasklist:change', {\n      index: index,\n      checked: item.checked\n    });\n    this.field.dispatchEvent(changeEvent);\n    if (!changeEvent.defaultPrevented) {\n      this.field.value = TaskList.updateSource(this.field.value, index, item.checked);\n      changeEvent = createEvent('change');\n      this.field.dispatchEvent(changeEvent);\n      changedEvent = createEvent('tasklist:changed', {\n        index: index,\n        checked: item.checked\n      });\n      return this.field.dispatchEvent(changedEvent);\n    }\n  };\n\n  TaskList.incomplete = \"[ ]\";\n\n  TaskList.complete = \"[x]\";\n\n  TaskList.escapePattern = function(str) {\n    return str.replace(/([\\[\\]])/g, \"\\\\$1\").replace(/\\s/, \"\\\\s\").replace(\"x\", \"[xX]\");\n  };\n\n  TaskList.incompletePattern = RegExp(\"\" + (TaskList.escapePattern(TaskList.incomplete)));\n\n  TaskList.completePattern = RegExp(\"\" + (TaskList.escapePattern(TaskList.complete)));\n\n  TaskList.itemPattern = RegExp(\"^(?:\\\\s*(?:>\\\\s*)*(?:[-+*]|(?:\\\\d+\\\\.)))\\\\s*(\" + (TaskList.escapePattern(TaskList.complete)) + \"|\" + (TaskList.escapePattern(TaskList.incomplete)) + \")\\\\s+(?!\\\\(.*?\\\\))(?=(?:\\\\[.*?\\\\]\\\\s*(?:\\\\[.*?\\\\]|\\\\(.*?\\\\))\\\\s*)*(?:[^\\\\[]|$))\");\n\n  TaskList.startFencesPattern = /^`{3}.*$/;\n\n  TaskList.endFencesPattern = /^`{3}$/;\n\n  TaskList.itemsInParasPattern = RegExp(\"^(\" + (TaskList.escapePattern(TaskList.complete)) + \"|\" + (TaskList.escapePattern(TaskList.incomplete)) + \").+$\", \"g\");\n\n  TaskList.updateSource = function(source, itemIndex, checked) {\n    var clean, inCodeBlock, index, line, result;\n    clean = source.replace(/\\r/g, '').replace(this.itemsInParasPattern, '').split(\"\\n\");\n    index = 0;\n    inCodeBlock = false;\n    result = (function() {\n      var i, len, ref, results;\n      ref = source.split(\"\\n\");\n      results = [];\n      for (i = 0, len = ref.length; i < len; i++) {\n        line = ref[i];\n        if (inCodeBlock) {\n          if (line.match(this.endFencesPattern)) {\n            inCodeBlock = false;\n          }\n        } else if (line.match(this.startFencesPattern)) {\n          inCodeBlock = true;\n        } else if (indexOf.call(clean, line) >= 0 && line.match(this.itemPattern)) {\n          index += 1;\n          if (index === itemIndex) {\n            line = checked ? line.replace(this.incompletePattern, this.complete) : line.replace(this.completePattern, this.incomplete);\n          }\n        }\n        results.push(line);\n      }\n      return results;\n    }).call(this);\n    return result.join(\"\\n\");\n  };\n\n  return TaskList;\n\n})();\n\nif (typeof jQuery !== 'undefined') {\n  jQuery.fn.taskList = function(method) {\n    return this.each(function(index, el) {\n      var taskList;\n      taskList = jQuery(el).data('task-list');\n      if (!taskList) {\n        taskList = new TaskList(el);\n        jQuery(el).data('task-list', taskList);\n        if (!method || method === 'enable') {\n          return;\n        }\n      }\n      return taskList[method || 'enable']();\n    });\n  };\n}\n\nmodule.exports = TaskList;\n\n\n/***/ })\n/******/ ]);\n});","/* eslint-disable func-names, no-var, no-underscore-dangle, no-param-reassign, prefer-template, consistent-return, one-var, no-else-return */\n\nimport $ from 'jquery';\n\n// LineHighlighter\n//\n// Handles single- and multi-line selection and highlight for blob views.\n//\n//\n// ### Example Markup\n//\n//   <div id=\"blob-content-holder\">\n//     <div class=\"file-content\">\n//       <div class=\"line-numbers\">\n//         <a href=\"#L1\" id=\"L1\" data-line-number=\"1\">1</a>\n//         <a href=\"#L2\" id=\"L2\" data-line-number=\"2\">2</a>\n//         <a href=\"#L3\" id=\"L3\" data-line-number=\"3\">3</a>\n//         <a href=\"#L4\" id=\"L4\" data-line-number=\"4\">4</a>\n//         <a href=\"#L5\" id=\"L5\" data-line-number=\"5\">5</a>\n//       </div>\n//       <pre class=\"code highlight\">\n//         <code>\n//           <span id=\"LC1\" class=\"line\">...</span>\n//           <span id=\"LC2\" class=\"line\">...</span>\n//           <span id=\"LC3\" class=\"line\">...</span>\n//           <span id=\"LC4\" class=\"line\">...</span>\n//           <span id=\"LC5\" class=\"line\">...</span>\n//         </code>\n//       </pre>\n//     </div>\n//   </div>\n//\n\nconst LineHighlighter = function(options = {}) {\n  options.highlightLineClass = options.highlightLineClass || 'hll';\n  options.fileHolderSelector = options.fileHolderSelector || '.file-holder';\n  options.scrollFileHolder = options.scrollFileHolder || false;\n  options.hash = options.hash || window.location.hash;\n\n  this.options = options;\n  this._hash = options.hash;\n  this.highlightLineClass = options.highlightLineClass;\n  this.setHash = this.setHash.bind(this);\n  this.highlightLine = this.highlightLine.bind(this);\n  this.clickHandler = this.clickHandler.bind(this);\n  this.highlightHash = this.highlightHash.bind(this);\n\n  this.bindEvents();\n  this.highlightHash();\n};\n\nLineHighlighter.prototype.bindEvents = function() {\n  const $fileHolder = $(this.options.fileHolderSelector);\n\n  $fileHolder.on('click', 'a[data-line-number]', this.clickHandler);\n  $fileHolder.on('highlight:line', this.highlightHash);\n};\n\nLineHighlighter.prototype.highlightHash = function(newHash) {\n  let range;\n  if (newHash && typeof newHash === 'string') this._hash = newHash;\n\n  this.clearHighlight();\n\n  if (this._hash !== '') {\n    range = this.hashToRange(this._hash);\n    if (range[0]) {\n      this.highlightRange(range);\n      const lineSelector = `#L${range[0]}`;\n      const scrollOptions = {\n        // Scroll to the first highlighted line on initial load\n        // Offset -50 for the sticky top bar, and another -100 for some context\n        offset: -150,\n      };\n      if (this.options.scrollFileHolder) {\n        $(this.options.fileHolderSelector).scrollTo(lineSelector, scrollOptions);\n      } else {\n        $.scrollTo(lineSelector, scrollOptions);\n      }\n    }\n  }\n};\n\nLineHighlighter.prototype.clickHandler = function(event) {\n  var current, lineNumber, range;\n  event.preventDefault();\n  this.clearHighlight();\n  lineNumber = $(event.target)\n    .closest('a')\n    .data('lineNumber');\n  current = this.hashToRange(this._hash);\n  if (!(current[0] && event.shiftKey)) {\n    // If there's no current selection, or there is but Shift wasn't held,\n    // treat this like a single-line selection.\n    this.setHash(lineNumber);\n    return this.highlightLine(lineNumber);\n  } else if (event.shiftKey) {\n    if (lineNumber < current[0]) {\n      range = [lineNumber, current[0]];\n    } else {\n      range = [current[0], lineNumber];\n    }\n    this.setHash(range[0], range[1]);\n    return this.highlightRange(range);\n  }\n};\n\nLineHighlighter.prototype.clearHighlight = function() {\n  return $('.' + this.highlightLineClass).removeClass(this.highlightLineClass);\n};\n\n// Convert a URL hash String into line numbers\n//\n// hash - Hash String\n//\n// Examples:\n//\n//   hashToRange('#L5')    # => [5, null]\n//   hashToRange('#L5-15') # => [5, 15]\n//   hashToRange('#foo')   # => [null, null]\n//\n// Returns an Array\nLineHighlighter.prototype.hashToRange = function(hash) {\n  var first, last, matches;\n  // ?L(\\d+)(?:-(\\d+))?$/)\n  matches = hash.match(/^#?L(\\d+)(?:-(\\d+))?$/);\n  if (matches && matches.length) {\n    first = parseInt(matches[1], 10);\n    last = matches[2] ? parseInt(matches[2], 10) : null;\n    return [first, last];\n  } else {\n    return [null, null];\n  }\n};\n\n// Highlight a single line\n//\n// lineNumber - Line number to highlight\nLineHighlighter.prototype.highlightLine = function(lineNumber) {\n  return $('#LC' + lineNumber).addClass(this.highlightLineClass);\n};\n\n// Highlight all lines within a range\n//\n// range - Array containing the starting and ending line numbers\nLineHighlighter.prototype.highlightRange = function(range) {\n  if (range[1]) {\n    const results = [];\n    const ref = range[0] <= range[1] ? range : range.reverse();\n\n    for (let lineNumber = range[0]; lineNumber <= ref[1]; lineNumber += 1) {\n      results.push(this.highlightLine(lineNumber));\n    }\n\n    return results;\n  } else {\n    return this.highlightLine(range[0]);\n  }\n};\n\n// Set the URL hash string\nLineHighlighter.prototype.setHash = function(firstLineNumber, lastLineNumber) {\n  var hash;\n  if (lastLineNumber) {\n    hash = '#L' + firstLineNumber + '-' + lastLineNumber;\n  } else {\n    hash = '#L' + firstLineNumber;\n  }\n  this._hash = hash;\n  return this.__setLocationHash__(hash);\n};\n\n// Make the actual hash change in the browser\n//\n// This method is stubbed in tests.\nLineHighlighter.prototype.__setLocationHash__ = function(value) {\n  return window.history.pushState(\n    {\n      url: value,\n      // We're using pushState instead of assigning location.hash directly to\n      // prevent the page from scrolling on the hashchange event\n    },\n    document.title,\n    value,\n  );\n};\n\nexport default LineHighlighter;\n","import Notes from './notes';\n\nexport default () => {\n  const dataEl = document.querySelector('.js-notes-data');\n  const { notesUrl, notesIds, now, diffView, enableGFM } = JSON.parse(dataEl.innerHTML);\n\n  // Create a singleton so that we don't need to assign\n  // into the window object, we can just access the current isntance with Notes.instance\n  Notes.initialize(notesUrl, notesIds, now, diffView, enableGFM);\n};\n","export default () => {\n  const { protocol, host, pathname } = window.location;\n  const shareBtn = document.querySelector('.js-share-btn');\n  const embedBtn = document.querySelector('.js-embed-btn');\n  const snippetUrlArea = document.querySelector('.js-snippet-url-area');\n  const embedAction = document.querySelector('.js-embed-action');\n  const url = `${protocol}//${host + pathname}`;\n\n  shareBtn.addEventListener('click', () => {\n    shareBtn.classList.add('is-active');\n    embedBtn.classList.remove('is-active');\n    snippetUrlArea.value = url;\n    embedAction.innerText = 'Share';\n  });\n\n  embedBtn.addEventListener('click', () => {\n    embedBtn.classList.add('is-active');\n    shareBtn.classList.remove('is-active');\n    const scriptTag = `<script src=\"${url}.js\"></script>`;\n    snippetUrlArea.value = scriptTag;\n    embedAction.innerText = 'Embed';\n  });\n};\n","import $ from 'jquery';\nimport Dropzone from 'dropzone';\nimport _ from 'underscore';\nimport './behaviors/preview_markdown';\nimport csrf from './lib/utils/csrf';\nimport axios from './lib/utils/axios_utils';\n\nDropzone.autoDiscover = false;\n\n/**\n * Return the error message string from the given response.\n *\n * @param {String|Object} res\n */\nfunction getErrorMessage(res) {\n  if (!res || _.isString(res)) {\n    return res;\n  }\n\n  return res.message;\n}\n\nexport default function dropzoneInput(form) {\n  const divHover = '<div class=\"div-dropzone-hover\"></div>';\n  const iconPaperclip = '<i class=\"fa fa-paperclip div-dropzone-icon\"></i>';\n  const $attachButton = form.find('.button-attach-file');\n  const $attachingFileMessage = form.find('.attaching-file-message');\n  const $cancelButton = form.find('.button-cancel-uploading-files');\n  const $retryLink = form.find('.retry-uploading-link');\n  const $uploadProgress = form.find('.uploading-progress');\n  const $uploadingErrorContainer = form.find('.uploading-error-container');\n  const $uploadingErrorMessage = form.find('.uploading-error-message');\n  const $uploadingProgressContainer = form.find('.uploading-progress-container');\n  const uploadsPath = form.data('uploads-path') || window.uploads_path || null;\n  const maxFileSize = gon.max_file_size || 10;\n  const formTextarea = form.find('.js-gfm-input');\n  let handlePaste;\n  let pasteText;\n  let addFileToForm;\n  let updateAttachingMessage;\n  let isImage;\n  let getFilename;\n  let uploadFile;\n\n  formTextarea.wrap('<div class=\"div-dropzone\"></div>');\n  formTextarea.on('paste', event => handlePaste(event));\n\n  // Add dropzone area to the form.\n  const $mdArea = formTextarea.closest('.md-area');\n  form.setupMarkdownPreview();\n  const $formDropzone = form.find('.div-dropzone');\n  $formDropzone.parent().addClass('div-dropzone-wrapper');\n  $formDropzone.append(divHover);\n  $formDropzone.find('.div-dropzone-hover').append(iconPaperclip);\n\n  if (!uploadsPath) {\n    $formDropzone.addClass('js-invalid-dropzone');\n    return null;\n  }\n\n  const dropzone = $formDropzone.dropzone({\n    url: uploadsPath,\n    dictDefaultMessage: '',\n    clickable: true,\n    paramName: 'file',\n    maxFilesize: maxFileSize,\n    uploadMultiple: false,\n    headers: csrf.headers,\n    previewContainer: false,\n    processing: () => $('.div-dropzone-alert').alert('close'),\n    dragover: () => {\n      $mdArea.addClass('is-dropzone-hover');\n      form.find('.div-dropzone-hover').css('opacity', 0.7);\n    },\n    dragleave: () => {\n      $mdArea.removeClass('is-dropzone-hover');\n      form.find('.div-dropzone-hover').css('opacity', 0);\n    },\n    drop: () => {\n      $mdArea.removeClass('is-dropzone-hover');\n      form.find('.div-dropzone-hover').css('opacity', 0);\n      formTextarea.focus();\n    },\n    success(header, response) {\n      const processingFileCount = this.getQueuedFiles().length + this.getUploadingFiles().length;\n      const shouldPad = processingFileCount >= 1;\n\n      pasteText(response.link.markdown, shouldPad);\n      // Show 'Attach a file' link only when all files have been uploaded.\n      if (!processingFileCount) $attachButton.removeClass('hide');\n      addFileToForm(response.link.url);\n    },\n    error: (file, errorMessage = 'Attaching the file failed.', xhr) => {\n      // If 'error' event is fired by dropzone, the second parameter is error message.\n      // If the 'errorMessage' parameter is empty, the default error message is set.\n      // If the 'error' event is fired by backend (xhr) error response, the third parameter is\n      // xhr object (xhr.responseText is error message).\n      // On error we hide the 'Attach' and 'Cancel' buttons\n      // and show an error.\n      const message = getErrorMessage(errorMessage || xhr.responseText);\n\n      $uploadingErrorContainer.removeClass('hide');\n      $uploadingErrorMessage.html(message);\n      $attachButton.addClass('hide');\n      $cancelButton.addClass('hide');\n    },\n    totaluploadprogress(totalUploadProgress) {\n      updateAttachingMessage(this.files, $attachingFileMessage);\n      $uploadProgress.text(`${Math.round(totalUploadProgress)}%`);\n    },\n    sending: () => {\n      // DOM elements already exist.\n      // Instead of dynamically generating them,\n      // we just either hide or show them.\n      $attachButton.addClass('hide');\n      $uploadingErrorContainer.addClass('hide');\n      $uploadingProgressContainer.removeClass('hide');\n      $cancelButton.removeClass('hide');\n    },\n    removedfile: () => {\n      $attachButton.removeClass('hide');\n      $cancelButton.addClass('hide');\n      $uploadingProgressContainer.addClass('hide');\n      $uploadingErrorContainer.addClass('hide');\n    },\n    queuecomplete: () => {\n      $('.dz-preview').remove();\n      $('.markdown-area').trigger('input');\n\n      $uploadingProgressContainer.addClass('hide');\n      $cancelButton.addClass('hide');\n    },\n  });\n\n  const child = $(dropzone[0]).children('textarea');\n\n  // removeAllFiles(true) stops uploading files (if any)\n  // and remove them from dropzone files queue.\n  $cancelButton.on('click', e => {\n    e.preventDefault();\n    e.stopPropagation();\n    Dropzone.forElement($formDropzone.get(0)).removeAllFiles(true);\n  });\n\n  // If 'error' event is fired, we store a failed files,\n  // clear dropzone files queue, change status of failed files to undefined,\n  // and add that files to the dropzone files queue again.\n  // addFile() adds file to dropzone files queue and upload it.\n  $retryLink.on('click', e => {\n    const dropzoneInstance = Dropzone.forElement(\n      e.target.closest('.js-main-target-form').querySelector('.div-dropzone'),\n    );\n    const failedFiles = dropzoneInstance.files;\n\n    e.preventDefault();\n\n    // 'true' parameter of removeAllFiles() cancels\n    // uploading of files that are being uploaded at the moment.\n    dropzoneInstance.removeAllFiles(true);\n\n    failedFiles.map(failedFile => {\n      const file = failedFile;\n\n      if (file.status === Dropzone.ERROR) {\n        file.status = undefined;\n        file.accepted = undefined;\n      }\n\n      return dropzoneInstance.addFile(file);\n    });\n  });\n  // eslint-disable-next-line consistent-return\n  handlePaste = event => {\n    const pasteEvent = event.originalEvent;\n    if (pasteEvent.clipboardData && pasteEvent.clipboardData.items) {\n      const image = isImage(pasteEvent);\n      if (image) {\n        event.preventDefault();\n        const filename = getFilename(pasteEvent) || 'image.png';\n        const text = `{{${filename}}}`;\n        pasteText(text);\n        return uploadFile(image.getAsFile(), filename);\n      }\n    }\n  };\n\n  isImage = data => {\n    let i = 0;\n    while (i < data.clipboardData.items.length) {\n      const item = data.clipboardData.items[i];\n      if (item.type.indexOf('image') !== -1) {\n        return item;\n      }\n      i += 1;\n    }\n    return false;\n  };\n\n  pasteText = (text, shouldPad) => {\n    let formattedText = text;\n    if (shouldPad) {\n      formattedText += '\\n\\n';\n    }\n    const textarea = child.get(0);\n    const caretStart = textarea.selectionStart;\n    const caretEnd = textarea.selectionEnd;\n    const textEnd = $(child).val().length;\n    const beforeSelection = $(child)\n      .val()\n      .substring(0, caretStart);\n    const afterSelection = $(child)\n      .val()\n      .substring(caretEnd, textEnd);\n    $(child).val(beforeSelection + formattedText + afterSelection);\n    textarea.setSelectionRange(caretStart + formattedText.length, caretEnd + formattedText.length);\n    textarea.style.height = `${textarea.scrollHeight}px`;\n    formTextarea.get(0).dispatchEvent(new Event('input'));\n    return formTextarea.trigger('input');\n  };\n\n  addFileToForm = path => {\n    $(form).append(`<input type=\"hidden\" name=\"files[]\" value=\"${_.escape(path)}\">`);\n  };\n\n  getFilename = e => {\n    let value;\n    if (window.clipboardData && window.clipboardData.getData) {\n      value = window.clipboardData.getData('Text');\n    } else if (e.clipboardData && e.clipboardData.getData) {\n      value = e.clipboardData.getData('text/plain');\n    }\n    value = value.split('\\r');\n    return value[0];\n  };\n\n  const showSpinner = () => $uploadingProgressContainer.removeClass('hide');\n\n  const closeSpinner = () => $uploadingProgressContainer.addClass('hide');\n\n  const showError = message => {\n    $uploadingErrorContainer.removeClass('hide');\n    $uploadingErrorMessage.html(message);\n  };\n\n  const closeAlertMessage = () => form.find('.div-dropzone-alert').alert('close');\n\n  const insertToTextArea = (filename, url) => {\n    const $child = $(child);\n    $child.val((index, val) => val.replace(`{{${filename}}}`, url));\n\n    $child.trigger('change');\n  };\n\n  uploadFile = (item, filename) => {\n    const formData = new FormData();\n    formData.append('file', item, filename);\n\n    showSpinner();\n    closeAlertMessage();\n\n    axios\n      .post(uploadsPath, formData)\n      .then(({ data }) => {\n        const md = data.link.markdown;\n\n        insertToTextArea(filename, md);\n        closeSpinner();\n      })\n      .catch(e => {\n        showError(e.response.data.message);\n        closeSpinner();\n      });\n  };\n\n  updateAttachingMessage = (files, messageContainer) => {\n    let attachingMessage;\n    const filesCount = files.filter(file => file.status === 'uploading' || file.status === 'queued')\n      .length;\n\n    // Dinamycally change uploading files text depending on files number in\n    // dropzone files queue.\n    if (filesCount > 1) {\n      attachingMessage = `Attaching ${filesCount} files -`;\n    } else {\n      attachingMessage = 'Attaching a file -';\n    }\n\n    messageContainer.text(attachingMessage);\n  };\n\n  form.find('.markdown-selector').click(function onMarkdownClick(e) {\n    e.preventDefault();\n    $(this)\n      .closest('.gfm-form')\n      .find('.div-dropzone')\n      .click();\n    formTextarea.focus();\n  });\n\n  return Dropzone.forElement($formDropzone.get(0));\n}\n","import $ from 'jquery';\nimport autosize from 'autosize';\nimport GfmAutoComplete, * as GFMConfig from './gfm_auto_complete';\nimport dropzoneInput from './dropzone_input';\nimport { addMarkdownListeners, removeMarkdownListeners } from './lib/utils/text_markdown';\n\nexport default class GLForm {\n  constructor(form, enableGFM = {}) {\n    this.form = form;\n    this.textarea = this.form.find('textarea.js-gfm-input');\n    this.enableGFM = Object.assign({}, GFMConfig.defaultAutocompleteConfig, enableGFM);\n    // Disable autocomplete for keywords which do not have dataSources available\n    const dataSources = (gl.GfmAutoComplete && gl.GfmAutoComplete.dataSources) || {};\n    Object.keys(this.enableGFM).forEach(item => {\n      if (item !== 'emojis') {\n        this.enableGFM[item] = !!dataSources[item];\n      }\n    });\n    // Before we start, we should clean up any previous data for this form\n    this.destroy();\n    // Set up the form\n    this.setupForm();\n    this.form.data('glForm', this);\n  }\n\n  destroy() {\n    // Clean form listeners\n    this.clearEventListeners();\n    if (this.autoComplete) {\n      this.autoComplete.destroy();\n    }\n    this.form.data('glForm', null);\n  }\n\n  setupForm() {\n    const isNewForm = this.form.is(':not(.gfm-form)');\n    this.form.removeClass('js-new-note-form');\n    if (isNewForm) {\n      this.form.find('.div-dropzone').remove();\n      this.form.addClass('gfm-form');\n      // remove notify commit author checkbox for non-commit notes\n      gl.utils.disableButtonIfEmptyField(\n        this.form.find('.js-note-text'),\n        this.form.find('.js-comment-button, .js-note-new-discussion'),\n      );\n      this.autoComplete = new GfmAutoComplete(gl.GfmAutoComplete && gl.GfmAutoComplete.dataSources);\n      this.autoComplete.setup(this.form.find('.js-gfm-input'), this.enableGFM);\n      dropzoneInput(this.form);\n      autosize(this.textarea);\n    }\n    // form and textarea event listeners\n    this.addEventListeners();\n    addMarkdownListeners(this.form);\n    this.form.show();\n    if (this.isAutosizeable) this.setupAutosize();\n  }\n\n  setupAutosize() {\n    this.textarea.off('autosize:resized').on('autosize:resized', this.setHeightData.bind(this));\n\n    this.textarea.off('mouseup.autosize').on('mouseup.autosize', this.destroyAutosize.bind(this));\n\n    setTimeout(() => {\n      autosize(this.textarea);\n      this.textarea.css('resize', 'vertical');\n    }, 0);\n  }\n\n  setHeightData() {\n    this.textarea.data('height', this.textarea.outerHeight());\n  }\n\n  destroyAutosize() {\n    const outerHeight = this.textarea.outerHeight();\n\n    if (this.textarea.data('height') === outerHeight) return;\n\n    autosize.destroy(this.textarea);\n\n    this.textarea.data('height', outerHeight);\n    this.textarea.outerHeight(outerHeight);\n    this.textarea.css('max-height', window.outerHeight);\n  }\n\n  clearEventListeners() {\n    this.textarea.off('focus');\n    this.textarea.off('blur');\n    removeMarkdownListeners(this.form);\n  }\n\n  addEventListeners() {\n    this.textarea.on('focus', function focusTextArea() {\n      $(this)\n        .closest('.md-area')\n        .addClass('is-focused');\n    });\n    this.textarea.on('blur', function blurTextArea() {\n      $(this)\n        .closest('.md-area')\n        .removeClass('is-focused');\n    });\n  }\n}\n","/* eslint-disable func-names, prefer-arrow-callback, no-unused-vars, consistent-return, camelcase, class-methods-use-this */\n\n// Zen Mode (full screen) textarea\n//\n/*= provides zen_mode:enter */\n/*= provides zen_mode:leave */\n\nimport $ from 'jquery';\nimport 'vendor/jquery.scrollTo';\nimport Dropzone from 'dropzone';\nimport Mousetrap from 'mousetrap';\nimport 'mousetrap/plugins/pause/mousetrap-pause';\n\nDropzone.autoDiscover = false;\n\n//\n// ### Events\n//\n// `zen_mode:enter`\n//\n// Fired when the \"Edit in fullscreen\" link is clicked.\n//\n// **Synchronicity** Sync\n// **Bubbles** Yes\n// **Cancelable** No\n// **Target** a.js-zen-enter\n//\n// `zen_mode:leave`\n//\n// Fired when the \"Leave Fullscreen\" link is clicked.\n//\n// **Synchronicity** Sync\n// **Bubbles** Yes\n// **Cancelable** No\n// **Target** a.js-zen-leave\n//\n\nexport default class ZenMode {\n  constructor() {\n    this.active_backdrop = null;\n    this.active_textarea = null;\n    $(document).on('click', '.js-zen-enter', function(e) {\n      e.preventDefault();\n      return $(e.currentTarget).trigger('zen_mode:enter');\n    });\n    $(document).on('click', '.js-zen-leave', function(e) {\n      e.preventDefault();\n      return $(e.currentTarget).trigger('zen_mode:leave');\n    });\n    $(document).on(\n      'zen_mode:enter',\n      (function(_this) {\n        return function(e) {\n          return _this.enter(\n            $(e.target)\n              .closest('.md-area')\n              .find('.zen-backdrop'),\n          );\n        };\n      })(this),\n    );\n    $(document).on(\n      'zen_mode:leave',\n      (function(_this) {\n        return function(e) {\n          return _this.exit();\n        };\n      })(this),\n    );\n    $(document).on('keydown', function(e) {\n      // Esc\n      if (e.keyCode === 27) {\n        e.preventDefault();\n        return $(document).trigger('zen_mode:leave');\n      }\n    });\n  }\n\n  enter(backdrop) {\n    Mousetrap.pause();\n    this.active_backdrop = $(backdrop);\n    this.active_backdrop.addClass('fullscreen');\n    this.active_textarea = this.active_backdrop.find('textarea');\n    // Prevent a user-resized textarea from persisting to fullscreen\n    this.active_textarea.removeAttr('style');\n    this.active_textarea.focus();\n  }\n\n  exit() {\n    if (this.active_textarea) {\n      Mousetrap.unpause();\n      this.active_textarea.closest('.zen-backdrop').removeClass('fullscreen');\n      this.scrollTo(this.active_textarea);\n      this.active_textarea = null;\n      this.active_backdrop = null;\n\n      const $dropzone = $('.div-dropzone');\n      if ($dropzone && !$dropzone.hasClass('js-invalid-dropzone')) {\n        Dropzone.forElement('.div-dropzone').enable();\n      }\n    }\n  }\n\n  scrollTo(zen_area) {\n    return $.scrollTo(zen_area, 0, {\n      offset: -150,\n    });\n  }\n}\n"],"sourceRoot":""}