{"version":3,"sources":["webpack:///./pages/profiles/index/index.js","webpack:///./notifications_dropdown.js","webpack:///./notifications_form.js"],"names":["__webpack_require__","r","__webpack_exports__","_notifications_form__WEBPACK_IMPORTED_MODULE_0__","_notifications_dropdown__WEBPACK_IMPORTED_MODULE_1__","document","addEventListener","NotificationsForm","notificationsDropdown","d","jquery__WEBPACK_IMPORTED_MODULE_0__","jquery__WEBPACK_IMPORTED_MODULE_0___default","n","_flash__WEBPACK_IMPORTED_MODULE_1__","$","on","e","preventDefault","this","is","data","notificationLevel","form","parents","find","toggleClass","hasClass","val","submit","saved","currentTarget","closest","replaceWith","html","Flash","_classCallCheck","toggleCheckbox","bind","initEventListeners","$checkbox","$parent","saveEvent","addClass","removeClass","showCheckboxLoadingSpinner","axios","attr","serialize","then","_ref","enable","setTimeout","catch","flash","__"],"mappings":"6IAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,KAAAI,EAAAJ,EAAA,KAGAK,SAASC,iBAAiB,mBAAoB,WAC5C,IAAIC,IACJC,kDCLFR,EAAAS,EAAAP,EAAA,sBAAAM,IAAA,IAAAE,EAAAV,EAAA,GAAAW,EAAAX,EAAAY,EAAAF,GAAAG,EAAAb,EAAA,GAGe,SAASQ,IACtBM,IAAET,UAAUU,GAAG,QAAS,uBAAwB,SAAoCC,GAElF,GADAA,EAAEC,kBACEH,IAAEI,MAAMC,GAAG,eAAuD,WAAtCL,IAAEI,MAAME,KAAK,qBAA7C,CAIA,IAAMC,EAAoBP,IAAEI,MAAME,KAAK,qBACjCE,EAAOR,IAAEI,MAAMK,QAAQ,4BAE7BD,EAAKE,KAAK,4BAA4BC,YAAY,8BAC9CH,EAAKI,SAAS,cAChBJ,EAAKE,KAAK,4BAA4BC,YAAY,UAClDH,EAAKE,KAAK,0BAA0BC,YAAY,WAElDH,EAAKE,KAAK,+BAA+BG,IAAIN,GAC7CC,EAAKM,YAGPd,IAAET,UAAUU,GAAG,eAAgB,qBAAsB,SAACC,EAAGI,GACnDA,EAAKS,MACPf,IAAEE,EAAEc,eACDC,QAAQ,6BACRC,YAAYZ,EAAKa,MAEpBC,YAAM,8BAA+B,iSCvBtB3B,aACnB,SAAAA,iGAAc4B,CAAAjB,KAAAX,GACZW,KAAKkB,eAAiBlB,KAAKkB,eAAeC,KAAKnB,MAC/CA,KAAKoB,yFAILxB,IAAET,UAAUU,GAAG,SAAU,gCAAiCG,KAAKkB,uDAGlDpB,GACb,IAAMuB,EAAYzB,IAAEE,EAAEc,eAChBU,EAAUD,EAAUR,QAAQ,eAElCb,KAAKuB,UAAUF,EAAWC,sDAIDA,GACzBA,EACGE,SAAS,cACTlB,KAAK,sCACLmB,YAAY,YACZD,SAAS,sBACTC,YAAY,6CAGPJ,EAAWC,GACnB,IAAMlB,EAAOkB,EAAQjB,QAAQ,cAE7BL,KAAK0B,2BAA2BJ,GAEhCK,IAAMvB,EAAKwB,KAAK,WAAWxB,EAAKwB,KAAK,UAAWxB,EAAKyB,aAClDC,KAAK,SAAAC,GAAc,IAAX7B,EAAW6B,EAAX7B,KACPmB,EAAUW,SACN9B,EAAKS,QACPW,EACGhB,KAAK,sCACLC,YAAY,uCACf0B,WAAW,WACTX,EACGG,YAAY,cACZnB,KAAK,sCACLC,YAAY,wCACd,QAGN2B,MAAM,kBAAMC,YAAMC,YAAG","file":"pages.profiles.index.64b28e63.chunk.js","sourcesContent":["import NotificationsForm from '../../../notifications_form';\nimport notificationsDropdown from '../../../notifications_dropdown';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  new NotificationsForm(); // eslint-disable-line no-new\n  notificationsDropdown();\n});\n","import $ from 'jquery';\nimport Flash from './flash';\n\nexport default function notificationsDropdown() {\n  $(document).on('click', '.update-notification', function updateNotificationCallback(e) {\n    e.preventDefault();\n    if ($(this).is('.is-active') && $(this).data('notificationLevel') === 'custom') {\n      return;\n    }\n\n    const notificationLevel = $(this).data('notificationLevel');\n    const form = $(this).parents('.notification-form:first');\n\n    form.find('.js-notification-loading').toggleClass('fa-bell fa-spin fa-spinner');\n    if (form.hasClass('no-label')) {\n      form.find('.js-notification-loading').toggleClass('hidden');\n      form.find('.js-notifications-icon').toggleClass('hidden');\n    }\n    form.find('#notification_setting_level').val(notificationLevel);\n    form.submit();\n  });\n\n  $(document).on('ajax:success', '.notification-form', (e, data) => {\n    if (data.saved) {\n      $(e.currentTarget)\n        .closest('.js-notification-dropdown')\n        .replaceWith(data.html);\n    } else {\n      Flash('Failed to save new settings', 'alert');\n    }\n  });\n}\n","import $ from 'jquery';\nimport { __ } from './locale';\nimport axios from './lib/utils/axios_utils';\nimport flash from './flash';\n\nexport default class NotificationsForm {\n  constructor() {\n    this.toggleCheckbox = this.toggleCheckbox.bind(this);\n    this.initEventListeners();\n  }\n\n  initEventListeners() {\n    $(document).on('change', '.js-custom-notification-event', this.toggleCheckbox);\n  }\n\n  toggleCheckbox(e) {\n    const $checkbox = $(e.currentTarget);\n    const $parent = $checkbox.closest('.form-check');\n\n    this.saveEvent($checkbox, $parent);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  showCheckboxLoadingSpinner($parent) {\n    $parent\n      .addClass('is-loading')\n      .find('.custom-notification-event-loading')\n      .removeClass('fa-check')\n      .addClass('fa-spin fa-spinner')\n      .removeClass('is-done');\n  }\n\n  saveEvent($checkbox, $parent) {\n    const form = $parent.parents('form:first');\n\n    this.showCheckboxLoadingSpinner($parent);\n\n    axios[form.attr('method')](form.attr('action'), form.serialize())\n      .then(({ data }) => {\n        $checkbox.enable();\n        if (data.saved) {\n          $parent\n            .find('.custom-notification-event-loading')\n            .toggleClass('fa-spin fa-spinner fa-check is-done');\n          setTimeout(() => {\n            $parent\n              .removeClass('is-loading')\n              .find('.custom-notification-event-loading')\n              .toggleClass('fa-spin fa-spinner fa-check is-done');\n          }, 2000);\n        }\n      })\n      .catch(() => flash(__('There was an error saving your notification settings.')));\n  }\n}\n"],"sourceRoot":""}