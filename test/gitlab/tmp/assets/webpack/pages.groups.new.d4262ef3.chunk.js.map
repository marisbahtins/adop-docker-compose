{"version":3,"sources":["webpack:///./pages/groups/new/index.js","webpack:///./pages/groups/index.js","webpack:///./group_avatar.js","webpack:///./group.js"],"names":["__webpack_require__","r","__webpack_exports__","_behaviors_bind_in_out__WEBPACK_IMPORTED_MODULE_0__","_group__WEBPACK_IMPORTED_MODULE_1__","_group_avatar__WEBPACK_IMPORTED_MODULE_2__","document","addEventListener","BindInOut","initAll","Group","groupAvatar","_persistent_user_callout__WEBPACK_IMPORTED_MODULE_0__","_projects_gke_cluster_dropdowns__WEBPACK_IMPORTED_MODULE_1__","callout","page","body","dataset","indexOf","querySelector","PersistentUserCallout","initGkeDropdowns","d","jquery__WEBPACK_IMPORTED_MODULE_0__","jquery__WEBPACK_IMPORTED_MODULE_0___default","n","$","on","this","closest","find","click","form","filename","val","replace","text","_classCallCheck","groupPath","groupName","updateHandler","update","bind","resetHandler","reset","slug","slugifyWithHyphens","off"],"mappings":"6IAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,KAAAI,EAAAJ,EAAA,KAAAK,EAAAL,EAAA,KAIAM,SAASC,iBAAiB,mBAAoB,WAC5CC,IAAUC,UACV,IAAIC,IACJC,kDCPFX,EAAAC,EAAAC,GAAA,IAAAU,EAAAZ,EAAA,IAAAa,EAAAb,EAAA,IASAM,SAASC,iBAAiB,mBAAoB,WAAM,IAL5CO,EAMEC,EAAST,SAASU,KAAKC,QAAvBF,MAEN,sBACA,6BACA,+BAGkBG,QAAQH,IAAS,KAb/BD,EAAUR,SAASa,cAAc,uBAE1B,IAAIC,IAAsBN,GAarCO,mDCnBJrB,EAAAsB,EAAApB,EAAA,sBAAAS,IAAA,IAAAY,EAAAvB,EAAA,GAAAwB,EAAAxB,EAAAyB,EAAAF,GAEe,SAASZ,IACtBe,IAAE,kCAAkCC,GAAG,QAAS,WAE9C,OADaD,IAAEE,MAAMC,QAAQ,QACjBC,KAAK,0BAA0BC,UAE7CL,IAAE,0BAA0BC,GAAG,SAAU,WACvC,IAAMK,EAAON,IAAEE,MAAMC,QAAQ,QACvBI,EAAWP,IAAEE,MAChBM,MACAC,QAAQ,YAAa,IACxB,OAAOH,EAAKF,KAAK,uBAAuBM,KAAKH,8QCT5BvB,aACnB,SAAAA,iGAAc2B,CAAAT,KAAAlB,GACZkB,KAAKU,UAAYZ,IAAE,eACnBE,KAAKW,UAAYb,IAAE,eACnBE,KAAKY,cAAgBZ,KAAKa,OAAOC,KAAKd,MACtCA,KAAKe,aAAef,KAAKgB,MAAMF,KAAKd,MACP,KAAzBA,KAAKW,UAAUL,QACjBN,KAAKW,UAAUZ,GAAG,QAASC,KAAKY,eAChCZ,KAAKU,UAAUX,GAAG,UAAWC,KAAKe,uEAKpC,IAAME,EAAOC,YAAmBlB,KAAKW,UAAUL,OAC/CN,KAAKU,UAAUJ,IAAIW,mCAInBjB,KAAKW,UAAUQ,IAAI,QAASnB,KAAKY,eACjCZ,KAAKU,UAAUS,IAAI,UAAWnB,KAAKe","file":"pages.groups.new.d4262ef3.chunk.js","sourcesContent":["import BindInOut from '~/behaviors/bind_in_out';\nimport Group from '~/group';\nimport groupAvatar from '~/group_avatar';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  BindInOut.initAll();\n  new Group(); // eslint-disable-line no-new\n  groupAvatar();\n});\n","import PersistentUserCallout from '~/persistent_user_callout';\nimport initGkeDropdowns from '~/projects/gke_cluster_dropdowns';\n\nfunction initGcpSignupCallout() {\n  const callout = document.querySelector('.gcp-signup-offer');\n\n  if (callout) new PersistentUserCallout(callout); // eslint-disable-line no-new\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const { page } = document.body.dataset;\n  const newClusterViews = [\n    'groups:clusters:new',\n    'groups:clusters:create_gcp',\n    'groups:clusters:create_user',\n  ];\n\n  if (newClusterViews.indexOf(page) > -1) {\n    initGcpSignupCallout();\n    initGkeDropdowns();\n  }\n});\n","import $ from 'jquery';\n\nexport default function groupAvatar() {\n  $('.js-choose-group-avatar-button').on('click', function onClickGroupAvatar() {\n    const form = $(this).closest('form');\n    return form.find('.js-group-avatar-input').click();\n  });\n  $('.js-group-avatar-input').on('change', function onChangeAvatarInput() {\n    const form = $(this).closest('form');\n    const filename = $(this)\n      .val()\n      .replace(/^.*[\\\\\\/]/, ''); // eslint-disable-line no-useless-escape\n    return form.find('.js-avatar-filename').text(filename);\n  });\n}\n","import $ from 'jquery';\nimport { slugifyWithHyphens } from './lib/utils/text_utility';\n\nexport default class Group {\n  constructor() {\n    this.groupPath = $('#group_path');\n    this.groupName = $('#group_name');\n    this.updateHandler = this.update.bind(this);\n    this.resetHandler = this.reset.bind(this);\n    if (this.groupName.val() === '') {\n      this.groupName.on('keyup', this.updateHandler);\n      this.groupPath.on('keydown', this.resetHandler);\n    }\n  }\n\n  update() {\n    const slug = slugifyWithHyphens(this.groupName.val());\n    this.groupPath.val(slug);\n  }\n\n  reset() {\n    this.groupName.off('keyup', this.updateHandler);\n    this.groupPath.off('keydown', this.resetHandler);\n  }\n}\n"],"sourceRoot":""}