{"version":3,"sources":["webpack:///./create_item_dropdown.js","webpack:///./behaviors/shortcuts/shortcuts_navigation.js","webpack:///./project_select_combo_button.js","webpack:///./project_select.js","webpack:///./toggle_buttons.js","webpack:///./pages/projects/project.js","webpack:///./behaviors/secret_values.js","webpack:///./ci_variable_list/native_form_variable_list.js","webpack:///./ci_variable_list/ci_variable_list.js","webpack:///./pages/projects/index.js"],"names":["CreateItemDropdown","options","_classCallCheck","this","defaultToggleLabel","fieldName","onSelect","getDataOption","getData","getDataRemote","filterRemote","createNewItemFromValueOption","createNewItemFromValue","$dropdown","$dropdownContainer","parent","$dropdownFooter","find","$createButton","buildDropdown","bindEvents","toggleFooter","_this","glDropdown","data","bind","filterable","search","fields","selectable","toggleLabel","selected","_","escape","title","text","item","id","onFilter","toggleCreateNewButton","clicked","e","preventDefault","html","val","on","onClickCreateWildcard","refreshData","selectRowAtIndex","remote","execute","term","callback","_this2","arguments","length","undefined","uniqueData","selectedItem","some","concat","newValue","toggleState","toggleClass","ShortcutsNavigation","_possibleConstructorReturn","_getPrototypeOf","call","Mousetrap","findAndFollowLink","enabledHelp","push","Shortcuts","ProjectSelectComboButton","select","projectSelectInput","$","newItemBtn","resourceType","resourceLabel","formattedText","deriveTextVariants","groupId","initLocalStorage","siblings","openDropdown","getProjectFromLocalStorage","selectProject","AccessorUtilities","isLocalStorageAccessSafe","localStorageKey","localStorageItemType","join","setBtnTextFromLocalStorage","event","currentTarget","select2","selectedProjectData","JSON","parse","projectMeta","url","name","setNewItemBtnAttributes","setProjectInLocalStorage","cachedProjectData","project","attr","defaultTextPrefix","presetTextSuffix","projectString","localStorage","getItem","stringify","setItem","split","slice","projectSelect","each","i","placeholder","simpleFilter","includeGroups","allProjects","orderBy","withIssuesEnabled","withMergeRequestsEnabled","withShared","includeProjectsInSubgroups","allowClear","minimumInputLength","query","finalCallback","projectsCallback","projects","results","groupsCallback","groups","Api","groupProjects","with_issues_enabled","with_merge_requests_enabled","with_shared","include_subgroups","order_by","membership","web_url","name_with_namespace","initSelection","el","then","_ref","dropdownCssClass","__webpack_require__","d","__webpack_exports__","setupToggleButtons","jquery__WEBPACK_IMPORTED_MODULE_0__","jquery__WEBPACK_IMPORTED_MODULE_0___default","n","_flash__WEBPACK_IMPORTED_MODULE_1__","_locale__WEBPACK_IMPORTED_MODULE_2__","_lib_utils_common_utils__WEBPACK_IMPORTED_MODULE_3__","updateToggle","toggle","isOn","classList","container","clickCallback","querySelectorAll","forEach","input","querySelector","parseBoolean","value","addEventListener","previousIsOn","setAttribute","Promise","resolve","catch","removeAttribute","trigger","Flash","__","Project","$cloneOptions","$projectCloneField","$cloneBtnLabel","mobileCloneField","document","selectedCloneOption","trim","addClass","$this","cloneType","removeClass","$el","activeText","$label","closest","dataset","clipboardText","initRefSwitcher","parents","submit","Cookies","set","remove","projectId","cookieKey","projectSelectDropdown","changeProject","window","location","refListItem","createElement","refLink","href","axios","get","params","ref","flash","filterByText","inputFieldName","renderRow","li","cloneNode","header","className","textContent","link","appendChild","obj","$form","$visit","shouldVisit","action","divider","indexOf","visitUrl","serialize","SecretValues","_ref$valueSelector","valueSelector","_ref$placeholderSelec","placeholderSelector","revealButton","isRevealed","secretRevealStatus","updateDom","onRevealButtonClicked","previousIsRevealed","values","n__","setupNativeFormVariableList","_ci_variable_list__WEBPACK_IMPORTED_MODULE_1__","_ref$formField","formField","$container","variableList","VariableList","init","$lastRow","last","checkIfRowTouched","ALL_ENVIRONMENTS_STRING","s__","createEnvironmentItem","environmentDropdownMap","WeakMap","inputMap","selector","default","key","secret_value","protected","environment_scope","_destroy","secretValues","index","rowEl","initRow","removeRow","inputSelector","Object","keys","map","$row","is","insertRow","css","$environmentSelect","createItemDropdown","getEnvironmentValues","refreshDropdownData","clearDropdown","_this3","$rowClone","clone","removeAttr","entry","after","row","hide","_this4","isEnabled","_this5","toArray","resultant","$input","valueMap","reduce","prevValueMap","envInput","_objectSpread","_defineProperty","_this6","environmentDropdown","r","_projects_gke_cluster_dropdowns__WEBPACK_IMPORTED_MODULE_0__","_persistent_user_callout__WEBPACK_IMPORTED_MODULE_1__","_project__WEBPACK_IMPORTED_MODULE_2__","_behaviors_shortcuts_shortcuts_navigation__WEBPACK_IMPORTED_MODULE_3__","page","body","callout","PersistentUserCallout","initGkeDropdowns"],"mappings":"oTAEqBA,aAOnB,SAAAA,EAAYC,gGAASC,CAAAC,KAAAH,GACnBG,KAAKC,mBAAqBH,EAAQG,mBAClCD,KAAKE,UAAYJ,EAAQI,UACzBF,KAAKG,SAAWL,EAAQK,UAAa,aACrCH,KAAKI,cAAgBN,EAAQO,QAC7BL,KAAKM,gBAAkBR,EAAQS,aAC/BP,KAAKQ,6BAA+BV,EAAQW,uBAC5CT,KAAKU,UAAYZ,EAAQY,UACzBV,KAAKW,mBAAqBX,KAAKU,UAAUE,SACzCZ,KAAKa,gBAAkBb,KAAKW,mBAAmBG,KAAK,oBACpDd,KAAKe,cAAgBf,KAAKW,mBAAmBG,KAAK,gCAElDd,KAAKgB,gBACLhB,KAAKiB,aAGLjB,KAAKkB,cAAa,kEAGJ,IAAAC,EAAAnB,KACdA,KAAKU,UAAUU,YACbC,KAAMrB,KAAKK,QAAQiB,KAAKtB,MACxBuB,YAAY,EACZhB,aAAcP,KAAKM,cACnBkB,QACEC,QAAS,SAEXC,YAAY,EACZC,YARwB,SAQZC,GACV,OAAOA,GAAY,OAAQA,EAAWC,IAAEC,OAAOF,EAASG,OAAS/B,KAAKC,oBAExEC,UAAWF,KAAKE,UAChB8B,KAZwB,SAYnBC,GACH,OAAOJ,IAAEC,OAAOG,EAAKD,OAEvBE,GAfwB,SAerBD,GACD,OAAOJ,IAAEC,OAAOG,EAAKC,KAEvBC,SAAUnC,KAAKoC,sBAAsBd,KAAKtB,MAC1CqC,QAAS,SAAAvC,GACPA,EAAQwC,EAAEC,iBACVpB,EAAKhB,sDAMTH,KAAKW,mBAAmBG,KAAK,qBAAqB0B,KAAK,IACvDxC,KAAKW,mBAAmBG,KAAK,yBAAyB2B,IAAI,yCAI1DzC,KAAKe,cAAc2B,GAAG,QAAS1C,KAAK2C,sBAAsBrB,KAAKtB,qDAG3CsC,GACpBA,EAAEC,iBAEFvC,KAAK4C,cACL5C,KAAKU,UAAUW,KAAK,cAAcwB,yDAKlC7C,KAAKU,UAAUW,KAAK,cAAcyB,OAAOC,0CAGnCC,EAAMC,GAAU,IAAAC,EAAAlD,KACtBA,KAAKI,cAAc4C,EAAM,WAAe,IAAd3B,EAAc8B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MAKlCG,EAAajC,EAFf6B,EAAKK,cAAgBlC,EAAKmC,KAAK,SAAAvB,GAAI,OAAIA,EAAKC,KAAOgB,EAAKK,aAAarB,OAIrEoB,EAAajC,EAAKoC,OAAOP,EAAKK,mBAGhCN,EAASK,oDAIUI,GACrB,OAAI1D,KAAKQ,6BACAR,KAAKQ,6BAA6BkD,IAIzC3B,MAAO2B,EACPxB,GAAIwB,EACJ1B,KAAM0B,iDAIYA,GAChBA,IACF1D,KAAKuD,aAAevD,KAAKS,uBAAuBiD,GAEhD1D,KAAKW,mBAAmBG,KAAK,qCAAqCkB,KAAK0B,IAGzE1D,KAAKkB,cAAcwC,wCAGRC,GACX3D,KAAKa,gBAAgB+C,YAAY,SAAUD,ixBC9G1BE,cACnB,SAAAA,IAAc,IAAA1C,EAAA,mGAAApB,CAAAC,KAAA6D,GACZ1C,EAAA2C,EAAA9D,KAAA+D,EAAAF,GAAAG,KAAAhE,OAEAiE,IAAU3C,KAAK,MAAO,kBAAM4C,YAAkB,wBAC9CD,IAAU3C,KAAK,MAAO,kBAAM4C,YAAkB,iCAC9CD,IAAU3C,KAAK,MAAO,kBAAM4C,YAAkB,iCAC9CD,IAAU3C,KAAK,MAAO,kBAAM4C,YAAkB,qBAC9CD,IAAU3C,KAAK,MAAO,kBAAM4C,YAAkB,wBAC9CD,IAAU3C,KAAK,MAAO,kBAAM4C,YAAkB,uBAC9CD,IAAU3C,KAAK,MAAO,kBAAM4C,YAAkB,wBAC9CD,IAAU3C,KAAK,MAAO,kBAAM4C,YAAkB,kCAC9CD,IAAU3C,KAAK,MAAO,kBAAM4C,YAAkB,uBAC9CD,IAAU3C,KAAK,MAAO,kBAAM4C,YAAkB,6BAC9CD,IAAU3C,KAAK,MAAO,kBAAM4C,YAAkB,+BAC9CD,IAAU3C,KAAK,MAAO,kBAAM4C,YAAkB,qBAC9CD,IAAU3C,KAAK,MAAO,kBAAM4C,YAAkB,yBAC9CD,IAAU3C,KAAK,MAAO,kBAAM4C,YAAkB,2BAC9CD,IAAU3C,KAAK,MAAO,kBAAM4C,YAAkB,6BAC9CD,IAAU3C,KAAK,MAAO,kBAAM4C,YAAkB,wBAC9CD,IAAU3C,KAAK,IAAK,kBAAM4C,YAAkB,0BAE5C/C,EAAKgD,YAAYC,KAAK,4BArBVjD,8OADiCkD,4PCD5BC,aACnB,SAAAA,EAAYC,gGAAQxE,CAAAC,KAAAsE,GAClBtE,KAAKwE,mBAAqBC,IAAEF,GAC5BvE,KAAK0E,WAAaD,IAAE,0BACpBzE,KAAK2E,aAAe3E,KAAK0E,WAAWrD,KAAK,QACzCrB,KAAK4E,cAAgB5E,KAAK0E,WAAWrD,KAAK,SAC1CrB,KAAK6E,cAAgB7E,KAAK8E,qBAC1B9E,KAAK+E,QAAU/E,KAAKwE,mBAAmBnD,KAAK,WAC5CrB,KAAKiB,aACLjB,KAAKgF,+EAGM,IAAA7D,EAAAnB,KACXA,KAAKwE,mBACFS,SAAS,mCACTvC,GAAG,QAAS,SAAAJ,GAAC,OAAInB,EAAK+D,aAAa5C,KAEtCtC,KAAK0E,WAAWhC,GAAG,QAAS,SAAAJ,GACrBnB,EAAKgE,+BACR7C,EAAEC,iBACFpB,EAAK+D,aAAa5C,MAItBtC,KAAKwE,mBAAmB9B,GAAG,SAAU,kBAAMvB,EAAKiE,6DAIrBC,IAAkBC,6BAG3CtF,KAAKuF,iBACH,QACAvF,KAAK+E,QACL/E,KAAK6E,cAAcW,qBACnB,kBACAC,KAAK,KACPzF,KAAK0F,mEAKIC,GACXlB,IAAEkB,EAAMC,eACLX,SAAS,wBACTY,QAAQ,gDAIX,IAAMC,EAAsBC,KAAKC,MAAMhG,KAAKwE,mBAAmB/B,OAIzDwD,GACJC,IAJc,GAAAzC,OAAMqC,EAAoBI,IAA1B,KAAAzC,OAAiCzD,KAAKwE,mBAAmBnD,KAAK,iBAK5E8E,KAJkBL,EAAoBK,MAOxCnG,KAAKoG,wBAAwBH,GAC7BjG,KAAKqG,yBAAyBJ,wDAI9B,IAAMK,EAAoBtG,KAAKmF,6BAE/BnF,KAAKoG,wBAAwBE,mDAGPC,GAClBA,GACFvG,KAAK0E,WAAW8B,KAAK,OAAQD,EAAQL,KACrClG,KAAK0E,WAAW1C,KAAhB,GAAAyB,OAAwBzD,KAAK6E,cAAc4B,kBAA3C,QAAAhD,OAAmE8C,EAAQJ,QAE3EnG,KAAK0E,WAAW1C,KAAhB,4BAAAyB,OAAiDzD,KAAK6E,cAAc6B,wEAKtE,IAAMC,EAAgBC,aAAaC,QAAQ7G,KAAKuF,iBAEhD,OAAOQ,KAAKC,MAAMW,oDAGKV,GACvB,IAAMU,EAAgBZ,KAAKe,UAAUb,GAErCW,aAAaG,QAAQ/G,KAAKuF,gBAAiBoB,gDAI3C,IAAMF,EAAoBzG,KAAK4E,cAY/B,OACEY,qBAVwB,OAAA/B,OAAUzD,KAAK2E,aACtCqC,MAAM,KACNvB,KAAK,KACLwB,MAAM,GAAI,IAQXR,oBACAC,iBARuB1G,KAAK2E,aAC3BqC,MAAM,KACNvB,KAAK,KACLwB,MAAM,GAAI,yCCjGF,SAASC,IACtBzC,IAAE,wBAAwB0C,KAAK,SAASC,EAAG7C,GACzC,IAAI8C,EAqBelG,EApBbmG,EAAe7C,IAAEF,GAAQlD,KAAK,kBAAmB,EAwFvD,OAvFArB,KAAK+E,QAAUN,IAAEF,GAAQlD,KAAK,WAC9BrB,KAAKuH,cAAgB9C,IAAEF,GAAQlD,KAAK,iBACpCrB,KAAKwH,YAAc/C,IAAEF,GAAQlD,KAAK,iBAAkB,EACpDrB,KAAKyH,QAAUhD,IAAEF,GAAQlD,KAAK,YAAc,KAC5CrB,KAAK0H,kBAAoBjD,IAAEF,GAAQlD,KAAK,qBACxCrB,KAAK2H,yBAA2BlD,IAAEF,GAAQlD,KAAK,4BAC/CrB,KAAK4H,gBAC8BvE,IAAjCoB,IAAEF,GAAQlD,KAAK,eAAqCoD,IAAEF,GAAQlD,KAAK,cACrErB,KAAK6H,2BAA6BpD,IAAEF,GAAQlD,KAAK,gCAAiC,EAClFrB,KAAK8H,WAAarD,IAAEF,GAAQlD,KAAK,gBAAiB,EAElDgG,EAAc,qBACVrH,KAAKuH,gBACPF,GAAe,aAGjB5C,IAAEF,GAAQsB,SACRwB,YAAaA,EACbU,mBAAoB,EACpBC,OAAiB7G,EAgDdnB,KA/CM,SAASgI,GACd,IAAIC,EAAeC,EAqBnB,OApBAD,EAAgB,SAASE,GACvB,IAAI9G,EAIJ,OAHAA,GACE+G,QAASD,GAEJH,EAAM/E,SAAS5B,IAGtB6G,EADE/G,EAAMoG,cACW,SAASY,GAC1B,IAAIE,EAMJ,OALAA,EAAiB,SAASC,GACxB,IAAIjH,EAEJ,OADAA,EAAOiH,EAAO7E,OAAO0E,GACdF,EAAc5G,IAEhBkH,IAAID,OAAON,EAAMhF,QAAUqF,IAGjBJ,EAEjB9G,EAAM4D,QACDwD,IAAIC,cACTrH,EAAM4D,QACNiD,EAAMhF,MAEJyF,oBAAqBtH,EAAMuG,kBAC3BgB,4BAA6BvH,EAAMwG,yBACnCgB,YAAaxH,EAAMyG,WACnBgB,kBAAmBzH,EAAM0G,4BAE3BK,GAGKK,IAAIJ,SACTH,EAAMhF,MAEJ6F,SAAU1H,EAAMsG,QAChBgB,oBAAqBtH,EAAMuG,kBAC3BgB,4BAA6BvH,EAAMwG,yBACnCmB,YAAa3H,EAAMqG,aAErBU,KAKRhG,GAAI,SAASqE,GACX,OAAIe,EAAqBf,EAAQrE,GAC1B6D,KAAKe,WACVX,KAAMI,EAAQJ,KACdD,IAAKK,EAAQwC,WAGjB/G,KAAM,SAASuE,GACb,OAAOA,EAAQyC,qBAAuBzC,EAAQJ,MAGhD8C,cAAe,SAASC,EAAIjG,GAC1B,OAAOsF,IAAIhC,QAAQ2C,EAAGzG,OAAO0G,KAAK,SAAAC,GAAA,IAAG/H,EAAH+H,EAAG/H,KAAH,OAAc4B,EAAS5B,MAG3DyG,WAAY9H,KAAK8H,WAEjBuB,iBAAkB,0BAEhB/B,EAAqB/C,EAClB,IAAID,EAAyBC,KAlGxC+E,EAAAC,EAAAC,EAAA,sBAAAtC,sCCAAoC,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,GAAAQ,EAAAR,EAAA,GAAAS,EAAAT,EAAA,IAeA,SAASU,EAAaC,EAAQC,GAC5BD,EAAOE,UAAUF,OAAO,aAAcC,GAgCzB,SAAST,EAAmBW,GAAqC,IAA1BC,EAA0BlH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAV,aACpDiH,EAAUE,iBAAiB,8BAEnCC,QAAQ,SAAAN,GACd,IAAMO,EAAQP,EAAOQ,cAAc,oCAInCT,EAAaC,EAHAS,YAAaF,EAAMG,QAKhCV,EAAOW,iBAAiB,QAvC5B,SAAyBX,EAAQO,EAAOH,GACtC,IAAMQ,EAAeH,YAAaF,EAAMG,OAGxCX,EAAaC,GAASY,GACtBZ,EAAOa,aAAa,YAAY,GAChCb,EAAOE,UAAUF,OAAO,cAAc,GAEtCc,QAAQC,QAAQX,GAAeQ,EAAcZ,IAC1Cd,KAAK,WAEJqB,EAAMM,aAAa,SAAUD,KAE9BI,MAAM,WAELjB,EAAaC,EAAQY,KAEtB1B,KAAK,WAEJc,EAAOiB,gBAAgB,YACvBjB,EAAOE,UAAUF,OAAO,cAAc,GAEtCxF,IAAE+F,GAAOW,QAAQ,oBAElBF,MAAM,WACLG,YAAMC,YAAG,qDAcsC/J,KAAK,KAAM2I,EAAQO,EAAOH,4TChD1DiB,aACnB,SAAAA,iGAAcvL,CAAAC,KAAAsL,GACZ,IAAMC,EAAgB9G,IAAE,6BAClB+G,EAAqB/G,IAAE,kBACvBgH,EAAiBhH,IAAE,iDACnBiH,EAAmBC,SAASlB,cAChC,iDAGImB,EAAsBH,EAAezJ,OAAO6J,OAC9CD,EAAoBxI,OAAS,GAC/BqB,IAAC,eAAAhB,OAAgBmI,EAAhB,MAAyCL,GAAeO,SAAS,aAGpErH,IAAE,IAAK8G,GAAe7I,GAAG,QAAS,SAAAJ,GAChCA,EAAEC,iBACF,IAAMwJ,EAAQtH,IAAEnC,EAAEsD,eACZM,EAAM6F,EAAMvF,KAAK,QACjBwF,EAAYD,EAAM1K,KAAK,aAE7BoD,IAAE,aAAc8G,GAAeU,YAAY,aAC3CxH,IAAC,sBAAAhB,OAAuBuI,EAAvB,OAAsC7E,KAAK,WAC1C,IAAM+E,EAAMzH,IAAEzE,MACRmM,EAAaD,EAAIpL,KAAK,8BAA8BkB,OAEpDoK,EADaF,EAAIG,QAAQ,yBACLvL,KAAK,4BAE/BoL,EAAItI,YAAY,aAChBwI,EAAOpK,KAAKmK,KAGVT,EACFA,EAAiBY,QAAQC,cAAgBrG,EAEzCsF,EAAmB/I,IAAIyD,GAEzBzB,IAAE,2BAA2BzC,KAAKkE,KAGpCoF,EAAQkB,kBACR/H,IAAE,wBAAwB/B,GAAG,SAAU,WACrC,OAAO+B,IAAEzE,MACNyM,QAAQ,QACRC,WAELjI,IAAE,wBAAwB/B,GAAG,QAAS,SAASJ,GAK7C,OAJAqK,IAAQC,IAAI,sBAAuB,SACnCnI,IAAEzE,MACCyM,QAAQ,uBACRI,SACIvK,EAAEC,mBAEXkC,IAAE,6BAA6B/B,GAAG,QAAS,SAASJ,GAKlD,OAJAqK,IAAQC,IAAI,2BAA4B,SACxCnI,IAAEzE,MACCyM,QAAQ,wBACRI,SACIvK,EAAEC,mBAEXkC,IAAE,+CAA+C/B,GAAG,QAAS,SAASJ,GACpE,IAAMwK,EAAYrI,IAAEzE,MAAMqB,KAAK,cACzB0L,EAAS,8CAAAtJ,OAAiDqJ,GAKhE,OAJAH,IAAQC,IAAIG,EAAW,SACvBtI,IAAEzE,MACCyM,QAAQ,0CACRI,SACIvK,EAAEC,mBAEX+I,EAAQ0B,8FAIR9F,cACAzC,IAAE,wBAAwB/B,GAAG,QAAS,SAAAJ,GAAC,OAAIgJ,EAAQ2B,cAAcxI,IAAEnC,EAAEsD,eAAenD,+CAGjEyD,GACnB,OAAQgH,OAAOC,SAAWjH,4CAI1B,IAAIkH,EAAczB,SAAS0B,cAAc,MACrCC,EAAU3B,SAAS0B,cAAc,KAIrC,OAFAC,EAAQC,KAAO,IAER9I,IAAE,6BAA6B0C,KAAK,WACzC,IAAIzG,EAAWkB,EAGf,OAFAlB,EAAY+D,IAAEzE,MACd4B,EAAWlB,EAAUW,KAAK,YACnBX,EAAUU,YACfC,KAD0B,SACrB2B,EAAMC,GACTuK,IACGC,IAAI/M,EAAUW,KAAK,YAClBqM,QACEC,IAAKjN,EAAUW,KAAK,OACpBG,OAAQwB,KAGXmG,KAAK,SAAAC,GAAA,IAAG/H,EAAH+H,EAAG/H,KAAH,OAAc4B,EAAS5B,KAC5B4J,MAAM,kBAAM2C,YAAMvC,YAAG,gDAE1B3J,YAAY,EACZH,YAAY,EACZhB,cAAc,EACdsN,cAAc,EACdC,eAAgBpN,EAAUW,KAAK,kBAC/BnB,UAAWQ,EAAUW,KAAK,aAC1B0M,UAAW,SAASJ,GAClB,IAAIK,EAAKZ,EAAYa,WAAU,GAE/B,GAAkB,MAAdN,EAAIO,OACNF,EAAGG,UAAY,kBACfH,EAAGI,YAAcT,EAAIO,WAChB,CACL,IAAIG,EAAOf,EAAQW,WAAU,GAEzBN,IAAQ/L,IACVyM,EAAKF,UAAY,aAGnBE,EAAKD,YAAcT,EACnBU,EAAK/B,QAAQqB,IAAMA,EAEnBK,EAAGM,YAAYD,GAGjB,OAAOL,GAET9L,GAAI,SAASqM,EAAKrC,GAChB,OAAOA,EAAI1F,KAAK,aAElB7E,YAAa,SAAS4M,EAAKrC,GACzB,OAAOA,EAAIlK,OAAO6J,QAEpBxJ,QAAS,SAASvC,GAGhB,GAFcA,EAANwC,EACNC,iBACEkC,IAAE,qBAAqBrB,OAAQ,CACjC,IAAIoL,EAAQ9N,EAAU2L,QAAQ,QAE1BoC,EAAS/N,EAAUW,KAAK,SACxBqN,IAAcD,GAAgBA,EAC9BE,EAASH,EAAMhI,KAAK,UACpBoI,GAAmC,IAAzBD,EAAOE,QAAQ,KAAc,IAAM,IAC7CH,GACFI,YAAQ,GAAArL,OAAIkL,GAAJlL,OAAamL,GAAbnL,OAAuB+K,EAAMO,gUCzJ9BC,aACnB,SAAAA,EAAA5F,GAIG,IAHDgB,EAGChB,EAHDgB,UAGC6E,EAAA7F,EAFD8F,qBAEC,IAAAD,EAFe,mBAEfA,EAAAE,EAAA/F,EADDgG,2BACC,IAAAD,EADqB,+BACrBA,+FAAApP,CAAAC,KAAAgP,GACDhP,KAAKoK,UAAYA,EACjBpK,KAAKkP,cAAgBA,EACrBlP,KAAKoP,oBAAsBA,wDAM3B,GAFApP,KAAKqP,aAAerP,KAAKoK,UAAUK,cAAc,kCAE7CzK,KAAKqP,aAAc,CACrB,IAAMC,EAAa5E,YAAa1K,KAAKqP,aAAa/C,QAAQiD,oBAC1DvP,KAAKwP,UAAUF,GAEftP,KAAKqP,aAAazE,iBAAiB,QAAS5K,KAAKyP,sBAAsBnO,KAAKtB,wDAK9E,IAAM0P,EAAqBhF,YAAa1K,KAAKqP,aAAa/C,QAAQiD,oBAClEvP,KAAKwP,WAAWE,qCAGRJ,GACR,IAAMK,EAAS3P,KAAKoK,UAAUE,iBAAiBtK,KAAKkP,eACpDS,EAAOpF,QAAQ,SAAAI,GACbA,EAAMR,UAAUF,OAAO,QAASqF,KAGbtP,KAAKoK,UAAUE,iBAAiBtK,KAAKoP,qBAC7C7E,QAAQ,SAAAlD,GACnBA,EAAY8C,UAAUF,OAAO,OAAQqF,KAGvCtP,KAAKqP,aAAajB,YAAckB,EAC5BM,YAAI,aAAc,cAAeD,EAAOvM,QACxCwM,YAAI,eAAgB,gBAAiBD,EAAOvM,QAChDpD,KAAKqP,aAAa/C,QAAQiD,mBAAqBD,yEC5CnDhG,EAAAC,EAAAC,EAAA,sBAAAqG,IAAA,IAAAnG,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAoG,EAAAxG,EAAA,KAIe,SAASuG,EAATzG,GAA6E,IAAtCgB,EAAsChB,EAAtCgB,UAAsC2F,EAAA3G,EAA3B4G,iBAA2B,IAAAD,EAAf,YAAeA,EACpFE,EAAaxL,IAAE2F,GAEf8F,EAAe,IAAIC,KACvB/F,UAAW6F,EACXD,cAEFE,EAAaE,OAIbH,EAAW5D,QAAQ,QAAQ3J,GAAG,wBAAyB,WACrD,IAAM2N,EAAWJ,EAAWnP,KAAK,WAAWwP,OAE1BJ,EAAaK,kBAAkBF,IAE/CA,EAASvP,KAAK,mBAAmB0F,KAAK,OAAQ,qaCbpD,IAAMgK,EAA0BC,YAAI,+BAEpC,SAASC,EAAsB/F,GAC7B,OACE5I,MAAiB,MAAV4I,EAAgB6F,EAA0B7F,EACjDzI,GAAIyI,EACJ3I,KAAgB,MAAV2I,EAAgB8F,YAAI,mCAAqC9F,OAI9CwF,aACnB,SAAAA,EAAA/G,GAAsC,IAAxBgB,EAAwBhB,EAAxBgB,UAAW4F,EAAa5G,EAAb4G,uGAAajQ,CAAAC,KAAAmQ,GACpCnQ,KAAKiQ,WAAaxL,IAAE2F,GACpBpK,KAAKgQ,UAAYA,EACjBhQ,KAAK2Q,uBAAyB,IAAIC,QAElC5Q,KAAK6Q,UACH3O,IACE4O,SAAU,2BACVC,QAAS,IAEXC,KACEF,SAAU,4BACVC,QAAS,IAEXE,cACEH,SAAU,8BACVC,QAAS,IAEXG,WACEJ,SAAU,kCAGVC,QAAStM,IAAE,mCAAmC+B,KAAK,iBAErD2K,mBAIEL,SAAQ,eAAArN,OAAiBzD,KAAKgQ,UAAtB,iDACRe,QAAS,KAEXK,UACEN,SAAU,gCACVC,QAAS,KAIb/Q,KAAKqR,aAAe,IAAIrC,KACtB5E,UAAWpK,KAAKiQ,WAAW,GAC3Bf,cAAe,4CACfE,oBAAqB,gHAKvBpP,KAAKiB,aACLjB,KAAKqR,aAAajB,4CAGP,IAAAjP,EAAAnB,KACXA,KAAKiQ,WAAWnP,KAAK,WAAWqG,KAAK,SAACmK,EAAOC,GAC3CpQ,EAAKqQ,QAAQD,KAGfvR,KAAKiQ,WAAWvN,GAAG,QAAS,wBAAyB,SAAAJ,GACnDA,EAAEC,iBACFpB,EAAKsQ,UAAUhN,IAAEnC,EAAEsD,eAAeyG,QAAQ,cAG5C,IAAMqF,EAAgBC,OAAOC,KAAK5R,KAAK6Q,UACpCgB,IAAI,SAAA1L,GAAI,OAAIhF,EAAK0P,SAAS1K,GAAM2K,WAChCrL,KAAK,KAGRzF,KAAKiQ,WAAWvN,GAAG,OAAQgP,EAAe,SAAApP,GACxC,IAAMwP,EAAOrN,IAAEnC,EAAEsD,eAAeyG,QAAQ,WAEpCyF,EAAKC,GAAG,uBAAyB5Q,EAAKoP,kBAAkBuB,IAC1D3Q,EAAKsQ,UAAUK,KAKnB9R,KAAKiQ,WAAWvN,GAAG,uBAAwBgP,EAAe,WACxD,IAAMrB,EAAWlP,EAAK8O,WAAWnP,KAAK,WAAWwP,OAE7CnP,EAAKoP,kBAAkBF,IACzBlP,EAAK6Q,UAAU3B,qCAKbkB,GAAO,IAAArO,EAAAlD,KACP8R,EAAOrN,IAAE8M,GAEf9H,YAAmBqI,EAAK,IAGxBA,EAAKhR,KAAKd,KAAK6Q,SAASI,aAAaH,UAAUmB,IAAI,SAAU,IAE7D,IAAMC,EAAqBJ,EAAKhR,KAAK,mCACrC,GAAIoR,EAAmB9O,OAAQ,CAC7B,IAAM+O,EAAqB,IAAItS,KAC7Ba,UAAWwR,EACXjS,mBAAoBuQ,EACpBtQ,UAAS,GAAAuD,OAAKzD,KAAKgQ,UAAV,+CACT3P,QAAS,SAAC2C,EAAMC,GAAP,OAAoBA,EAASC,EAAKkP,yBAC3C3R,uBAAwBiQ,EACxBvQ,SAAU,WAGR+C,EAAKmP,sBAELP,EAAKhR,KAAKoC,EAAK2N,SAASM,kBAAkBL,UAAU3F,QAAQ,qBAKhEgH,EAAmBG,gBAEnBtS,KAAK2Q,uBAAuB/D,IAAIkF,EAAK,GAAIK,sCAInCL,GAAM,IAAAS,EAAAvS,KACRwS,EAAYV,EAAKW,QACvBD,EAAUE,WAAW,qBAGrBf,OAAOC,KAAK5R,KAAK6Q,UAAUtG,QAAQ,SAAApE,GACjC,IAAMwM,EAAQJ,EAAK1B,SAAS1K,GAC5BqM,EAAU1R,KAAK6R,EAAM7B,UAAUrO,IAAIkQ,EAAM5B,WAI3CyB,EAAU1R,KAAK,uBAAuBqG,KAAK,SAACmK,EAAO5Q,GACjDA,EAAUyJ,UAAU0C,OAAO,UAG7B7M,KAAKwR,QAAQgB,GAEbV,EAAKc,MAAMJ,qCAGHK,GACR,IAAMf,EAAOrN,IAAEoO,GACKnI,YAAaoH,EAAKtL,KAAK,uBAGzCsL,EAAKgB,OACLhB,EAEGhR,KAAKd,KAAK6Q,SAASO,SAASN,UAC5BrO,KAAI,IAEPqP,EAAKjF,SAKP7M,KAAKqS,gEAGWP,GAAM,IAAAiB,EAAA/S,KACtB,OAAO2R,OAAOC,KAAK5R,KAAK6Q,UAAUrN,KAAK,SAAA2C,GACrC,IAAMwM,EAAQI,EAAKlC,SAAS1K,GACtB+F,EAAM4F,EAAKhR,KAAK6R,EAAM7B,UAC5B,OAAO5E,EAAI9I,QAAU8I,EAAIzJ,QAAUkQ,EAAM5B,oDAIX,IAAlBiC,IAAkB7P,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAChCnD,KAAKiQ,WAAWnP,KAAKd,KAAK6Q,SAASG,IAAIF,UAAUtK,KAAK,YAAawM,GACnEhT,KAAKiQ,WAAWnP,KAAK,yBAAyB0F,KAAK,YAAawM,wCAIhEhT,KAAKqR,aAAa7B,WAAU,wCAGjB,IAAAyD,EAAAjT,KAQX,OALkBA,KAAKiQ,WACpBnP,KAAK,WACLoS,UACAjM,MAAM,GAAI,GAEI4K,IAAI,SAAAN,GACnB,IAAM4B,KASN,OARAxB,OAAOC,KAAKqB,EAAKpC,UAAUtG,QAAQ,SAAApE,GACjC,IAAMwM,EAAQM,EAAKpC,SAAS1K,GACtBiN,EAAS3O,IAAE8M,GAAOzQ,KAAK6R,EAAM7B,UAC/BsC,EAAOhQ,SACT+P,EAAUhN,GAAQiN,EAAO3Q,SAItB0Q,mDAKT,IAAME,EAAWrT,KAAKiQ,WACnBnP,KAAKd,KAAK6Q,SAASM,kBAAkBL,UACrCoC,UACAI,OACC,SAACC,EAAcC,GAAf,yUAAAC,IACKF,EADLG,KAEGF,EAAS7I,MAAQ6I,EAAS7I,aAKjC,OAAOgH,OAAOC,KAAKyB,GAAUxB,IAAInB,iDAGb,IAAAiD,EAAA3T,KACpBA,KAAKiQ,WAAWnP,KAAK,WAAWqG,KAAK,SAACmK,EAAOC,GAC3C,IAAMqC,EAAsBD,EAAKhD,uBAAuBlD,IAAI8D,GACxDqC,GACFA,EAAoBhR,sFCrO5B0G,EAAAuK,EAAArK,GAAA,IAAAsK,EAAAxK,EAAA,IAAAyK,EAAAzK,EAAA,IAAA0K,EAAA1K,EAAA,IAAA2K,EAAA3K,EAAA,IAKAqC,SAASf,iBAAiB,mBAAoB,WAAM,IAC1CsJ,EAASvI,SAASwI,KAAK7H,QAAvB4H,KAOR,IALE,wBACA,+BACA,iCAGkBrF,QAAQqF,IAAS,EAAG,CACtC,IAAME,EAAUzI,SAASlB,cAAc,qBACnC2J,GAAS,IAAIC,IAAsBD,GAEvCE,cAGF,IAAIhJ,IACJ,IAAIzH","file":"commons~pages.projects.pipeline_schedules.create~pages.projects.pipeline_schedules.edit~pages.projec~43780440.92af2084.chunk.js","sourcesContent":["import _ from 'underscore';\n\nexport default class CreateItemDropdown {\n  /**\n   * @param {Object} options containing\n   *                         `$dropdown` target element\n   *                          `onSelect` event callback\n   * $dropdown must be an element created using `dropdown_tag()` rails helper\n   */\n  constructor(options) {\n    this.defaultToggleLabel = options.defaultToggleLabel;\n    this.fieldName = options.fieldName;\n    this.onSelect = options.onSelect || (() => {});\n    this.getDataOption = options.getData;\n    this.getDataRemote = !!options.filterRemote;\n    this.createNewItemFromValueOption = options.createNewItemFromValue;\n    this.$dropdown = options.$dropdown;\n    this.$dropdownContainer = this.$dropdown.parent();\n    this.$dropdownFooter = this.$dropdownContainer.find('.dropdown-footer');\n    this.$createButton = this.$dropdownContainer.find('.js-dropdown-create-new-item');\n\n    this.buildDropdown();\n    this.bindEvents();\n\n    // Hide footer\n    this.toggleFooter(true);\n  }\n\n  buildDropdown() {\n    this.$dropdown.glDropdown({\n      data: this.getData.bind(this),\n      filterable: true,\n      filterRemote: this.getDataRemote,\n      search: {\n        fields: ['text'],\n      },\n      selectable: true,\n      toggleLabel(selected) {\n        return selected && 'id' in selected ? _.escape(selected.title) : this.defaultToggleLabel;\n      },\n      fieldName: this.fieldName,\n      text(item) {\n        return _.escape(item.text);\n      },\n      id(item) {\n        return _.escape(item.id);\n      },\n      onFilter: this.toggleCreateNewButton.bind(this),\n      clicked: options => {\n        options.e.preventDefault();\n        this.onSelect();\n      },\n    });\n  }\n\n  clearDropdown() {\n    this.$dropdownContainer.find('.dropdown-content').html('');\n    this.$dropdownContainer.find('.dropdown-input-field').val('');\n  }\n\n  bindEvents() {\n    this.$createButton.on('click', this.onClickCreateWildcard.bind(this));\n  }\n\n  onClickCreateWildcard(e) {\n    e.preventDefault();\n\n    this.refreshData();\n    this.$dropdown.data('glDropdown').selectRowAtIndex();\n  }\n\n  refreshData() {\n    // Refresh the dropdown's data, which ends up calling `getData`\n    this.$dropdown.data('glDropdown').remote.execute();\n  }\n\n  getData(term, callback) {\n    this.getDataOption(term, (data = []) => {\n      // Ensure the selected item isn't already in the data to avoid duplicates\n      const alreadyHasSelectedItem =\n        this.selectedItem && data.some(item => item.id === this.selectedItem.id);\n\n      let uniqueData = data;\n      if (!alreadyHasSelectedItem) {\n        uniqueData = data.concat(this.selectedItem || []);\n      }\n\n      callback(uniqueData);\n    });\n  }\n\n  createNewItemFromValue(newValue) {\n    if (this.createNewItemFromValueOption) {\n      return this.createNewItemFromValueOption(newValue);\n    }\n\n    return {\n      title: newValue,\n      id: newValue,\n      text: newValue,\n    };\n  }\n\n  toggleCreateNewButton(newValue) {\n    if (newValue) {\n      this.selectedItem = this.createNewItemFromValue(newValue);\n\n      this.$dropdownContainer.find('.js-dropdown-create-new-item code').text(newValue);\n    }\n\n    this.toggleFooter(!newValue);\n  }\n\n  toggleFooter(toggleState) {\n    this.$dropdownFooter.toggleClass('hidden', toggleState);\n  }\n}\n","import Mousetrap from 'mousetrap';\nimport findAndFollowLink from '../../lib/utils/navigation_utility';\nimport Shortcuts from './shortcuts';\n\nexport default class ShortcutsNavigation extends Shortcuts {\n  constructor() {\n    super();\n\n    Mousetrap.bind('g p', () => findAndFollowLink('.shortcuts-project'));\n    Mousetrap.bind('g v', () => findAndFollowLink('.shortcuts-project-activity'));\n    Mousetrap.bind('g r', () => findAndFollowLink('.shortcuts-project-releases'));\n    Mousetrap.bind('g f', () => findAndFollowLink('.shortcuts-tree'));\n    Mousetrap.bind('g c', () => findAndFollowLink('.shortcuts-commits'));\n    Mousetrap.bind('g j', () => findAndFollowLink('.shortcuts-builds'));\n    Mousetrap.bind('g n', () => findAndFollowLink('.shortcuts-network'));\n    Mousetrap.bind('g d', () => findAndFollowLink('.shortcuts-repository-charts'));\n    Mousetrap.bind('g i', () => findAndFollowLink('.shortcuts-issues'));\n    Mousetrap.bind('g b', () => findAndFollowLink('.shortcuts-issue-boards'));\n    Mousetrap.bind('g m', () => findAndFollowLink('.shortcuts-merge_requests'));\n    Mousetrap.bind('g w', () => findAndFollowLink('.shortcuts-wiki'));\n    Mousetrap.bind('g s', () => findAndFollowLink('.shortcuts-snippets'));\n    Mousetrap.bind('g k', () => findAndFollowLink('.shortcuts-kubernetes'));\n    Mousetrap.bind('g e', () => findAndFollowLink('.shortcuts-environments'));\n    Mousetrap.bind('g l', () => findAndFollowLink('.shortcuts-metrics'));\n    Mousetrap.bind('i', () => findAndFollowLink('.shortcuts-new-issue'));\n\n    this.enabledHelp.push('.hidden-shortcut.project');\n  }\n}\n","import $ from 'jquery';\nimport AccessorUtilities from './lib/utils/accessor';\n\nexport default class ProjectSelectComboButton {\n  constructor(select) {\n    this.projectSelectInput = $(select);\n    this.newItemBtn = $('.new-project-item-link');\n    this.resourceType = this.newItemBtn.data('type');\n    this.resourceLabel = this.newItemBtn.data('label');\n    this.formattedText = this.deriveTextVariants();\n    this.groupId = this.projectSelectInput.data('groupId');\n    this.bindEvents();\n    this.initLocalStorage();\n  }\n\n  bindEvents() {\n    this.projectSelectInput\n      .siblings('.new-project-item-select-button')\n      .on('click', e => this.openDropdown(e));\n\n    this.newItemBtn.on('click', e => {\n      if (!this.getProjectFromLocalStorage()) {\n        e.preventDefault();\n        this.openDropdown(e);\n      }\n    });\n\n    this.projectSelectInput.on('change', () => this.selectProject());\n  }\n\n  initLocalStorage() {\n    const localStorageIsSafe = AccessorUtilities.isLocalStorageAccessSafe();\n\n    if (localStorageIsSafe) {\n      this.localStorageKey = [\n        'group',\n        this.groupId,\n        this.formattedText.localStorageItemType,\n        'recent-project',\n      ].join('-');\n      this.setBtnTextFromLocalStorage();\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  openDropdown(event) {\n    $(event.currentTarget)\n      .siblings('.project-item-select')\n      .select2('open');\n  }\n\n  selectProject() {\n    const selectedProjectData = JSON.parse(this.projectSelectInput.val());\n    const projectUrl = `${selectedProjectData.url}/${this.projectSelectInput.data('relativePath')}`;\n    const projectName = selectedProjectData.name;\n\n    const projectMeta = {\n      url: projectUrl,\n      name: projectName,\n    };\n\n    this.setNewItemBtnAttributes(projectMeta);\n    this.setProjectInLocalStorage(projectMeta);\n  }\n\n  setBtnTextFromLocalStorage() {\n    const cachedProjectData = this.getProjectFromLocalStorage();\n\n    this.setNewItemBtnAttributes(cachedProjectData);\n  }\n\n  setNewItemBtnAttributes(project) {\n    if (project) {\n      this.newItemBtn.attr('href', project.url);\n      this.newItemBtn.text(`${this.formattedText.defaultTextPrefix} in ${project.name}`);\n    } else {\n      this.newItemBtn.text(`Select project to create ${this.formattedText.presetTextSuffix}`);\n    }\n  }\n\n  getProjectFromLocalStorage() {\n    const projectString = localStorage.getItem(this.localStorageKey);\n\n    return JSON.parse(projectString);\n  }\n\n  setProjectInLocalStorage(projectMeta) {\n    const projectString = JSON.stringify(projectMeta);\n\n    localStorage.setItem(this.localStorageKey, projectString);\n  }\n\n  deriveTextVariants() {\n    const defaultTextPrefix = this.resourceLabel;\n\n    // the trailing slice call depluralizes each of these strings (e.g. new-issues -> new-issue)\n    const localStorageItemType = `new-${this.resourceType\n      .split('_')\n      .join('-')\n      .slice(0, -1)}`;\n    const presetTextSuffix = this.resourceType\n      .split('_')\n      .join(' ')\n      .slice(0, -1);\n\n    return {\n      localStorageItemType, // new-issue / new-merge-request\n      defaultTextPrefix, // New issue / New merge request\n      presetTextSuffix, // issue / merge request\n    };\n  }\n}\n","/* eslint-disable func-names, no-var, object-shorthand, one-var, no-else-return */\n\nimport $ from 'jquery';\nimport Api from './api';\nimport ProjectSelectComboButton from './project_select_combo_button';\n\nexport default function projectSelect() {\n  $('.ajax-project-select').each(function(i, select) {\n    var placeholder;\n    const simpleFilter = $(select).data('simpleFilter') || false;\n    this.groupId = $(select).data('groupId');\n    this.includeGroups = $(select).data('includeGroups');\n    this.allProjects = $(select).data('allProjects') || false;\n    this.orderBy = $(select).data('orderBy') || 'id';\n    this.withIssuesEnabled = $(select).data('withIssuesEnabled');\n    this.withMergeRequestsEnabled = $(select).data('withMergeRequestsEnabled');\n    this.withShared =\n      $(select).data('withShared') === undefined ? true : $(select).data('withShared');\n    this.includeProjectsInSubgroups = $(select).data('includeProjectsInSubgroups') || false;\n    this.allowClear = $(select).data('allowClear') || false;\n\n    placeholder = 'Search for project';\n    if (this.includeGroups) {\n      placeholder += ' or group';\n    }\n\n    $(select).select2({\n      placeholder: placeholder,\n      minimumInputLength: 0,\n      query: (function(_this) {\n        return function(query) {\n          var finalCallback, projectsCallback;\n          finalCallback = function(projects) {\n            var data;\n            data = {\n              results: projects,\n            };\n            return query.callback(data);\n          };\n          if (_this.includeGroups) {\n            projectsCallback = function(projects) {\n              var groupsCallback;\n              groupsCallback = function(groups) {\n                var data;\n                data = groups.concat(projects);\n                return finalCallback(data);\n              };\n              return Api.groups(query.term, {}, groupsCallback);\n            };\n          } else {\n            projectsCallback = finalCallback;\n          }\n          if (_this.groupId) {\n            return Api.groupProjects(\n              _this.groupId,\n              query.term,\n              {\n                with_issues_enabled: _this.withIssuesEnabled,\n                with_merge_requests_enabled: _this.withMergeRequestsEnabled,\n                with_shared: _this.withShared,\n                include_subgroups: _this.includeProjectsInSubgroups,\n              },\n              projectsCallback,\n            );\n          } else {\n            return Api.projects(\n              query.term,\n              {\n                order_by: _this.orderBy,\n                with_issues_enabled: _this.withIssuesEnabled,\n                with_merge_requests_enabled: _this.withMergeRequestsEnabled,\n                membership: !_this.allProjects,\n              },\n              projectsCallback,\n            );\n          }\n        };\n      })(this),\n      id: function(project) {\n        if (simpleFilter) return project.id;\n        return JSON.stringify({\n          name: project.name,\n          url: project.web_url,\n        });\n      },\n      text: function(project) {\n        return project.name_with_namespace || project.name;\n      },\n\n      initSelection: function(el, callback) {\n        return Api.project(el.val()).then(({ data }) => callback(data));\n      },\n\n      allowClear: this.allowClear,\n\n      dropdownCssClass: 'ajax-project-dropdown',\n    });\n    if (simpleFilter) return select;\n    return new ProjectSelectComboButton(select);\n  });\n}\n","import $ from 'jquery';\nimport Flash from './flash';\nimport { __ } from './locale';\nimport { parseBoolean } from './lib/utils/common_utils';\n\n/*\n example HAML:\n ```\n  %button.js-project-feature-toggle.project-feature-toggle{ type: \"button\",\n    class: \"#{'is-checked' if enabled?}\",\n    'aria-label': _('Toggle Kubernetes Cluster') }\n    %input{ type: \"hidden\", class: 'js-project-feature-toggle-input', value: enabled? }\n  ```\n*/\n\nfunction updateToggle(toggle, isOn) {\n  toggle.classList.toggle('is-checked', isOn);\n}\n\nfunction onToggleClicked(toggle, input, clickCallback) {\n  const previousIsOn = parseBoolean(input.value);\n\n  // Visually change the toggle and start loading\n  updateToggle(toggle, !previousIsOn);\n  toggle.setAttribute('disabled', true);\n  toggle.classList.toggle('is-loading', true);\n\n  Promise.resolve(clickCallback(!previousIsOn, toggle))\n    .then(() => {\n      // Actually change the input value\n      input.setAttribute('value', !previousIsOn);\n    })\n    .catch(() => {\n      // Revert the visuals if something goes wrong\n      updateToggle(toggle, previousIsOn);\n    })\n    .then(() => {\n      // Remove the loading indicator in any case\n      toggle.removeAttribute('disabled');\n      toggle.classList.toggle('is-loading', false);\n\n      $(input).trigger('trigger-change');\n    })\n    .catch(() => {\n      Flash(__('Something went wrong when toggling the button'));\n    });\n}\n\nexport default function setupToggleButtons(container, clickCallback = () => {}) {\n  const toggles = container.querySelectorAll('.js-project-feature-toggle');\n\n  toggles.forEach(toggle => {\n    const input = toggle.querySelector('.js-project-feature-toggle-input');\n    const isOn = parseBoolean(input.value);\n\n    // Get the visible toggle in sync with the hidden input\n    updateToggle(toggle, isOn);\n\n    toggle.addEventListener('click', onToggleClicked.bind(null, toggle, input, clickCallback));\n  });\n}\n","/* eslint-disable func-names, no-var, no-return-assign, one-var, object-shorthand, vars-on-top */\n\nimport $ from 'jquery';\nimport Cookies from 'js-cookie';\nimport { __ } from '~/locale';\nimport { visitUrl } from '~/lib/utils/url_utility';\nimport axios from '~/lib/utils/axios_utils';\nimport flash from '~/flash';\nimport projectSelect from '../../project_select';\n\nexport default class Project {\n  constructor() {\n    const $cloneOptions = $('ul.clone-options-dropdown');\n    const $projectCloneField = $('#project_clone');\n    const $cloneBtnLabel = $('.js-git-clone-holder .js-clone-dropdown-label');\n    const mobileCloneField = document.querySelector(\n      '.js-mobile-git-clone .js-clone-dropdown-label',\n    );\n\n    const selectedCloneOption = $cloneBtnLabel.text().trim();\n    if (selectedCloneOption.length > 0) {\n      $(`a:contains('${selectedCloneOption}')`, $cloneOptions).addClass('is-active');\n    }\n\n    $('a', $cloneOptions).on('click', e => {\n      e.preventDefault();\n      const $this = $(e.currentTarget);\n      const url = $this.attr('href');\n      const cloneType = $this.data('cloneType');\n\n      $('.is-active', $cloneOptions).removeClass('is-active');\n      $(`a[data-clone-type=\"${cloneType}\"]`).each(function() {\n        const $el = $(this);\n        const activeText = $el.find('.dropdown-menu-inner-title').text();\n        const $container = $el.closest('.project-clone-holder');\n        const $label = $container.find('.js-clone-dropdown-label');\n\n        $el.toggleClass('is-active');\n        $label.text(activeText);\n      });\n\n      if (mobileCloneField) {\n        mobileCloneField.dataset.clipboardText = url;\n      } else {\n        $projectCloneField.val(url);\n      }\n      $('.js-git-empty .js-clone').text(url);\n    });\n    // Ref switcher\n    Project.initRefSwitcher();\n    $('.project-refs-select').on('change', function() {\n      return $(this)\n        .parents('form')\n        .submit();\n    });\n    $('.hide-no-ssh-message').on('click', function(e) {\n      Cookies.set('hide_no_ssh_message', 'false');\n      $(this)\n        .parents('.no-ssh-key-message')\n        .remove();\n      return e.preventDefault();\n    });\n    $('.hide-no-password-message').on('click', function(e) {\n      Cookies.set('hide_no_password_message', 'false');\n      $(this)\n        .parents('.no-password-message')\n        .remove();\n      return e.preventDefault();\n    });\n    $('.hide-auto-devops-implicitly-enabled-banner').on('click', function(e) {\n      const projectId = $(this).data('project-id');\n      const cookieKey = `hide_auto_devops_implicitly_enabled_banner_${projectId}`;\n      Cookies.set(cookieKey, 'false');\n      $(this)\n        .parents('.auto-devops-implicitly-enabled-banner')\n        .remove();\n      return e.preventDefault();\n    });\n    Project.projectSelectDropdown();\n  }\n\n  static projectSelectDropdown() {\n    projectSelect();\n    $('.project-item-select').on('click', e => Project.changeProject($(e.currentTarget).val()));\n  }\n\n  static changeProject(url) {\n    return (window.location = url);\n  }\n\n  static initRefSwitcher() {\n    var refListItem = document.createElement('li');\n    var refLink = document.createElement('a');\n\n    refLink.href = '#';\n\n    return $('.js-project-refs-dropdown').each(function() {\n      var $dropdown, selected;\n      $dropdown = $(this);\n      selected = $dropdown.data('selected');\n      return $dropdown.glDropdown({\n        data(term, callback) {\n          axios\n            .get($dropdown.data('refsUrl'), {\n              params: {\n                ref: $dropdown.data('ref'),\n                search: term,\n              },\n            })\n            .then(({ data }) => callback(data))\n            .catch(() => flash(__('An error occurred while getting projects')));\n        },\n        selectable: true,\n        filterable: true,\n        filterRemote: true,\n        filterByText: true,\n        inputFieldName: $dropdown.data('inputFieldName'),\n        fieldName: $dropdown.data('fieldName'),\n        renderRow: function(ref) {\n          var li = refListItem.cloneNode(false);\n\n          if (ref.header != null) {\n            li.className = 'dropdown-header';\n            li.textContent = ref.header;\n          } else {\n            var link = refLink.cloneNode(false);\n\n            if (ref === selected) {\n              link.className = 'is-active';\n            }\n\n            link.textContent = ref;\n            link.dataset.ref = ref;\n\n            li.appendChild(link);\n          }\n\n          return li;\n        },\n        id: function(obj, $el) {\n          return $el.attr('data-ref');\n        },\n        toggleLabel: function(obj, $el) {\n          return $el.text().trim();\n        },\n        clicked: function(options) {\n          const { e } = options;\n          e.preventDefault();\n          if ($('input[name=\"ref\"]').length) {\n            var $form = $dropdown.closest('form');\n\n            var $visit = $dropdown.data('visit');\n            var shouldVisit = $visit ? true : $visit;\n            var action = $form.attr('action');\n            var divider = action.indexOf('?') === -1 ? '?' : '&';\n            if (shouldVisit) {\n              visitUrl(`${action}${divider}${$form.serialize()}`);\n            }\n          }\n        },\n      });\n    });\n  }\n}\n","import { n__ } from '../locale';\nimport { parseBoolean } from '../lib/utils/common_utils';\n\nexport default class SecretValues {\n  constructor({\n    container,\n    valueSelector = '.js-secret-value',\n    placeholderSelector = '.js-secret-value-placeholder',\n  }) {\n    this.container = container;\n    this.valueSelector = valueSelector;\n    this.placeholderSelector = placeholderSelector;\n  }\n\n  init() {\n    this.revealButton = this.container.querySelector('.js-secret-value-reveal-button');\n\n    if (this.revealButton) {\n      const isRevealed = parseBoolean(this.revealButton.dataset.secretRevealStatus);\n      this.updateDom(isRevealed);\n\n      this.revealButton.addEventListener('click', this.onRevealButtonClicked.bind(this));\n    }\n  }\n\n  onRevealButtonClicked() {\n    const previousIsRevealed = parseBoolean(this.revealButton.dataset.secretRevealStatus);\n    this.updateDom(!previousIsRevealed);\n  }\n\n  updateDom(isRevealed) {\n    const values = this.container.querySelectorAll(this.valueSelector);\n    values.forEach(value => {\n      value.classList.toggle('hide', !isRevealed);\n    });\n\n    const placeholders = this.container.querySelectorAll(this.placeholderSelector);\n    placeholders.forEach(placeholder => {\n      placeholder.classList.toggle('hide', isRevealed);\n    });\n\n    this.revealButton.textContent = isRevealed\n      ? n__('Hide value', 'Hide values', values.length)\n      : n__('Reveal value', 'Reveal values', values.length);\n    this.revealButton.dataset.secretRevealStatus = isRevealed;\n  }\n}\n","import $ from 'jquery';\nimport VariableList from './ci_variable_list';\n\n// Used for the variable list on scheduled pipeline edit page\nexport default function setupNativeFormVariableList({ container, formField = 'variables' }) {\n  const $container = $(container);\n\n  const variableList = new VariableList({\n    container: $container,\n    formField,\n  });\n  variableList.init();\n\n  // Clear out the names in the empty last row so it\n  // doesn't get submitted and throw validation errors\n  $container.closest('form').on('submit trigger-submit', () => {\n    const $lastRow = $container.find('.js-row').last();\n\n    const isTouched = variableList.checkIfRowTouched($lastRow);\n    if (!isTouched) {\n      $lastRow.find('input, textarea').attr('name', '');\n    }\n  });\n}\n","import $ from 'jquery';\nimport { parseBoolean } from '../lib/utils/common_utils';\nimport { s__ } from '../locale';\nimport setupToggleButtons from '../toggle_buttons';\nimport CreateItemDropdown from '../create_item_dropdown';\nimport SecretValues from '../behaviors/secret_values';\n\nconst ALL_ENVIRONMENTS_STRING = s__('CiVariable|All environments');\n\nfunction createEnvironmentItem(value) {\n  return {\n    title: value === '*' ? ALL_ENVIRONMENTS_STRING : value,\n    id: value,\n    text: value === '*' ? s__('CiVariable|* (All environments)') : value,\n  };\n}\n\nexport default class VariableList {\n  constructor({ container, formField }) {\n    this.$container = $(container);\n    this.formField = formField;\n    this.environmentDropdownMap = new WeakMap();\n\n    this.inputMap = {\n      id: {\n        selector: '.js-ci-variable-input-id',\n        default: '',\n      },\n      key: {\n        selector: '.js-ci-variable-input-key',\n        default: '',\n      },\n      secret_value: {\n        selector: '.js-ci-variable-input-value',\n        default: '',\n      },\n      protected: {\n        selector: '.js-ci-variable-input-protected',\n        // use `attr` instead of `data` as we don't want the value to be\n        // converted. we need the value as a string.\n        default: $('.js-ci-variable-input-protected').attr('data-default'),\n      },\n      environment_scope: {\n        // We can't use a `.js-` class here because\n        // gl_dropdown replaces the <input> and doesn't copy over the class\n        // See https://gitlab.com/gitlab-org/gitlab-ce/issues/42458\n        selector: `input[name=\"${this.formField}[variables_attributes][][environment_scope]\"]`,\n        default: '*',\n      },\n      _destroy: {\n        selector: '.js-ci-variable-input-destroy',\n        default: '',\n      },\n    };\n\n    this.secretValues = new SecretValues({\n      container: this.$container[0],\n      valueSelector: '.js-row:not(:last-child) .js-secret-value',\n      placeholderSelector: '.js-row:not(:last-child) .js-secret-value-placeholder',\n    });\n  }\n\n  init() {\n    this.bindEvents();\n    this.secretValues.init();\n  }\n\n  bindEvents() {\n    this.$container.find('.js-row').each((index, rowEl) => {\n      this.initRow(rowEl);\n    });\n\n    this.$container.on('click', '.js-row-remove-button', e => {\n      e.preventDefault();\n      this.removeRow($(e.currentTarget).closest('.js-row'));\n    });\n\n    const inputSelector = Object.keys(this.inputMap)\n      .map(name => this.inputMap[name].selector)\n      .join(',');\n\n    // Remove any empty rows except the last row\n    this.$container.on('blur', inputSelector, e => {\n      const $row = $(e.currentTarget).closest('.js-row');\n\n      if ($row.is(':not(:last-child)') && !this.checkIfRowTouched($row)) {\n        this.removeRow($row);\n      }\n    });\n\n    // Always make sure there is an empty last row\n    this.$container.on('input trigger-change', inputSelector, () => {\n      const $lastRow = this.$container.find('.js-row').last();\n\n      if (this.checkIfRowTouched($lastRow)) {\n        this.insertRow($lastRow);\n      }\n    });\n  }\n\n  initRow(rowEl) {\n    const $row = $(rowEl);\n\n    setupToggleButtons($row[0]);\n\n    // Reset the resizable textarea\n    $row.find(this.inputMap.secret_value.selector).css('height', '');\n\n    const $environmentSelect = $row.find('.js-variable-environment-toggle');\n    if ($environmentSelect.length) {\n      const createItemDropdown = new CreateItemDropdown({\n        $dropdown: $environmentSelect,\n        defaultToggleLabel: ALL_ENVIRONMENTS_STRING,\n        fieldName: `${this.formField}[variables_attributes][][environment_scope]`,\n        getData: (term, callback) => callback(this.getEnvironmentValues()),\n        createNewItemFromValue: createEnvironmentItem,\n        onSelect: () => {\n          // Refresh the other dropdowns in the variable list\n          // so they have the new value we just picked\n          this.refreshDropdownData();\n\n          $row.find(this.inputMap.environment_scope.selector).trigger('trigger-change');\n        },\n      });\n\n      // Clear out any data that might have been left-over from the row clone\n      createItemDropdown.clearDropdown();\n\n      this.environmentDropdownMap.set($row[0], createItemDropdown);\n    }\n  }\n\n  insertRow($row) {\n    const $rowClone = $row.clone();\n    $rowClone.removeAttr('data-is-persisted');\n\n    // Reset the inputs to their defaults\n    Object.keys(this.inputMap).forEach(name => {\n      const entry = this.inputMap[name];\n      $rowClone.find(entry.selector).val(entry.default);\n    });\n\n    // Close any dropdowns\n    $rowClone.find('.dropdown-menu.show').each((index, $dropdown) => {\n      $dropdown.classList.remove('show');\n    });\n\n    this.initRow($rowClone);\n\n    $row.after($rowClone);\n  }\n\n  removeRow(row) {\n    const $row = $(row);\n    const isPersisted = parseBoolean($row.attr('data-is-persisted'));\n\n    if (isPersisted) {\n      $row.hide();\n      $row\n        // eslint-disable-next-line no-underscore-dangle\n        .find(this.inputMap._destroy.selector)\n        .val(true);\n    } else {\n      $row.remove();\n    }\n\n    // Refresh the other dropdowns in the variable list\n    // so any value with the variable deleted is gone\n    this.refreshDropdownData();\n  }\n\n  checkIfRowTouched($row) {\n    return Object.keys(this.inputMap).some(name => {\n      const entry = this.inputMap[name];\n      const $el = $row.find(entry.selector);\n      return $el.length && $el.val() !== entry.default;\n    });\n  }\n\n  toggleEnableRow(isEnabled = true) {\n    this.$container.find(this.inputMap.key.selector).attr('disabled', !isEnabled);\n    this.$container.find('.js-row-remove-button').attr('disabled', !isEnabled);\n  }\n\n  hideValues() {\n    this.secretValues.updateDom(false);\n  }\n\n  getAllData() {\n    // Ignore the last empty row because we don't want to try persist\n    // a blank variable and run into validation problems.\n    const validRows = this.$container\n      .find('.js-row')\n      .toArray()\n      .slice(0, -1);\n\n    return validRows.map(rowEl => {\n      const resultant = {};\n      Object.keys(this.inputMap).forEach(name => {\n        const entry = this.inputMap[name];\n        const $input = $(rowEl).find(entry.selector);\n        if ($input.length) {\n          resultant[name] = $input.val();\n        }\n      });\n\n      return resultant;\n    });\n  }\n\n  getEnvironmentValues() {\n    const valueMap = this.$container\n      .find(this.inputMap.environment_scope.selector)\n      .toArray()\n      .reduce(\n        (prevValueMap, envInput) => ({\n          ...prevValueMap,\n          [envInput.value]: envInput.value,\n        }),\n        {},\n      );\n\n    return Object.keys(valueMap).map(createEnvironmentItem);\n  }\n\n  refreshDropdownData() {\n    this.$container.find('.js-row').each((index, rowEl) => {\n      const environmentDropdown = this.environmentDropdownMap.get(rowEl);\n      if (environmentDropdown) {\n        environmentDropdown.refreshData();\n      }\n    });\n  }\n}\n","import initGkeDropdowns from '~/projects/gke_cluster_dropdowns';\nimport PersistentUserCallout from '../../persistent_user_callout';\nimport Project from './project';\nimport ShortcutsNavigation from '../../behaviors/shortcuts/shortcuts_navigation';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const { page } = document.body.dataset;\n  const newClusterViews = [\n    'projects:clusters:new',\n    'projects:clusters:create_gcp',\n    'projects:clusters:create_user',\n  ];\n\n  if (newClusterViews.indexOf(page) > -1) {\n    const callout = document.querySelector('.gcp-signup-offer');\n    if (callout) new PersistentUserCallout(callout); // eslint-disable-line no-new\n\n    initGkeDropdowns();\n  }\n\n  new Project(); // eslint-disable-line no-new\n  new ShortcutsNavigation(); // eslint-disable-line no-new\n});\n"],"sourceRoot":""}