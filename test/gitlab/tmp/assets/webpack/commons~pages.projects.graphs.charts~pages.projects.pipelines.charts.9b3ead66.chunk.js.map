{"version":3,"sources":["webpack:///(webpack)/buildin/amd-options.js","webpack:///./behaviors/shortcuts/shortcuts_navigation.js","webpack:///./project_select_combo_button.js","webpack:///./project_select.js","webpack:///./pages/projects/project.js","webpack:////home/git/gitlab/node_modules/chart.js/Chart.js","webpack:///./pages/projects/index.js"],"names":["__webpack_amd_options__","module","exports","ShortcutsNavigation","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","Mousetrap","bind","findAndFollowLink","enabledHelp","push","Shortcuts","ProjectSelectComboButton","select","projectSelectInput","$","newItemBtn","resourceType","data","resourceLabel","formattedText","deriveTextVariants","groupId","bindEvents","initLocalStorage","siblings","on","e","openDropdown","getProjectFromLocalStorage","preventDefault","selectProject","AccessorUtilities","isLocalStorageAccessSafe","localStorageKey","localStorageItemType","join","setBtnTextFromLocalStorage","event","currentTarget","select2","selectedProjectData","JSON","parse","val","projectMeta","url","concat","name","setNewItemBtnAttributes","setProjectInLocalStorage","cachedProjectData","project","attr","text","defaultTextPrefix","presetTextSuffix","projectString","localStorage","getItem","stringify","setItem","split","slice","projectSelect","each","i","placeholder","simpleFilter","includeGroups","allProjects","orderBy","withIssuesEnabled","withMergeRequestsEnabled","withShared","undefined","includeProjectsInSubgroups","allowClear","minimumInputLength","query","finalCallback","projectsCallback","projects","results","callback","groupsCallback","groups","Api","term","groupProjects","with_issues_enabled","with_merge_requests_enabled","with_shared","include_subgroups","order_by","membership","id","web_url","name_with_namespace","initSelection","el","then","_ref","dropdownCssClass","__webpack_require__","d","__webpack_exports__","Project","$cloneOptions","$projectCloneField","$cloneBtnLabel","mobileCloneField","document","querySelector","selectedCloneOption","trim","length","addClass","$this","cloneType","removeClass","$el","activeText","find","$label","closest","toggleClass","dataset","clipboardText","initRefSwitcher","parents","submit","Cookies","set","remove","projectId","cookieKey","projectSelectDropdown","changeProject","window","location","refListItem","createElement","refLink","href","$dropdown","selected","glDropdown","axios","get","params","ref","search","catch","flash","__","selectable","filterable","filterRemote","filterByText","inputFieldName","fieldName","renderRow","li","cloneNode","header","className","textContent","link","appendChild","obj","toggleLabel","clicked","options","$form","$visit","shouldVisit","action","divider","indexOf","visitUrl","serialize","__WEBPACK_AMD_DEFINE_RESULT__","root","previous","Chart","context","canvas","ctx","computeDimension","element","dimension","defaultView","getComputedStyle","getPropertyValue","width","height","aspectRatio","helpers","retinaScale","defaults","global","animation","animationSteps","animationEasing","showScale","scaleOverride","scaleSteps","scaleStepWidth","scaleStartValue","scaleLineColor","scaleLineWidth","scaleShowLabels","scaleLabel","scaleIntegersOnly","scaleBeginAtZero","scaleFontFamily","scaleFontSize","scaleFontStyle","scaleFontColor","responsive","maintainAspectRatio","showTooltips","customTooltips","tooltipEvents","tooltipFillColor","tooltipFontFamily","tooltipFontSize","tooltipFontStyle","tooltipFontColor","tooltipTitleFontFamily","tooltipTitleFontSize","tooltipTitleFontStyle","tooltipTitleFontColor","tooltipYPadding","tooltipXPadding","tooltipCaretSize","tooltipCornerRadius","tooltipXOffset","tooltipTemplate","multiTooltipTemplate","multiTooltipKeyBackground","onAnimationProgress","onAnimationComplete","types","timeout","loopable","self","additionalArgs","Array","prototype","arguments","apply","item","clone","objClone","value","key","hasOwnProperty","extend","base","extensionObject","merge","master","args","unshift","arrayToSearch","inherits","where","collection","filterCallback","filtered","findNextWhere","startIndex","currentItem","findPreviousWhere","extensions","parent","ChartElement","constructor","Surrogate","__super__","noop","uid","warn","str","console","amd","isNumber","n","isNaN","parseFloat","isFinite","max","array","Math","min","getDecimalPlaces","cap","valueToCap","maxValue","minValue","num","toString","toRadians","radians","degrees","PI","aliasPixel","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","x","distanceFromYCenter","y","radialDistanceFromCenter","sqrt","angle","atan2","distance","pixelWidth","calculateOrderOfMagnitude","splineCurve","FirstPoint","MiddlePoint","AfterPoint","t","d01","pow","d12","fa","fb","inner","outer","floor","log","LN10","template","calculateScaleRange","valuesArray","drawingSize","textSize","startFromZero","integersOnly","maxSteps","skipFitting","valueRange","abs","rangeOrderOfMagnitude","graphMax","ceil","graphMin","graphRange","stepValue","numberOfSteps","round","steps","templateString","valuesObject","Function","fn","cache","test","replace","easingEffects","generateLabels","labelsArray","labelTemplateString","index","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","sin","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","s","p","a","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","cancelAnimFrame","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","oCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","addEvent","animationLoop","totalSteps","easingString","onProgress","onComplete","chartInstance","currentStep","easingFunction","animationFrame","stepDecimal","easeDecimal","getRelativePosition","evt","mouseX","mouseY","originalEvent","boundingRect","srcElement","getBoundingClientRect","touches","clientX","left","clientY","top","node","eventType","method","addEventListener","attachEvent","removeEvent","handler","removeEventListener","detachEvent","unbindEvents","arrayOfEvents","events","eventName","chart","getMaximumWidth","domNode","parentNode","clientWidth","getMaximumHeight","clientHeight","getMaximumSize","devicePixelRatio","style","scale","clear","clearRect","fontString","pixelSize","fontStyle","fontFamily","longestText","font","arrayOfStrings","longest","string","textWidth","measureText","drawRoundedRectangle","radius","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","instances","Type","resize","initialize","stop","newWidth","newHeight","reflow","render","draw","generateLegend","legendTemplate","destroy","removeProperty","removeAttribute","showTooltip","ChartElements","forceRedraw","activeElements","Elements","changed","datasets","dataArray","dataIndex","points","bars","segments","tooltipLabels","tooltipColors","medianPosition","dataCollection","xMax","yMax","xMin","yMin","xPositions","yPositions","hasValue","fill","_saved","fillColor","stroke","strokeColor","MultiTooltip","xPadding","yPadding","xOffset","textColor","fontSize","titleTextColor","titleFontFamily","titleFontStyle","titleFontSize","cornerRadius","labels","legendColors","legendColorBackground","title","label","custom","Element","tooltipPosition","Tooltip","caretHeight","toBase64Image","toDataURL","ChartType","chartName","baseDefaults","config","configuration","save","restore","props","update","newProps","transition","ease","Point","display","inRange","chartX","chartY","hitDetectionRange","hitDetectionRadius","arc","strokeStyle","lineWidth","strokeWidth","fillStyle","Arc","pointRelativePosition","betweenAngles","startAngle","endAngle","withinRadius","innerRadius","outerRadius","centreAngle","rangeFromCentre","animationPercent","lineJoin","showStroke","Rectangle","halfWidth","leftX","rightX","halfStroke","xAlign","yAlign","caretPadding","tooltipWidth","tooltipRectHeight","tooltipHeight","tooltipX","tooltipY","textAlign","textBaseline","fillText","titleFont","titleWidth","labelWidth","longestTextWidth","halfHeight","getLineHeight","baseLineHeight","afterTitleIndex","fillRect","Scale","fit","buildYLabels","yLabels","stepDecimalPlaces","toFixed","yLabelWidth","showLabels","addXLabel","xLabels","valuesCount","removeXLabel","shift","startPoint","endPoint","padding","cachedYLabelWidth","cachedHeight","calculateYRange","calculateXLabelRotation","firstRotated","firstWidth","lastWidth","xScalePaddingRight","xScalePaddingLeft","xLabelRotation","cosRotation","originalLabelWidth","xLabelWidth","xGridWidth","calculateX","drawingArea","calculateY","scalingFactor","valueWidth","valueOffset","offsetGridLines","yLabelGap","xStart","labelString","yLabelCenter","linePositionY","drawHorizontalLine","showHorizontalLines","gridLineWidth","gridLineColor","lineColor","xPos","linePos","isRotated","drawVerticalLine","showVerticalLines","translate","rotate","RadialScale","size","backdropPaddingY","calculateCenterOffset","lineArc","setScaleSize","getCircumference","pointPosition","halfTextWidth","furthestRightIndex","furthestRightAngle","furthestLeftIndex","furthestLeftAngle","xProtrusionLeft","xProtrusionRight","radiusReductionRight","radiusReductionLeft","largestPossibleRadius","pointLabelFontSize","furthestRight","furthestLeft","pointLabelFontStyle","pointLabelFontFamily","getPointPosition","getIndexAngle","setCenterPoint","leftMovement","rightMovement","maxRight","maxLeft","xCenter","yCenter","distanceFromCenter","thisAngle","yCenterOffset","yHeight","showLabelBackdrop","backdropColor","backdropPaddingX","fontColor","angleLineWidth","angleLineColor","outerPosition","pointLabelPosition","pointLabelFontColor","labelsCount","halfLabelsCount","quarterLabelsCount","upperHalf","exactQuarter","instance","noConflict","scaleShowGridLines","scaleGridLineColor","scaleGridLineWidth","scaleShowHorizontalLines","scaleShowVerticalLines","barShowStroke","barStrokeWidth","barValueSpacing","barDatasetSpacing","ScaleClass","calculateBarX","datasetCount","datasetIndex","barIndex","xWidth","calculateBaseWidth","xAbsolute","barWidth","calculateBarWidth","activeBars","type","getBarsAtEvent","eachBars","bar","activeBar","highlightFill","highlightStroke","BarClass","datasetObject","dataPoint","datasetLabel","buildScale","activeElement","barsArray","eventPosition","datasetIterator","scaleOptions","beginAtZero","currentHeight","values","updatedRanges","addData","removeData","newScaleProps","easingDecimal","defaultConfig","segmentShowStroke","segmentStrokeColor","segmentStrokeWidth","percentageInnerCutout","animateRotate","animateScale","SegmentArc","activeSegments","getSegmentsAtEvent","segment","activeSegment","highlightColor","calculateTotal","datapoint","segmentsArray","atIndex","silent","splice","color","highlight","circumference","calculateCircumference","total","indexToDelete","animDecimal","Doughnut","bezierCurve","bezierCurveTension","pointDot","pointDotRadius","pointDotStrokeWidth","pointHitDetectionRadius","datasetStroke","datasetStrokeWidth","datasetFill","PointClass","activePoints","getPointsAtEvent","eachPoints","point","activePoint","pointColor","pointStrokeColor","pointHighlightFill","pointHighlightStroke","pointsArray","previousPoint","pointsWithValues","tension","controlPoints","nextPoint","bezierCurveTo","scaleShowLabelBackdrop","scaleBackdropColor","scaleBackdropPaddingY","scaleBackdropPaddingX","scaleShowLine","updateScaleRange","datapoints","scaleSizes","angleShowLineOut","activePointsCollection","mousePosition","fromCenter","anglePerIndex","pointIndex","totalDataArray","r","_projects_gke_cluster_dropdowns__WEBPACK_IMPORTED_MODULE_0__","_persistent_user_callout__WEBPACK_IMPORTED_MODULE_1__","_project__WEBPACK_IMPORTED_MODULE_2__","_behaviors_shortcuts_shortcuts_navigation__WEBPACK_IMPORTED_MODULE_3__","page","body","callout","PersistentUserCallout","initGkeDropdowns"],"mappings":"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","file":"commons~pages.projects.graphs.charts~pages.projects.pipelines.charts.9b3ead66.chunk.js","sourcesContent":["/* globals __webpack_amd_options__ */\nmodule.exports = __webpack_amd_options__;\n","import Mousetrap from 'mousetrap';\nimport findAndFollowLink from '../../lib/utils/navigation_utility';\nimport Shortcuts from './shortcuts';\n\nexport default class ShortcutsNavigation extends Shortcuts {\n  constructor() {\n    super();\n\n    Mousetrap.bind('g p', () => findAndFollowLink('.shortcuts-project'));\n    Mousetrap.bind('g v', () => findAndFollowLink('.shortcuts-project-activity'));\n    Mousetrap.bind('g r', () => findAndFollowLink('.shortcuts-project-releases'));\n    Mousetrap.bind('g f', () => findAndFollowLink('.shortcuts-tree'));\n    Mousetrap.bind('g c', () => findAndFollowLink('.shortcuts-commits'));\n    Mousetrap.bind('g j', () => findAndFollowLink('.shortcuts-builds'));\n    Mousetrap.bind('g n', () => findAndFollowLink('.shortcuts-network'));\n    Mousetrap.bind('g d', () => findAndFollowLink('.shortcuts-repository-charts'));\n    Mousetrap.bind('g i', () => findAndFollowLink('.shortcuts-issues'));\n    Mousetrap.bind('g b', () => findAndFollowLink('.shortcuts-issue-boards'));\n    Mousetrap.bind('g m', () => findAndFollowLink('.shortcuts-merge_requests'));\n    Mousetrap.bind('g w', () => findAndFollowLink('.shortcuts-wiki'));\n    Mousetrap.bind('g s', () => findAndFollowLink('.shortcuts-snippets'));\n    Mousetrap.bind('g k', () => findAndFollowLink('.shortcuts-kubernetes'));\n    Mousetrap.bind('g e', () => findAndFollowLink('.shortcuts-environments'));\n    Mousetrap.bind('g l', () => findAndFollowLink('.shortcuts-metrics'));\n    Mousetrap.bind('i', () => findAndFollowLink('.shortcuts-new-issue'));\n\n    this.enabledHelp.push('.hidden-shortcut.project');\n  }\n}\n","import $ from 'jquery';\nimport AccessorUtilities from './lib/utils/accessor';\n\nexport default class ProjectSelectComboButton {\n  constructor(select) {\n    this.projectSelectInput = $(select);\n    this.newItemBtn = $('.new-project-item-link');\n    this.resourceType = this.newItemBtn.data('type');\n    this.resourceLabel = this.newItemBtn.data('label');\n    this.formattedText = this.deriveTextVariants();\n    this.groupId = this.projectSelectInput.data('groupId');\n    this.bindEvents();\n    this.initLocalStorage();\n  }\n\n  bindEvents() {\n    this.projectSelectInput\n      .siblings('.new-project-item-select-button')\n      .on('click', e => this.openDropdown(e));\n\n    this.newItemBtn.on('click', e => {\n      if (!this.getProjectFromLocalStorage()) {\n        e.preventDefault();\n        this.openDropdown(e);\n      }\n    });\n\n    this.projectSelectInput.on('change', () => this.selectProject());\n  }\n\n  initLocalStorage() {\n    const localStorageIsSafe = AccessorUtilities.isLocalStorageAccessSafe();\n\n    if (localStorageIsSafe) {\n      this.localStorageKey = [\n        'group',\n        this.groupId,\n        this.formattedText.localStorageItemType,\n        'recent-project',\n      ].join('-');\n      this.setBtnTextFromLocalStorage();\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  openDropdown(event) {\n    $(event.currentTarget)\n      .siblings('.project-item-select')\n      .select2('open');\n  }\n\n  selectProject() {\n    const selectedProjectData = JSON.parse(this.projectSelectInput.val());\n    const projectUrl = `${selectedProjectData.url}/${this.projectSelectInput.data('relativePath')}`;\n    const projectName = selectedProjectData.name;\n\n    const projectMeta = {\n      url: projectUrl,\n      name: projectName,\n    };\n\n    this.setNewItemBtnAttributes(projectMeta);\n    this.setProjectInLocalStorage(projectMeta);\n  }\n\n  setBtnTextFromLocalStorage() {\n    const cachedProjectData = this.getProjectFromLocalStorage();\n\n    this.setNewItemBtnAttributes(cachedProjectData);\n  }\n\n  setNewItemBtnAttributes(project) {\n    if (project) {\n      this.newItemBtn.attr('href', project.url);\n      this.newItemBtn.text(`${this.formattedText.defaultTextPrefix} in ${project.name}`);\n    } else {\n      this.newItemBtn.text(`Select project to create ${this.formattedText.presetTextSuffix}`);\n    }\n  }\n\n  getProjectFromLocalStorage() {\n    const projectString = localStorage.getItem(this.localStorageKey);\n\n    return JSON.parse(projectString);\n  }\n\n  setProjectInLocalStorage(projectMeta) {\n    const projectString = JSON.stringify(projectMeta);\n\n    localStorage.setItem(this.localStorageKey, projectString);\n  }\n\n  deriveTextVariants() {\n    const defaultTextPrefix = this.resourceLabel;\n\n    // the trailing slice call depluralizes each of these strings (e.g. new-issues -> new-issue)\n    const localStorageItemType = `new-${this.resourceType\n      .split('_')\n      .join('-')\n      .slice(0, -1)}`;\n    const presetTextSuffix = this.resourceType\n      .split('_')\n      .join(' ')\n      .slice(0, -1);\n\n    return {\n      localStorageItemType, // new-issue / new-merge-request\n      defaultTextPrefix, // New issue / New merge request\n      presetTextSuffix, // issue / merge request\n    };\n  }\n}\n","/* eslint-disable func-names, no-var, object-shorthand, one-var, no-else-return */\n\nimport $ from 'jquery';\nimport Api from './api';\nimport ProjectSelectComboButton from './project_select_combo_button';\n\nexport default function projectSelect() {\n  $('.ajax-project-select').each(function(i, select) {\n    var placeholder;\n    const simpleFilter = $(select).data('simpleFilter') || false;\n    this.groupId = $(select).data('groupId');\n    this.includeGroups = $(select).data('includeGroups');\n    this.allProjects = $(select).data('allProjects') || false;\n    this.orderBy = $(select).data('orderBy') || 'id';\n    this.withIssuesEnabled = $(select).data('withIssuesEnabled');\n    this.withMergeRequestsEnabled = $(select).data('withMergeRequestsEnabled');\n    this.withShared =\n      $(select).data('withShared') === undefined ? true : $(select).data('withShared');\n    this.includeProjectsInSubgroups = $(select).data('includeProjectsInSubgroups') || false;\n    this.allowClear = $(select).data('allowClear') || false;\n\n    placeholder = 'Search for project';\n    if (this.includeGroups) {\n      placeholder += ' or group';\n    }\n\n    $(select).select2({\n      placeholder: placeholder,\n      minimumInputLength: 0,\n      query: (function(_this) {\n        return function(query) {\n          var finalCallback, projectsCallback;\n          finalCallback = function(projects) {\n            var data;\n            data = {\n              results: projects,\n            };\n            return query.callback(data);\n          };\n          if (_this.includeGroups) {\n            projectsCallback = function(projects) {\n              var groupsCallback;\n              groupsCallback = function(groups) {\n                var data;\n                data = groups.concat(projects);\n                return finalCallback(data);\n              };\n              return Api.groups(query.term, {}, groupsCallback);\n            };\n          } else {\n            projectsCallback = finalCallback;\n          }\n          if (_this.groupId) {\n            return Api.groupProjects(\n              _this.groupId,\n              query.term,\n              {\n                with_issues_enabled: _this.withIssuesEnabled,\n                with_merge_requests_enabled: _this.withMergeRequestsEnabled,\n                with_shared: _this.withShared,\n                include_subgroups: _this.includeProjectsInSubgroups,\n              },\n              projectsCallback,\n            );\n          } else {\n            return Api.projects(\n              query.term,\n              {\n                order_by: _this.orderBy,\n                with_issues_enabled: _this.withIssuesEnabled,\n                with_merge_requests_enabled: _this.withMergeRequestsEnabled,\n                membership: !_this.allProjects,\n              },\n              projectsCallback,\n            );\n          }\n        };\n      })(this),\n      id: function(project) {\n        if (simpleFilter) return project.id;\n        return JSON.stringify({\n          name: project.name,\n          url: project.web_url,\n        });\n      },\n      text: function(project) {\n        return project.name_with_namespace || project.name;\n      },\n\n      initSelection: function(el, callback) {\n        return Api.project(el.val()).then(({ data }) => callback(data));\n      },\n\n      allowClear: this.allowClear,\n\n      dropdownCssClass: 'ajax-project-dropdown',\n    });\n    if (simpleFilter) return select;\n    return new ProjectSelectComboButton(select);\n  });\n}\n","/* eslint-disable func-names, no-var, no-return-assign, one-var, object-shorthand, vars-on-top */\n\nimport $ from 'jquery';\nimport Cookies from 'js-cookie';\nimport { __ } from '~/locale';\nimport { visitUrl } from '~/lib/utils/url_utility';\nimport axios from '~/lib/utils/axios_utils';\nimport flash from '~/flash';\nimport projectSelect from '../../project_select';\n\nexport default class Project {\n  constructor() {\n    const $cloneOptions = $('ul.clone-options-dropdown');\n    const $projectCloneField = $('#project_clone');\n    const $cloneBtnLabel = $('.js-git-clone-holder .js-clone-dropdown-label');\n    const mobileCloneField = document.querySelector(\n      '.js-mobile-git-clone .js-clone-dropdown-label',\n    );\n\n    const selectedCloneOption = $cloneBtnLabel.text().trim();\n    if (selectedCloneOption.length > 0) {\n      $(`a:contains('${selectedCloneOption}')`, $cloneOptions).addClass('is-active');\n    }\n\n    $('a', $cloneOptions).on('click', e => {\n      e.preventDefault();\n      const $this = $(e.currentTarget);\n      const url = $this.attr('href');\n      const cloneType = $this.data('cloneType');\n\n      $('.is-active', $cloneOptions).removeClass('is-active');\n      $(`a[data-clone-type=\"${cloneType}\"]`).each(function() {\n        const $el = $(this);\n        const activeText = $el.find('.dropdown-menu-inner-title').text();\n        const $container = $el.closest('.project-clone-holder');\n        const $label = $container.find('.js-clone-dropdown-label');\n\n        $el.toggleClass('is-active');\n        $label.text(activeText);\n      });\n\n      if (mobileCloneField) {\n        mobileCloneField.dataset.clipboardText = url;\n      } else {\n        $projectCloneField.val(url);\n      }\n      $('.js-git-empty .js-clone').text(url);\n    });\n    // Ref switcher\n    Project.initRefSwitcher();\n    $('.project-refs-select').on('change', function() {\n      return $(this)\n        .parents('form')\n        .submit();\n    });\n    $('.hide-no-ssh-message').on('click', function(e) {\n      Cookies.set('hide_no_ssh_message', 'false');\n      $(this)\n        .parents('.no-ssh-key-message')\n        .remove();\n      return e.preventDefault();\n    });\n    $('.hide-no-password-message').on('click', function(e) {\n      Cookies.set('hide_no_password_message', 'false');\n      $(this)\n        .parents('.no-password-message')\n        .remove();\n      return e.preventDefault();\n    });\n    $('.hide-auto-devops-implicitly-enabled-banner').on('click', function(e) {\n      const projectId = $(this).data('project-id');\n      const cookieKey = `hide_auto_devops_implicitly_enabled_banner_${projectId}`;\n      Cookies.set(cookieKey, 'false');\n      $(this)\n        .parents('.auto-devops-implicitly-enabled-banner')\n        .remove();\n      return e.preventDefault();\n    });\n    Project.projectSelectDropdown();\n  }\n\n  static projectSelectDropdown() {\n    projectSelect();\n    $('.project-item-select').on('click', e => Project.changeProject($(e.currentTarget).val()));\n  }\n\n  static changeProject(url) {\n    return (window.location = url);\n  }\n\n  static initRefSwitcher() {\n    var refListItem = document.createElement('li');\n    var refLink = document.createElement('a');\n\n    refLink.href = '#';\n\n    return $('.js-project-refs-dropdown').each(function() {\n      var $dropdown, selected;\n      $dropdown = $(this);\n      selected = $dropdown.data('selected');\n      return $dropdown.glDropdown({\n        data(term, callback) {\n          axios\n            .get($dropdown.data('refsUrl'), {\n              params: {\n                ref: $dropdown.data('ref'),\n                search: term,\n              },\n            })\n            .then(({ data }) => callback(data))\n            .catch(() => flash(__('An error occurred while getting projects')));\n        },\n        selectable: true,\n        filterable: true,\n        filterRemote: true,\n        filterByText: true,\n        inputFieldName: $dropdown.data('inputFieldName'),\n        fieldName: $dropdown.data('fieldName'),\n        renderRow: function(ref) {\n          var li = refListItem.cloneNode(false);\n\n          if (ref.header != null) {\n            li.className = 'dropdown-header';\n            li.textContent = ref.header;\n          } else {\n            var link = refLink.cloneNode(false);\n\n            if (ref === selected) {\n              link.className = 'is-active';\n            }\n\n            link.textContent = ref;\n            link.dataset.ref = ref;\n\n            li.appendChild(link);\n          }\n\n          return li;\n        },\n        id: function(obj, $el) {\n          return $el.attr('data-ref');\n        },\n        toggleLabel: function(obj, $el) {\n          return $el.text().trim();\n        },\n        clicked: function(options) {\n          const { e } = options;\n          e.preventDefault();\n          if ($('input[name=\"ref\"]').length) {\n            var $form = $dropdown.closest('form');\n\n            var $visit = $dropdown.data('visit');\n            var shouldVisit = $visit ? true : $visit;\n            var action = $form.attr('action');\n            var divider = action.indexOf('?') === -1 ? '?' : '&';\n            if (shouldVisit) {\n              visitUrl(`${action}${divider}${$form.serialize()}`);\n            }\n          }\n        },\n      });\n    });\n  }\n}\n","/*!\n * Chart.js\n * http://chartjs.org/\n * Version: 1.0.2\n *\n * Copyright 2015 Nick Downie\n * Released under the MIT license\n * https://github.com/nnnick/Chart.js/blob/master/LICENSE.md\n */\n\n\n(function(){\n\n\t\"use strict\";\n\n\t//Declare root variable - window in the browser, global on the server\n\tvar root = this,\n\t\tprevious = root.Chart;\n\n\t//Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(context){\n\t\tvar chart = this;\n\t\tthis.canvas = context.canvas;\n\n\t\tthis.ctx = context;\n\n\t\t//Variables global to the chart\n\t\tvar computeDimension = function(element,dimension)\n\t\t{\n\t\t\tif (element['offset'+dimension])\n\t\t\t{\n\t\t\t\treturn element['offset'+dimension];\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\treturn document.defaultView.getComputedStyle(element).getPropertyValue(dimension);\n\t\t\t}\n\t\t}\n\n\t\tvar width = this.width = computeDimension(context.canvas,'Width');\n\t\tvar height = this.height = computeDimension(context.canvas,'Height');\n\n\t\t// Firefox requires this to work correctly\n\t\tcontext.canvas.width  = width;\n\t\tcontext.canvas.height = height;\n\n\t\tvar width = this.width = context.canvas.width;\n\t\tvar height = this.height = context.canvas.height;\n\t\tthis.aspectRatio = this.width / this.height;\n\t\t//High pixel density displays - multiply the size of the canvas height/width by the device pixel ratio, then scale.\n\t\thelpers.retinaScale(this);\n\n\t\treturn this;\n\t};\n\t//Globally expose the defaults to allow for user updating/changing\n\tChart.defaults = {\n\t\tglobal: {\n\t\t\t// Boolean - Whether to animate the chart\n\t\t\tanimation: true,\n\n\t\t\t// Number - Number of animation steps\n\t\t\tanimationSteps: 60,\n\n\t\t\t// String - Animation easing effect\n\t\t\tanimationEasing: \"easeOutQuart\",\n\n\t\t\t// Boolean - If we should show the scale at all\n\t\t\tshowScale: true,\n\n\t\t\t// Boolean - If we want to override with a hard coded scale\n\t\t\tscaleOverride: false,\n\n\t\t\t// ** Required if scaleOverride is true **\n\t\t\t// Number - The number of steps in a hard coded scale\n\t\t\tscaleSteps: null,\n\t\t\t// Number - The value jump in the hard coded scale\n\t\t\tscaleStepWidth: null,\n\t\t\t// Number - The scale starting value\n\t\t\tscaleStartValue: null,\n\n\t\t\t// String - Colour of the scale line\n\t\t\tscaleLineColor: \"rgba(0,0,0,.1)\",\n\n\t\t\t// Number - Pixel width of the scale line\n\t\t\tscaleLineWidth: 1,\n\n\t\t\t// Boolean - Whether to show labels on the scale\n\t\t\tscaleShowLabels: true,\n\n\t\t\t// Interpolated JS string - can access value\n\t\t\tscaleLabel: \"<%=value%>\",\n\n\t\t\t// Boolean - Whether the scale should stick to integers, and not show any floats even if drawing space is there\n\t\t\tscaleIntegersOnly: true,\n\n\t\t\t// Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value\n\t\t\tscaleBeginAtZero: false,\n\n\t\t\t// String - Scale label font declaration for the scale label\n\t\t\tscaleFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n\t\t\t// Number - Scale label font size in pixels\n\t\t\tscaleFontSize: 12,\n\n\t\t\t// String - Scale label font weight style\n\t\t\tscaleFontStyle: \"normal\",\n\n\t\t\t// String - Scale label font colour\n\t\t\tscaleFontColor: \"#666\",\n\n\t\t\t// Boolean - whether or not the chart should be responsive and resize when the browser does.\n\t\t\tresponsive: false,\n\n\t\t\t// Boolean - whether to maintain the starting aspect ratio or not when responsive, if set to false, will take up entire container\n\t\t\tmaintainAspectRatio: true,\n\n\t\t\t// Boolean - Determines whether to draw tooltips on the canvas or not - attaches events to touchmove & mousemove\n\t\t\tshowTooltips: true,\n\n\t\t\t// Boolean - Determines whether to draw built-in tooltip or call custom tooltip function\n\t\t\tcustomTooltips: false,\n\n\t\t\t// Array - Array of string names to attach tooltip events\n\t\t\ttooltipEvents: [\"mousemove\", \"touchstart\", \"touchmove\", \"mouseout\"],\n\n\t\t\t// String - Tooltip background colour\n\t\t\ttooltipFillColor: \"rgba(0,0,0,0.8)\",\n\n\t\t\t// String - Tooltip label font declaration for the scale label\n\t\t\ttooltipFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n\t\t\t// Number - Tooltip label font size in pixels\n\t\t\ttooltipFontSize: 14,\n\n\t\t\t// String - Tooltip font weight style\n\t\t\ttooltipFontStyle: \"normal\",\n\n\t\t\t// String - Tooltip label font colour\n\t\t\ttooltipFontColor: \"#fff\",\n\n\t\t\t// String - Tooltip title font declaration for the scale label\n\t\t\ttooltipTitleFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\n\t\t\t// Number - Tooltip title font size in pixels\n\t\t\ttooltipTitleFontSize: 14,\n\n\t\t\t// String - Tooltip title font weight style\n\t\t\ttooltipTitleFontStyle: \"bold\",\n\n\t\t\t// String - Tooltip title font colour\n\t\t\ttooltipTitleFontColor: \"#fff\",\n\n\t\t\t// Number - pixel width of padding around tooltip text\n\t\t\ttooltipYPadding: 6,\n\n\t\t\t// Number - pixel width of padding around tooltip text\n\t\t\ttooltipXPadding: 6,\n\n\t\t\t// Number - Size of the caret on the tooltip\n\t\t\ttooltipCaretSize: 8,\n\n\t\t\t// Number - Pixel radius of the tooltip border\n\t\t\ttooltipCornerRadius: 6,\n\n\t\t\t// Number - Pixel offset from point x to tooltip edge\n\t\t\ttooltipXOffset: 10,\n\n\t\t\t// String - Template string for single tooltips\n\t\t\ttooltipTemplate: \"<%if (label){%><%=label%>: <%}%><%= value %>\",\n\n\t\t\t// String - Template string for single tooltips\n\t\t\tmultiTooltipTemplate: \"<%= value %>\",\n\n\t\t\t// String - Colour behind the legend colour block\n\t\t\tmultiTooltipKeyBackground: '#fff',\n\n\t\t\t// Function - Will fire on animation progression.\n\t\t\tonAnimationProgress: function(){},\n\n\t\t\t// Function - Will fire on animation completion.\n\t\t\tonAnimationComplete: function(){}\n\n\t\t}\n\t};\n\n\t//Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t//Global Chart helpers object for utility methods and classes\n\tvar helpers = Chart.helpers = {};\n\n\t\t//-- Basic js utility methods\n\tvar each = helpers.each = function(loopable,callback,self){\n\t\t\tvar additionalArgs = Array.prototype.slice.call(arguments, 3);\n\t\t\t// Check to see if null or undefined firstly.\n\t\t\tif (loopable){\n\t\t\t\tif (loopable.length === +loopable.length){\n\t\t\t\t\tvar i;\n\t\t\t\t\tfor (i=0; i<loopable.length; i++){\n\t\t\t\t\t\tcallback.apply(self,[loopable[i], i].concat(additionalArgs));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tfor (var item in loopable){\n\t\t\t\t\t\tcallback.apply(self,[loopable[item],item].concat(additionalArgs));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tclone = helpers.clone = function(obj){\n\t\t\tvar objClone = {};\n\t\t\teach(obj,function(value,key){\n\t\t\t\tif (obj.hasOwnProperty(key)) objClone[key] = value;\n\t\t\t});\n\t\t\treturn objClone;\n\t\t},\n\t\textend = helpers.extend = function(base){\n\t\t\teach(Array.prototype.slice.call(arguments,1), function(extensionObject) {\n\t\t\t\teach(extensionObject,function(value,key){\n\t\t\t\t\tif (extensionObject.hasOwnProperty(key)) base[key] = value;\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn base;\n\t\t},\n\t\tmerge = helpers.merge = function(base,master){\n\t\t\t//Merge properties in left object over to a shallow clone of object right.\n\t\t\tvar args = Array.prototype.slice.call(arguments,0);\n\t\t\targs.unshift({});\n\t\t\treturn extend.apply(null, args);\n\t\t},\n\t\tindexOf = helpers.indexOf = function(arrayToSearch, item){\n\t\t\tif (Array.prototype.indexOf) {\n\t\t\t\treturn arrayToSearch.indexOf(item);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tfor (var i = 0; i < arrayToSearch.length; i++) {\n\t\t\t\t\tif (arrayToSearch[i] === item) return i;\n\t\t\t\t}\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t},\n\t\twhere = helpers.where = function(collection, filterCallback){\n\t\t\tvar filtered = [];\n\n\t\t\thelpers.each(collection, function(item){\n\t\t\t\tif (filterCallback(item)){\n\t\t\t\t\tfiltered.push(item);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn filtered;\n\t\t},\n\t\tfindNextWhere = helpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex){\n\t\t\t// Default to start of the array\n\t\t\tif (!startIndex){\n\t\t\t\tstartIndex = -1;\n\t\t\t}\n\t\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\t\tif (filterCallback(currentItem)){\n\t\t\t\t\treturn currentItem;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tfindPreviousWhere = helpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex){\n\t\t\t// Default to end of the array\n\t\t\tif (!startIndex){\n\t\t\t\tstartIndex = arrayToSearch.length;\n\t\t\t}\n\t\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\t\tif (filterCallback(currentItem)){\n\t\t\t\t\treturn currentItem;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tinherits = helpers.inherits = function(extensions){\n\t\t\t//Basic javascript inheritance based on the model created in Backbone.js\n\t\t\tvar parent = this;\n\t\t\tvar ChartElement = (extensions && extensions.hasOwnProperty(\"constructor\")) ? extensions.constructor : function(){ return parent.apply(this, arguments); };\n\n\t\t\tvar Surrogate = function(){ this.constructor = ChartElement;};\n\t\t\tSurrogate.prototype = parent.prototype;\n\t\t\tChartElement.prototype = new Surrogate();\n\n\t\t\tChartElement.extend = inherits;\n\n\t\t\tif (extensions) extend(ChartElement.prototype, extensions);\n\n\t\t\tChartElement.__super__ = parent.prototype;\n\n\t\t\treturn ChartElement;\n\t\t},\n\t\tnoop = helpers.noop = function(){},\n\t\tuid = helpers.uid = (function(){\n\t\t\tvar id=0;\n\t\t\treturn function(){\n\t\t\t\treturn \"chart-\" + id++;\n\t\t\t};\n\t\t})(),\n\t\twarn = helpers.warn = function(str){\n\t\t\t//Method for warning of errors\n\t\t\tif (window.console && typeof window.console.warn == \"function\") console.warn(str);\n\t\t},\n\t\tamd = helpers.amd = (typeof define == 'function' && define.amd),\n\t\t//-- Math methods\n\t\tisNumber = helpers.isNumber = function(n){\n\t\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t\t},\n\t\tmax = helpers.max = function(array){\n\t\t\treturn Math.max.apply( Math, array );\n\t\t},\n\t\tmin = helpers.min = function(array){\n\t\t\treturn Math.min.apply( Math, array );\n\t\t},\n\t\tcap = helpers.cap = function(valueToCap,maxValue,minValue){\n\t\t\tif(isNumber(maxValue)) {\n\t\t\t\tif( valueToCap > maxValue ) {\n\t\t\t\t\treturn maxValue;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if(isNumber(minValue)){\n\t\t\t\tif ( valueToCap < minValue ){\n\t\t\t\t\treturn minValue;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn valueToCap;\n\t\t},\n\t\tgetDecimalPlaces = helpers.getDecimalPlaces = function(num){\n\t\t\tif (num%1!==0 && isNumber(num)){\n\t\t\t\treturn num.toString().split(\".\")[1].length;\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t},\n\t\ttoRadians = helpers.radians = function(degrees){\n\t\t\treturn degrees * (Math.PI/180);\n\t\t},\n\t\t// Gets the angle from vertical upright to the point about a centre.\n\t\tgetAngleFromPoint = helpers.getAngleFromPoint = function(centrePoint, anglePoint){\n\t\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x,\n\t\t\t\tdistanceFromYCenter = anglePoint.y - centrePoint.y,\n\t\t\t\tradialDistanceFromCenter = Math.sqrt( distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\n\t\t\tvar angle = Math.PI * 2 + Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\t\t//If the segment is in the top left quadrant, we need to add another rotation to the angle\n\t\t\tif (distanceFromXCenter < 0 && distanceFromYCenter < 0){\n\t\t\t\tangle += Math.PI*2;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tangle: angle,\n\t\t\t\tdistance: radialDistanceFromCenter\n\t\t\t};\n\t\t},\n\t\taliasPixel = helpers.aliasPixel = function(pixelWidth){\n\t\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t\t},\n\t\tsplineCurve = helpers.splineCurve = function(FirstPoint,MiddlePoint,AfterPoint,t){\n\t\t\t//Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t\t//http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\t\t\tvar d01=Math.sqrt(Math.pow(MiddlePoint.x-FirstPoint.x,2)+Math.pow(MiddlePoint.y-FirstPoint.y,2)),\n\t\t\t\td12=Math.sqrt(Math.pow(AfterPoint.x-MiddlePoint.x,2)+Math.pow(AfterPoint.y-MiddlePoint.y,2)),\n\t\t\t\tfa=t*d01/(d01+d12),// scaling factor for triangle Ta\n\t\t\t\tfb=t*d12/(d01+d12);\n\t\t\treturn {\n\t\t\t\tinner : {\n\t\t\t\t\tx : MiddlePoint.x-fa*(AfterPoint.x-FirstPoint.x),\n\t\t\t\t\ty : MiddlePoint.y-fa*(AfterPoint.y-FirstPoint.y)\n\t\t\t\t},\n\t\t\t\touter : {\n\t\t\t\t\tx: MiddlePoint.x+fb*(AfterPoint.x-FirstPoint.x),\n\t\t\t\t\ty : MiddlePoint.y+fb*(AfterPoint.y-FirstPoint.y)\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\tcalculateOrderOfMagnitude = helpers.calculateOrderOfMagnitude = function(val){\n\t\t\treturn Math.floor(Math.log(val) / Math.LN10);\n\t\t},\n\t\tcalculateScaleRange = helpers.calculateScaleRange = function(valuesArray, drawingSize, textSize, startFromZero, integersOnly){\n\n\t\t\t//Set a minimum step of two - a point at the top of the graph, and a point at the base\n\t\t\tvar minSteps = 2,\n\t\t\t\tmaxSteps = Math.floor(drawingSize/(textSize * 1.5)),\n\t\t\t\tskipFitting = (minSteps >= maxSteps);\n\n\t\t\tvar maxValue = max(valuesArray),\n\t\t\t\tminValue = min(valuesArray);\n\n\t\t\t// We need some degree of seperation here to calculate the scales if all the values are the same\n\t\t\t// Adding/minusing 0.5 will give us a range of 1.\n\t\t\tif (maxValue === minValue){\n\t\t\t\tmaxValue += 0.5;\n\t\t\t\t// So we don't end up with a graph with a negative start value if we've said always start from zero\n\t\t\t\tif (minValue >= 0.5 && !startFromZero){\n\t\t\t\t\tminValue -= 0.5;\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t// Make up a whole number above the values\n\t\t\t\t\tmaxValue += 0.5;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar\tvalueRange = Math.abs(maxValue - minValue),\n\t\t\t\trangeOrderOfMagnitude = calculateOrderOfMagnitude(valueRange),\n\t\t\t\tgraphMax = Math.ceil(maxValue / (1 * Math.pow(10, rangeOrderOfMagnitude))) * Math.pow(10, rangeOrderOfMagnitude),\n\t\t\t\tgraphMin = (startFromZero) ? 0 : Math.floor(minValue / (1 * Math.pow(10, rangeOrderOfMagnitude))) * Math.pow(10, rangeOrderOfMagnitude),\n\t\t\t\tgraphRange = graphMax - graphMin,\n\t\t\t\tstepValue = Math.pow(10, rangeOrderOfMagnitude),\n\t\t\t\tnumberOfSteps = Math.round(graphRange / stepValue);\n\n\t\t\t//If we have more space on the graph we'll use it to give more definition to the data\n\t\t\twhile((numberOfSteps > maxSteps || (numberOfSteps * 2) < maxSteps) && !skipFitting) {\n\t\t\t\tif(numberOfSteps > maxSteps){\n\t\t\t\t\tstepValue *=2;\n\t\t\t\t\tnumberOfSteps = Math.round(graphRange/stepValue);\n\t\t\t\t\t// Don't ever deal with a decimal number of steps - cancel fitting and just use the minimum number of steps.\n\t\t\t\t\tif (numberOfSteps % 1 !== 0){\n\t\t\t\t\t\tskipFitting = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//We can fit in double the amount of scale points on the scale\n\t\t\t\telse{\n\t\t\t\t\t//If user has declared ints only, and the step value isn't a decimal\n\t\t\t\t\tif (integersOnly && rangeOrderOfMagnitude >= 0){\n\t\t\t\t\t\t//If the user has said integers only, we need to check that making the scale more granular wouldn't make it a float\n\t\t\t\t\t\tif(stepValue/2 % 1 === 0){\n\t\t\t\t\t\t\tstepValue /=2;\n\t\t\t\t\t\t\tnumberOfSteps = Math.round(graphRange/stepValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//If it would make it a float break out of the loop\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//If the scale doesn't have to be an int, make the scale more granular anyway.\n\t\t\t\t\telse{\n\t\t\t\t\t\tstepValue /=2;\n\t\t\t\t\t\tnumberOfSteps = Math.round(graphRange/stepValue);\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (skipFitting){\n\t\t\t\tnumberOfSteps = minSteps;\n\t\t\t\tstepValue = graphRange / numberOfSteps;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tsteps : numberOfSteps,\n\t\t\t\tstepValue : stepValue,\n\t\t\t\tmin : graphMin,\n\t\t\t\tmax\t: graphMin + (numberOfSteps * stepValue)\n\t\t\t};\n\n\t\t},\n\t\t/* jshint ignore:start */\n\t\t// Blows up jshint errors based on the new Function constructor\n\t\t//Templating methods\n\t\t//Javascript micro templating by John Resig - source at http://ejohn.org/blog/javascript-micro-templating/\n\t\ttemplate = helpers.template = function(templateString, valuesObject){\n\n\t\t\t// If templateString is function rather than string-template - call the function for valuesObject\n\n\t\t\tif(templateString instanceof Function){\n\t\t\t \treturn templateString(valuesObject);\n\t\t \t}\n\n\t\t\tvar cache = {};\n\t\t\tfunction tmpl(str, data){\n\t\t\t\t// Figure out if we're getting a template, or if we need to\n\t\t\t\t// load the template - and be sure to cache the result.\n\t\t\t\tvar fn = !/\\W/.test(str) ?\n\t\t\t\tcache[str] = cache[str] :\n\n\t\t\t\t// Generate a reusable function that will serve as a template\n\t\t\t\t// generator (and which will be cached).\n\t\t\t\tnew Function(\"obj\",\n\t\t\t\t\t\"var p=[],print=function(){p.push.apply(p,arguments);};\" +\n\n\t\t\t\t\t// Introduce the data as local variables using with(){}\n\t\t\t\t\t\"with(obj){p.push('\" +\n\n\t\t\t\t\t// Convert the template into pure JavaScript\n\t\t\t\t\tstr\n\t\t\t\t\t\t.replace(/[\\r\\t\\n]/g, \" \")\n\t\t\t\t\t\t.split(\"<%\").join(\"\\t\")\n\t\t\t\t\t\t.replace(/((^|%>)[^\\t]*)'/g, \"$1\\r\")\n\t\t\t\t\t\t.replace(/\\t=(.*?)%>/g, \"',$1,'\")\n\t\t\t\t\t\t.split(\"\\t\").join(\"');\")\n\t\t\t\t\t\t.split(\"%>\").join(\"p.push('\")\n\t\t\t\t\t\t.split(\"\\r\").join(\"\\\\'\") +\n\t\t\t\t\t\"');}return p.join('');\"\n\t\t\t\t);\n\n\t\t\t\t// Provide some basic currying to the user\n\t\t\t\treturn data ? fn( data ) : fn;\n\t\t\t}\n\t\t\treturn tmpl(templateString,valuesObject);\n\t\t},\n\t\t/* jshint ignore:end */\n\t\tgenerateLabels = helpers.generateLabels = function(templateString,numberOfSteps,graphMin,stepValue){\n\t\t\tvar labelsArray = new Array(numberOfSteps);\n\t\t\tif (labelTemplateString){\n\t\t\t\teach(labelsArray,function(val,index){\n\t\t\t\t\tlabelsArray[index] = template(templateString,{value: (graphMin + (stepValue*(index+1)))});\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn labelsArray;\n\t\t},\n\t\t//--Animation methods\n\t\t//Easing functions adapted from Robert Penner's easing equations\n\t\t//http://www.robertpenner.com/easing/\n\t\teasingEffects = helpers.easingEffects = {\n\t\t\tlinear: function (t) {\n\t\t\t\treturn t;\n\t\t\t},\n\t\t\teaseInQuad: function (t) {\n\t\t\t\treturn t * t;\n\t\t\t},\n\t\t\teaseOutQuad: function (t) {\n\t\t\t\treturn -1 * t * (t - 2);\n\t\t\t},\n\t\t\teaseInOutQuad: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1) return 1 / 2 * t * t;\n\t\t\t\treturn -1 / 2 * ((--t) * (t - 2) - 1);\n\t\t\t},\n\t\t\teaseInCubic: function (t) {\n\t\t\t\treturn t * t * t;\n\t\t\t},\n\t\t\teaseOutCubic: function (t) {\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * t + 1);\n\t\t\t},\n\t\t\teaseInOutCubic: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1) return 1 / 2 * t * t * t;\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * t + 2);\n\t\t\t},\n\t\t\teaseInQuart: function (t) {\n\t\t\t\treturn t * t * t * t;\n\t\t\t},\n\t\t\teaseOutQuart: function (t) {\n\t\t\t\treturn -1 * ((t = t / 1 - 1) * t * t * t - 1);\n\t\t\t},\n\t\t\teaseInOutQuart: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1) return 1 / 2 * t * t * t * t;\n\t\t\t\treturn -1 / 2 * ((t -= 2) * t * t * t - 2);\n\t\t\t},\n\t\t\teaseInQuint: function (t) {\n\t\t\t\treturn 1 * (t /= 1) * t * t * t * t;\n\t\t\t},\n\t\t\teaseOutQuint: function (t) {\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * t * t * t + 1);\n\t\t\t},\n\t\t\teaseInOutQuint: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1) return 1 / 2 * t * t * t * t * t;\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * t * t * t + 2);\n\t\t\t},\n\t\t\teaseInSine: function (t) {\n\t\t\t\treturn -1 * Math.cos(t / 1 * (Math.PI / 2)) + 1;\n\t\t\t},\n\t\t\teaseOutSine: function (t) {\n\t\t\t\treturn 1 * Math.sin(t / 1 * (Math.PI / 2));\n\t\t\t},\n\t\t\teaseInOutSine: function (t) {\n\t\t\t\treturn -1 / 2 * (Math.cos(Math.PI * t / 1) - 1);\n\t\t\t},\n\t\t\teaseInExpo: function (t) {\n\t\t\t\treturn (t === 0) ? 1 : 1 * Math.pow(2, 10 * (t / 1 - 1));\n\t\t\t},\n\t\t\teaseOutExpo: function (t) {\n\t\t\t\treturn (t === 1) ? 1 : 1 * (-Math.pow(2, -10 * t / 1) + 1);\n\t\t\t},\n\t\t\teaseInOutExpo: function (t) {\n\t\t\t\tif (t === 0) return 0;\n\t\t\t\tif (t === 1) return 1;\n\t\t\t\tif ((t /= 1 / 2) < 1) return 1 / 2 * Math.pow(2, 10 * (t - 1));\n\t\t\t\treturn 1 / 2 * (-Math.pow(2, -10 * --t) + 2);\n\t\t\t},\n\t\t\teaseInCirc: function (t) {\n\t\t\t\tif (t >= 1) return t;\n\t\t\t\treturn -1 * (Math.sqrt(1 - (t /= 1) * t) - 1);\n\t\t\t},\n\t\t\teaseOutCirc: function (t) {\n\t\t\t\treturn 1 * Math.sqrt(1 - (t = t / 1 - 1) * t);\n\t\t\t},\n\t\t\teaseInOutCirc: function (t) {\n\t\t\t\tif ((t /= 1 / 2) < 1) return -1 / 2 * (Math.sqrt(1 - t * t) - 1);\n\t\t\t\treturn 1 / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t\t\t},\n\t\t\teaseInElastic: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tvar p = 0;\n\t\t\t\tvar a = 1;\n\t\t\t\tif (t === 0) return 0;\n\t\t\t\tif ((t /= 1) == 1) return 1;\n\t\t\t\tif (!p) p = 1 * 0.3;\n\t\t\t\tif (a < Math.abs(1)) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else s = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\n\t\t\t},\n\t\t\teaseOutElastic: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tvar p = 0;\n\t\t\t\tvar a = 1;\n\t\t\t\tif (t === 0) return 0;\n\t\t\t\tif ((t /= 1) == 1) return 1;\n\t\t\t\tif (!p) p = 1 * 0.3;\n\t\t\t\tif (a < Math.abs(1)) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else s = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) + 1;\n\t\t\t},\n\t\t\teaseInOutElastic: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tvar p = 0;\n\t\t\t\tvar a = 1;\n\t\t\t\tif (t === 0) return 0;\n\t\t\t\tif ((t /= 1 / 2) == 2) return 1;\n\t\t\t\tif (!p) p = 1 * (0.3 * 1.5);\n\t\t\t\tif (a < Math.abs(1)) {\n\t\t\t\t\ta = 1;\n\t\t\t\t\ts = p / 4;\n\t\t\t\t} else s = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t\t\tif (t < 1) return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p));\n\t\t\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * 1 - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t\t\t},\n\t\t\teaseInBack: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\treturn 1 * (t /= 1) * t * ((s + 1) * t - s);\n\t\t\t},\n\t\t\teaseOutBack: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\treturn 1 * ((t = t / 1 - 1) * t * ((s + 1) * t + s) + 1);\n\t\t\t},\n\t\t\teaseInOutBack: function (t) {\n\t\t\t\tvar s = 1.70158;\n\t\t\t\tif ((t /= 1 / 2) < 1) return 1 / 2 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t\t\treturn 1 / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t\t\t},\n\t\t\teaseInBounce: function (t) {\n\t\t\t\treturn 1 - easingEffects.easeOutBounce(1 - t);\n\t\t\t},\n\t\t\teaseOutBounce: function (t) {\n\t\t\t\tif ((t /= 1) < (1 / 2.75)) {\n\t\t\t\t\treturn 1 * (7.5625 * t * t);\n\t\t\t\t} else if (t < (2 / 2.75)) {\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75);\n\t\t\t\t} else if (t < (2.5 / 2.75)) {\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375);\n\t\t\t\t} else {\n\t\t\t\t\treturn 1 * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375);\n\t\t\t\t}\n\t\t\t},\n\t\t\teaseInOutBounce: function (t) {\n\t\t\t\tif (t < 1 / 2) return easingEffects.easeInBounce(t * 2) * 0.5;\n\t\t\t\treturn easingEffects.easeOutBounce(t * 2 - 1) * 0.5 + 1 * 0.5;\n\t\t\t}\n\t\t},\n\t\t//Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\t\trequestAnimFrame = helpers.requestAnimFrame = (function(){\n\t\t\treturn window.requestAnimationFrame ||\n\t\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\t\twindow.oRequestAnimationFrame ||\n\t\t\t\twindow.msRequestAnimationFrame ||\n\t\t\t\tfunction(callback) {\n\t\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t\t};\n\t\t})(),\n\t\tcancelAnimFrame = helpers.cancelAnimFrame = (function(){\n\t\t\treturn window.cancelAnimationFrame ||\n\t\t\t\twindow.webkitCancelAnimationFrame ||\n\t\t\t\twindow.mozCancelAnimationFrame ||\n\t\t\t\twindow.oCancelAnimationFrame ||\n\t\t\t\twindow.msCancelAnimationFrame ||\n\t\t\t\tfunction(callback) {\n\t\t\t\t\treturn window.clearTimeout(callback, 1000 / 60);\n\t\t\t\t};\n\t\t})(),\n\t\tanimationLoop = helpers.animationLoop = function(callback,totalSteps,easingString,onProgress,onComplete,chartInstance){\n\n\t\t\tvar currentStep = 0,\n\t\t\t\teasingFunction = easingEffects[easingString] || easingEffects.linear;\n\n\t\t\tvar animationFrame = function(){\n\t\t\t\tcurrentStep++;\n\t\t\t\tvar stepDecimal = currentStep/totalSteps;\n\t\t\t\tvar easeDecimal = easingFunction(stepDecimal);\n\n\t\t\t\tcallback.call(chartInstance,easeDecimal,stepDecimal, currentStep);\n\t\t\t\tonProgress.call(chartInstance,easeDecimal,stepDecimal);\n\t\t\t\tif (currentStep < totalSteps){\n\t\t\t\t\tchartInstance.animationFrame = requestAnimFrame(animationFrame);\n\t\t\t\t} else{\n\t\t\t\t\tonComplete.apply(chartInstance);\n\t\t\t\t}\n\t\t\t};\n\t\t\trequestAnimFrame(animationFrame);\n\t\t},\n\t\t//-- DOM methods\n\t\tgetRelativePosition = helpers.getRelativePosition = function(evt){\n\t\t\tvar mouseX, mouseY;\n\t\t\tvar e = evt.originalEvent || evt,\n\t\t\t\tcanvas = evt.currentTarget || evt.srcElement,\n\t\t\t\tboundingRect = canvas.getBoundingClientRect();\n\n\t\t\tif (e.touches){\n\t\t\t\tmouseX = e.touches[0].clientX - boundingRect.left;\n\t\t\t\tmouseY = e.touches[0].clientY - boundingRect.top;\n\n\t\t\t}\n\t\t\telse{\n\t\t\t\tmouseX = e.clientX - boundingRect.left;\n\t\t\t\tmouseY = e.clientY - boundingRect.top;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx : mouseX,\n\t\t\t\ty : mouseY\n\t\t\t};\n\n\t\t},\n\t\taddEvent = helpers.addEvent = function(node,eventType,method){\n\t\t\tif (node.addEventListener){\n\t\t\t\tnode.addEventListener(eventType,method);\n\t\t\t} else if (node.attachEvent){\n\t\t\t\tnode.attachEvent(\"on\"+eventType, method);\n\t\t\t} else {\n\t\t\t\tnode[\"on\"+eventType] = method;\n\t\t\t}\n\t\t},\n\t\tremoveEvent = helpers.removeEvent = function(node, eventType, handler){\n\t\t\tif (node.removeEventListener){\n\t\t\t\tnode.removeEventListener(eventType, handler, false);\n\t\t\t} else if (node.detachEvent){\n\t\t\t\tnode.detachEvent(\"on\"+eventType,handler);\n\t\t\t} else{\n\t\t\t\tnode[\"on\" + eventType] = noop;\n\t\t\t}\n\t\t},\n\t\tbindEvents = helpers.bindEvents = function(chartInstance, arrayOfEvents, handler){\n\t\t\t// Create the events object if it's not already present\n\t\t\tif (!chartInstance.events) chartInstance.events = {};\n\n\t\t\teach(arrayOfEvents,function(eventName){\n\t\t\t\tchartInstance.events[eventName] = function(){\n\t\t\t\t\thandler.apply(chartInstance, arguments);\n\t\t\t\t};\n\t\t\t\taddEvent(chartInstance.chart.canvas,eventName,chartInstance.events[eventName]);\n\t\t\t});\n\t\t},\n\t\tunbindEvents = helpers.unbindEvents = function (chartInstance, arrayOfEvents) {\n\t\t\teach(arrayOfEvents, function(handler,eventName){\n\t\t\t\tremoveEvent(chartInstance.chart.canvas, eventName, handler);\n\t\t\t});\n\t\t},\n\t\tgetMaximumWidth = helpers.getMaximumWidth = function(domNode){\n\t\t\tvar container = domNode.parentNode;\n\t\t\t// TODO = check cross browser stuff with this.\n\t\t\treturn container.clientWidth;\n\t\t},\n\t\tgetMaximumHeight = helpers.getMaximumHeight = function(domNode){\n\t\t\tvar container = domNode.parentNode;\n\t\t\t// TODO = check cross browser stuff with this.\n\t\t\treturn container.clientHeight;\n\t\t},\n\t\tgetMaximumSize = helpers.getMaximumSize = helpers.getMaximumWidth, // legacy support\n\t\tretinaScale = helpers.retinaScale = function(chart){\n\t\t\tvar ctx = chart.ctx,\n\t\t\t\twidth = chart.canvas.width,\n\t\t\t\theight = chart.canvas.height;\n\n\t\t\tif (window.devicePixelRatio) {\n\t\t\t\tctx.canvas.style.width = width + \"px\";\n\t\t\t\tctx.canvas.style.height = height + \"px\";\n\t\t\t\tctx.canvas.height = height * window.devicePixelRatio;\n\t\t\t\tctx.canvas.width = width * window.devicePixelRatio;\n\t\t\t\tctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n\t\t\t}\n\t\t},\n\t\t//-- Canvas methods\n\t\tclear = helpers.clear = function(chart){\n\t\t\tchart.ctx.clearRect(0,0,chart.width,chart.height);\n\t\t},\n\t\tfontString = helpers.fontString = function(pixelSize,fontStyle,fontFamily){\n\t\t\treturn fontStyle + \" \" + pixelSize+\"px \" + fontFamily;\n\t\t},\n\t\tlongestText = helpers.longestText = function(ctx,font,arrayOfStrings){\n\t\t\tctx.font = font;\n\t\t\tvar longest = 0;\n\t\t\teach(arrayOfStrings,function(string){\n\t\t\t\tvar textWidth = ctx.measureText(string).width;\n\t\t\t\tlongest = (textWidth > longest) ? textWidth : longest;\n\t\t\t});\n\t\t\treturn longest;\n\t\t},\n\t\tdrawRoundedRectangle = helpers.drawRoundedRectangle = function(ctx,x,y,width,height,radius){\n\t\t\tctx.beginPath();\n\t\t\tctx.moveTo(x + radius, y);\n\t\t\tctx.lineTo(x + width - radius, y);\n\t\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\t\tctx.lineTo(x + width, y + height - radius);\n\t\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\t\tctx.lineTo(x + radius, y + height);\n\t\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\t\tctx.lineTo(x, y + radius);\n\t\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\t\tctx.closePath();\n\t\t};\n\n\n\t//Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t//Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\tChart.Type = function(data,options,chart){\n\t\tthis.options = options;\n\t\tthis.chart = chart;\n\t\tthis.id = uid();\n\t\t//Add the chart instance to the global namespace\n\t\tChart.instances[this.id] = this;\n\n\t\t// Initialize is always called when a chart type is created\n\t\t// By default it is a no op, but it should be extended\n\t\tif (options.responsive){\n\t\t\tthis.resize();\n\t\t}\n\t\tthis.initialize.call(this,data);\n\t};\n\n\t//Core methods that'll be a part of every chart type\n\textend(Chart.Type.prototype,{\n\t\tinitialize : function(){return this;},\n\t\tclear : function(){\n\t\t\tclear(this.chart);\n\t\t\treturn this;\n\t\t},\n\t\tstop : function(){\n\t\t\t// Stops any current animation loop occuring\n\t\t\tcancelAnimFrame(this.animationFrame);\n\t\t\treturn this;\n\t\t},\n\t\tresize : function(callback){\n\t\t\tthis.stop();\n\t\t\tvar canvas = this.chart.canvas,\n\t\t\t\tnewWidth = getMaximumWidth(this.chart.canvas),\n\t\t\t\tnewHeight = this.options.maintainAspectRatio ? newWidth / this.chart.aspectRatio : getMaximumHeight(this.chart.canvas);\n\n\t\t\tcanvas.width = this.chart.width = newWidth;\n\t\t\tcanvas.height = this.chart.height = newHeight;\n\n\t\t\tretinaScale(this.chart);\n\n\t\t\tif (typeof callback === \"function\"){\n\t\t\t\tcallback.apply(this, Array.prototype.slice.call(arguments, 1));\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\treflow : noop,\n\t\trender : function(reflow){\n\t\t\tif (reflow){\n\t\t\t\tthis.reflow();\n\t\t\t}\n\t\t\tif (this.options.animation && !reflow){\n\t\t\t\thelpers.animationLoop(\n\t\t\t\t\tthis.draw,\n\t\t\t\t\tthis.options.animationSteps,\n\t\t\t\t\tthis.options.animationEasing,\n\t\t\t\t\tthis.options.onAnimationProgress,\n\t\t\t\t\tthis.options.onAnimationComplete,\n\t\t\t\t\tthis\n\t\t\t\t);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.draw();\n\t\t\t\tthis.options.onAnimationComplete.call(this);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\tgenerateLegend : function(){\n\t\t\treturn template(this.options.legendTemplate,this);\n\t\t},\n\t\tdestroy : function(){\n\t\t\tthis.clear();\n\t\t\tunbindEvents(this, this.events);\n\t\t\tvar canvas = this.chart.canvas;\n\n\t\t\t// Reset canvas height/width attributes starts a fresh with the canvas context\n\t\t\tcanvas.width = this.chart.width;\n\t\t\tcanvas.height = this.chart.height;\n\n\t\t\t// < IE9 doesn't support removeProperty\n\t\t\tif (canvas.style.removeProperty) {\n\t\t\t\tcanvas.style.removeProperty('width');\n\t\t\t\tcanvas.style.removeProperty('height');\n\t\t\t} else {\n\t\t\t\tcanvas.style.removeAttribute('width');\n\t\t\t\tcanvas.style.removeAttribute('height');\n\t\t\t}\n\n\t\t\tdelete Chart.instances[this.id];\n\t\t},\n\t\tshowTooltip : function(ChartElements, forceRedraw){\n\t\t\t// Only redraw the chart if we've actually changed what we're hovering on.\n\t\t\tif (typeof this.activeElements === 'undefined') this.activeElements = [];\n\n\t\t\tvar isChanged = (function(Elements){\n\t\t\t\tvar changed = false;\n\n\t\t\t\tif (Elements.length !== this.activeElements.length){\n\t\t\t\t\tchanged = true;\n\t\t\t\t\treturn changed;\n\t\t\t\t}\n\n\t\t\t\teach(Elements, function(element, index){\n\t\t\t\t\tif (element !== this.activeElements[index]){\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\t\t\t\treturn changed;\n\t\t\t}).call(this, ChartElements);\n\n\t\t\tif (!isChanged && !forceRedraw){\n\t\t\t\treturn;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.activeElements = ChartElements;\n\t\t\t}\n\t\t\tthis.draw();\n\t\t\tif(this.options.customTooltips){\n\t\t\t\tthis.options.customTooltips(false);\n\t\t\t}\n\t\t\tif (ChartElements.length > 0){\n\t\t\t\t// If we have multiple datasets, show a MultiTooltip for all of the data points at that index\n\t\t\t\tif (this.datasets && this.datasets.length > 1) {\n\t\t\t\t\tvar dataArray,\n\t\t\t\t\t\tdataIndex;\n\n\t\t\t\t\tfor (var i = this.datasets.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tdataArray = this.datasets[i].points || this.datasets[i].bars || this.datasets[i].segments;\n\t\t\t\t\t\tdataIndex = indexOf(dataArray, ChartElements[0]);\n\t\t\t\t\t\tif (dataIndex !== -1){\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvar tooltipLabels = [],\n\t\t\t\t\t\ttooltipColors = [],\n\t\t\t\t\t\tmedianPosition = (function(index) {\n\n\t\t\t\t\t\t\t// Get all the points at that particular index\n\t\t\t\t\t\t\tvar Elements = [],\n\t\t\t\t\t\t\t\tdataCollection,\n\t\t\t\t\t\t\t\txPositions = [],\n\t\t\t\t\t\t\t\tyPositions = [],\n\t\t\t\t\t\t\t\txMax,\n\t\t\t\t\t\t\t\tyMax,\n\t\t\t\t\t\t\t\txMin,\n\t\t\t\t\t\t\t\tyMin;\n\t\t\t\t\t\t\thelpers.each(this.datasets, function(dataset){\n\t\t\t\t\t\t\t\tdataCollection = dataset.points || dataset.bars || dataset.segments;\n\t\t\t\t\t\t\t\tif (dataCollection[dataIndex] && dataCollection[dataIndex].hasValue()){\n\t\t\t\t\t\t\t\t\tElements.push(dataCollection[dataIndex]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\thelpers.each(Elements, function(element) {\n\t\t\t\t\t\t\t\txPositions.push(element.x);\n\t\t\t\t\t\t\t\tyPositions.push(element.y);\n\n\n\t\t\t\t\t\t\t\t//Include any colour information about the element\n\t\t\t\t\t\t\t\ttooltipLabels.push(helpers.template(this.options.multiTooltipTemplate, element));\n\t\t\t\t\t\t\t\ttooltipColors.push({\n\t\t\t\t\t\t\t\t\tfill: element._saved.fillColor || element.fillColor,\n\t\t\t\t\t\t\t\t\tstroke: element._saved.strokeColor || element.strokeColor\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t}, this);\n\n\t\t\t\t\t\t\tyMin = min(yPositions);\n\t\t\t\t\t\t\tyMax = max(yPositions);\n\n\t\t\t\t\t\t\txMin = min(xPositions);\n\t\t\t\t\t\t\txMax = max(xPositions);\n\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tx: (xMin > this.chart.width/2) ? xMin : xMax,\n\t\t\t\t\t\t\t\ty: (yMin + yMax)/2\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}).call(this, dataIndex);\n\n\t\t\t\t\tnew Chart.MultiTooltip({\n\t\t\t\t\t\tx: medianPosition.x,\n\t\t\t\t\t\ty: medianPosition.y,\n\t\t\t\t\t\txPadding: this.options.tooltipXPadding,\n\t\t\t\t\t\tyPadding: this.options.tooltipYPadding,\n\t\t\t\t\t\txOffset: this.options.tooltipXOffset,\n\t\t\t\t\t\tfillColor: this.options.tooltipFillColor,\n\t\t\t\t\t\ttextColor: this.options.tooltipFontColor,\n\t\t\t\t\t\tfontFamily: this.options.tooltipFontFamily,\n\t\t\t\t\t\tfontStyle: this.options.tooltipFontStyle,\n\t\t\t\t\t\tfontSize: this.options.tooltipFontSize,\n\t\t\t\t\t\ttitleTextColor: this.options.tooltipTitleFontColor,\n\t\t\t\t\t\ttitleFontFamily: this.options.tooltipTitleFontFamily,\n\t\t\t\t\t\ttitleFontStyle: this.options.tooltipTitleFontStyle,\n\t\t\t\t\t\ttitleFontSize: this.options.tooltipTitleFontSize,\n\t\t\t\t\t\tcornerRadius: this.options.tooltipCornerRadius,\n\t\t\t\t\t\tlabels: tooltipLabels,\n\t\t\t\t\t\tlegendColors: tooltipColors,\n\t\t\t\t\t\tlegendColorBackground : this.options.multiTooltipKeyBackground,\n\t\t\t\t\t\ttitle: ChartElements[0].label,\n\t\t\t\t\t\tchart: this.chart,\n\t\t\t\t\t\tctx: this.chart.ctx,\n\t\t\t\t\t\tcustom: this.options.customTooltips\n\t\t\t\t\t}).draw();\n\n\t\t\t\t} else {\n\t\t\t\t\teach(ChartElements, function(Element) {\n\t\t\t\t\t\tvar tooltipPosition = Element.tooltipPosition();\n\t\t\t\t\t\tnew Chart.Tooltip({\n\t\t\t\t\t\t\tx: Math.round(tooltipPosition.x),\n\t\t\t\t\t\t\ty: Math.round(tooltipPosition.y),\n\t\t\t\t\t\t\txPadding: this.options.tooltipXPadding,\n\t\t\t\t\t\t\tyPadding: this.options.tooltipYPadding,\n\t\t\t\t\t\t\tfillColor: this.options.tooltipFillColor,\n\t\t\t\t\t\t\ttextColor: this.options.tooltipFontColor,\n\t\t\t\t\t\t\tfontFamily: this.options.tooltipFontFamily,\n\t\t\t\t\t\t\tfontStyle: this.options.tooltipFontStyle,\n\t\t\t\t\t\t\tfontSize: this.options.tooltipFontSize,\n\t\t\t\t\t\t\tcaretHeight: this.options.tooltipCaretSize,\n\t\t\t\t\t\t\tcornerRadius: this.options.tooltipCornerRadius,\n\t\t\t\t\t\t\ttext: template(this.options.tooltipTemplate, Element),\n\t\t\t\t\t\t\tchart: this.chart,\n\t\t\t\t\t\t\tcustom: this.options.customTooltips\n\t\t\t\t\t\t}).draw();\n\t\t\t\t\t}, this);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\ttoBase64Image : function(){\n\t\t\treturn this.chart.canvas.toDataURL.apply(this.chart.canvas, arguments);\n\t\t}\n\t});\n\n\tChart.Type.extend = function(extensions){\n\n\t\tvar parent = this;\n\n\t\tvar ChartType = function(){\n\t\t\treturn parent.apply(this,arguments);\n\t\t};\n\n\t\t//Copy the prototype object of the this class\n\t\tChartType.prototype = clone(parent.prototype);\n\t\t//Now overwrite some of the properties in the base class with the new extensions\n\t\textend(ChartType.prototype, extensions);\n\n\t\tChartType.extend = Chart.Type.extend;\n\n\t\tif (extensions.name || parent.prototype.name){\n\n\t\t\tvar chartName = extensions.name || parent.prototype.name;\n\t\t\t//Assign any potential default values of the new chart type\n\n\t\t\t//If none are defined, we'll use a clone of the chart type this is being extended from.\n\t\t\t//I.e. if we extend a line chart, we'll use the defaults from the line chart if our new chart\n\t\t\t//doesn't define some defaults of their own.\n\n\t\t\tvar baseDefaults = (Chart.defaults[parent.prototype.name]) ? clone(Chart.defaults[parent.prototype.name]) : {};\n\n\t\t\tChart.defaults[chartName] = extend(baseDefaults,extensions.defaults);\n\n\t\t\tChart.types[chartName] = ChartType;\n\n\t\t\t//Register this new chart type in the Chart prototype\n\t\t\tChart.prototype[chartName] = function(data,options){\n\t\t\t\tvar config = merge(Chart.defaults.global, Chart.defaults[chartName], options || {});\n\t\t\t\treturn new ChartType(data,config,this);\n\t\t\t};\n\t\t} else{\n\t\t\twarn(\"Name not provided for this chart, so it hasn't been registered\");\n\t\t}\n\t\treturn parent;\n\t};\n\n\tChart.Element = function(configuration){\n\t\textend(this,configuration);\n\t\tthis.initialize.apply(this,arguments);\n\t\tthis.save();\n\t};\n\textend(Chart.Element.prototype,{\n\t\tinitialize : function(){},\n\t\trestore : function(props){\n\t\t\tif (!props){\n\t\t\t\textend(this,this._saved);\n\t\t\t} else {\n\t\t\t\teach(props,function(key){\n\t\t\t\t\tthis[key] = this._saved[key];\n\t\t\t\t},this);\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\t\tsave : function(){\n\t\t\tthis._saved = clone(this);\n\t\t\tdelete this._saved._saved;\n\t\t\treturn this;\n\t\t},\n\t\tupdate : function(newProps){\n\t\t\teach(newProps,function(value,key){\n\t\t\t\tthis._saved[key] = this[key];\n\t\t\t\tthis[key] = value;\n\t\t\t},this);\n\t\t\treturn this;\n\t\t},\n\t\ttransition : function(props,ease){\n\t\t\teach(props,function(value,key){\n\t\t\t\tthis[key] = ((value - this._saved[key]) * ease) + this._saved[key];\n\t\t\t},this);\n\t\t\treturn this;\n\t\t},\n\t\ttooltipPosition : function(){\n\t\t\treturn {\n\t\t\t\tx : this.x,\n\t\t\t\ty : this.y\n\t\t\t};\n\t\t},\n\t\thasValue: function(){\n\t\t\treturn isNumber(this.value);\n\t\t}\n\t});\n\n\tChart.Element.extend = inherits;\n\n\n\tChart.Point = Chart.Element.extend({\n\t\tdisplay: true,\n\t\tinRange: function(chartX,chartY){\n\t\t\tvar hitDetectionRange = this.hitDetectionRadius + this.radius;\n\t\t\treturn ((Math.pow(chartX-this.x, 2)+Math.pow(chartY-this.y, 2)) < Math.pow(hitDetectionRange,2));\n\t\t},\n\t\tdraw : function(){\n\t\t\tif (this.display){\n\t\t\t\tvar ctx = this.ctx;\n\t\t\t\tctx.beginPath();\n\n\t\t\t\tctx.arc(this.x, this.y, this.radius, 0, Math.PI*2);\n\t\t\t\tctx.closePath();\n\n\t\t\t\tctx.strokeStyle = this.strokeColor;\n\t\t\t\tctx.lineWidth = this.strokeWidth;\n\n\t\t\t\tctx.fillStyle = this.fillColor;\n\n\t\t\t\tctx.fill();\n\t\t\t\tctx.stroke();\n\t\t\t}\n\n\n\t\t\t//Quick debug for bezier curve splining\n\t\t\t//Highlights control points and the line between them.\n\t\t\t//Handy for dev - stripped in the min version.\n\n\t\t\t// ctx.save();\n\t\t\t// ctx.fillStyle = \"black\";\n\t\t\t// ctx.strokeStyle = \"black\"\n\t\t\t// ctx.beginPath();\n\t\t\t// ctx.arc(this.controlPoints.inner.x,this.controlPoints.inner.y, 2, 0, Math.PI*2);\n\t\t\t// ctx.fill();\n\n\t\t\t// ctx.beginPath();\n\t\t\t// ctx.arc(this.controlPoints.outer.x,this.controlPoints.outer.y, 2, 0, Math.PI*2);\n\t\t\t// ctx.fill();\n\n\t\t\t// ctx.moveTo(this.controlPoints.inner.x,this.controlPoints.inner.y);\n\t\t\t// ctx.lineTo(this.x, this.y);\n\t\t\t// ctx.lineTo(this.controlPoints.outer.x,this.controlPoints.outer.y);\n\t\t\t// ctx.stroke();\n\n\t\t\t// ctx.restore();\n\n\n\n\t\t}\n\t});\n\n\tChart.Arc = Chart.Element.extend({\n\t\tinRange : function(chartX,chartY){\n\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(this, {\n\t\t\t\tx: chartX,\n\t\t\t\ty: chartY\n\t\t\t});\n\n\t\t\t//Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (pointRelativePosition.angle >= this.startAngle && pointRelativePosition.angle <= this.endAngle),\n\t\t\t\twithinRadius = (pointRelativePosition.distance >= this.innerRadius && pointRelativePosition.distance <= this.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t\t//Ensure within the outside of the arc centre, but inside arc outer\n\t\t},\n\t\ttooltipPosition : function(){\n\t\t\tvar centreAngle = this.startAngle + ((this.endAngle - this.startAngle) / 2),\n\t\t\t\trangeFromCentre = (this.outerRadius - this.innerRadius) / 2 + this.innerRadius;\n\t\t\treturn {\n\t\t\t\tx : this.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\t\ty : this.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t\t};\n\t\t},\n\t\tdraw : function(animationPercent){\n\n\t\t\tvar easingDecimal = animationPercent || 1;\n\n\t\t\tvar ctx = this.ctx;\n\n\t\t\tctx.beginPath();\n\n\t\t\tctx.arc(this.x, this.y, this.outerRadius, this.startAngle, this.endAngle);\n\n\t\t\tctx.arc(this.x, this.y, this.innerRadius, this.endAngle, this.startAngle, true);\n\n\t\t\tctx.closePath();\n\t\t\tctx.strokeStyle = this.strokeColor;\n\t\t\tctx.lineWidth = this.strokeWidth;\n\n\t\t\tctx.fillStyle = this.fillColor;\n\n\t\t\tctx.fill();\n\t\t\tctx.lineJoin = 'bevel';\n\n\t\t\tif (this.showStroke){\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t}\n\t});\n\n\tChart.Rectangle = Chart.Element.extend({\n\t\tdraw : function(){\n\t\t\tvar ctx = this.ctx,\n\t\t\t\thalfWidth = this.width/2,\n\t\t\t\tleftX = this.x - halfWidth,\n\t\t\t\trightX = this.x + halfWidth,\n\t\t\t\ttop = this.base - (this.base - this.y),\n\t\t\t\thalfStroke = this.strokeWidth / 2;\n\n\t\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\t\tif (this.showStroke){\n\t\t\t\tleftX += halfStroke;\n\t\t\t\trightX -= halfStroke;\n\t\t\t\ttop += halfStroke;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\n\t\t\tctx.fillStyle = this.fillColor;\n\t\t\tctx.strokeStyle = this.strokeColor;\n\t\t\tctx.lineWidth = this.strokeWidth;\n\n\t\t\t// It'd be nice to keep this class totally generic to any rectangle\n\t\t\t// and simply specify which border to miss out.\n\t\t\tctx.moveTo(leftX, this.base);\n\t\t\tctx.lineTo(leftX, top);\n\t\t\tctx.lineTo(rightX, top);\n\t\t\tctx.lineTo(rightX, this.base);\n\t\t\tctx.fill();\n\t\t\tif (this.showStroke){\n\t\t\t\tctx.stroke();\n\t\t\t}\n\t\t},\n\t\theight : function(){\n\t\t\treturn this.base - this.y;\n\t\t},\n\t\tinRange : function(chartX,chartY){\n\t\t\treturn (chartX >= this.x - this.width/2 && chartX <= this.x + this.width/2) && (chartY >= this.y && chartY <= this.base);\n\t\t}\n\t});\n\n\tChart.Tooltip = Chart.Element.extend({\n\t\tdraw : function(){\n\n\t\t\tvar ctx = this.chart.ctx;\n\n\t\t\tctx.font = fontString(this.fontSize,this.fontStyle,this.fontFamily);\n\n\t\t\tthis.xAlign = \"center\";\n\t\t\tthis.yAlign = \"above\";\n\n\t\t\t//Distance between the actual element.y position and the start of the tooltip caret\n\t\t\tvar caretPadding = this.caretPadding = 2;\n\n\t\t\tvar tooltipWidth = ctx.measureText(this.text).width + 2*this.xPadding,\n\t\t\t\ttooltipRectHeight = this.fontSize + 2*this.yPadding,\n\t\t\t\ttooltipHeight = tooltipRectHeight + this.caretHeight + caretPadding;\n\n\t\t\tif (this.x + tooltipWidth/2 >this.chart.width){\n\t\t\t\tthis.xAlign = \"left\";\n\t\t\t} else if (this.x - tooltipWidth/2 < 0){\n\t\t\t\tthis.xAlign = \"right\";\n\t\t\t}\n\n\t\t\tif (this.y - tooltipHeight < 0){\n\t\t\t\tthis.yAlign = \"below\";\n\t\t\t}\n\n\n\t\t\tvar tooltipX = this.x - tooltipWidth/2,\n\t\t\t\ttooltipY = this.y - tooltipHeight;\n\n\t\t\tctx.fillStyle = this.fillColor;\n\n\t\t\t// Custom Tooltips\n\t\t\tif(this.custom){\n\t\t\t\tthis.custom(this);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tswitch(this.yAlign)\n\t\t\t\t{\n\t\t\t\tcase \"above\":\n\t\t\t\t\t//Draw a caret above the x/y\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(this.x,this.y - caretPadding);\n\t\t\t\t\tctx.lineTo(this.x + this.caretHeight, this.y - (caretPadding + this.caretHeight));\n\t\t\t\t\tctx.lineTo(this.x - this.caretHeight, this.y - (caretPadding + this.caretHeight));\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tctx.fill();\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"below\":\n\t\t\t\t\ttooltipY = this.y + caretPadding + this.caretHeight;\n\t\t\t\t\t//Draw a caret below the x/y\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(this.x, this.y + caretPadding);\n\t\t\t\t\tctx.lineTo(this.x + this.caretHeight, this.y + caretPadding + this.caretHeight);\n\t\t\t\t\tctx.lineTo(this.x - this.caretHeight, this.y + caretPadding + this.caretHeight);\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tctx.fill();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tswitch(this.xAlign)\n\t\t\t\t{\n\t\t\t\tcase \"left\":\n\t\t\t\t\ttooltipX = this.x - tooltipWidth + (this.cornerRadius + this.caretHeight);\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"right\":\n\t\t\t\t\ttooltipX = this.x - (this.cornerRadius + this.caretHeight);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tdrawRoundedRectangle(ctx,tooltipX,tooltipY,tooltipWidth,tooltipRectHeight,this.cornerRadius);\n\n\t\t\t\tctx.fill();\n\n\t\t\t\tctx.fillStyle = this.textColor;\n\t\t\t\tctx.textAlign = \"center\";\n\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\tctx.fillText(this.text, tooltipX + tooltipWidth/2, tooltipY + tooltipRectHeight/2);\n\t\t\t}\n\t\t}\n\t});\n\n\tChart.MultiTooltip = Chart.Element.extend({\n\t\tinitialize : function(){\n\t\t\tthis.font = fontString(this.fontSize,this.fontStyle,this.fontFamily);\n\n\t\t\tthis.titleFont = fontString(this.titleFontSize,this.titleFontStyle,this.titleFontFamily);\n\n\t\t\tthis.height = (this.labels.length * this.fontSize) + ((this.labels.length-1) * (this.fontSize/2)) + (this.yPadding*2) + this.titleFontSize *1.5;\n\n\t\t\tthis.ctx.font = this.titleFont;\n\n\t\t\tvar titleWidth = this.ctx.measureText(this.title).width,\n\t\t\t\t//Label has a legend square as well so account for this.\n\t\t\t\tlabelWidth = longestText(this.ctx,this.font,this.labels) + this.fontSize + 3,\n\t\t\t\tlongestTextWidth = max([labelWidth,titleWidth]);\n\n\t\t\tthis.width = longestTextWidth + (this.xPadding*2);\n\n\n\t\t\tvar halfHeight = this.height/2;\n\n\t\t\t//Check to ensure the height will fit on the canvas\n\t\t\tif (this.y - halfHeight < 0 ){\n\t\t\t\tthis.y = halfHeight;\n\t\t\t} else if (this.y + halfHeight > this.chart.height){\n\t\t\t\tthis.y = this.chart.height - halfHeight;\n\t\t\t}\n\n\t\t\t//Decide whether to align left or right based on position on canvas\n\t\t\tif (this.x > this.chart.width/2){\n\t\t\t\tthis.x -= this.xOffset + this.width;\n\t\t\t} else {\n\t\t\t\tthis.x += this.xOffset;\n\t\t\t}\n\n\n\t\t},\n\t\tgetLineHeight : function(index){\n\t\t\tvar baseLineHeight = this.y - (this.height/2) + this.yPadding,\n\t\t\t\tafterTitleIndex = index-1;\n\n\t\t\t//If the index is zero, we're getting the title\n\t\t\tif (index === 0){\n\t\t\t\treturn baseLineHeight + this.titleFontSize/2;\n\t\t\t} else{\n\t\t\t\treturn baseLineHeight + ((this.fontSize*1.5*afterTitleIndex) + this.fontSize/2) + this.titleFontSize * 1.5;\n\t\t\t}\n\n\t\t},\n\t\tdraw : function(){\n\t\t\t// Custom Tooltips\n\t\t\tif(this.custom){\n\t\t\t\tthis.custom(this);\n\t\t\t}\n\t\t\telse{\n\t\t\t\tdrawRoundedRectangle(this.ctx,this.x,this.y - this.height/2,this.width,this.height,this.cornerRadius);\n\t\t\t\tvar ctx = this.ctx;\n\t\t\t\tctx.fillStyle = this.fillColor;\n\t\t\t\tctx.fill();\n\t\t\t\tctx.closePath();\n\n\t\t\t\tctx.textAlign = \"left\";\n\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\tctx.fillStyle = this.titleTextColor;\n\t\t\t\tctx.font = this.titleFont;\n\n\t\t\t\tctx.fillText(this.title,this.x + this.xPadding, this.getLineHeight(0));\n\n\t\t\t\tctx.font = this.font;\n\t\t\t\thelpers.each(this.labels,function(label,index){\n\t\t\t\t\tctx.fillStyle = this.textColor;\n\t\t\t\t\tctx.fillText(label,this.x + this.xPadding + this.fontSize + 3, this.getLineHeight(index + 1));\n\n\t\t\t\t\t//A bit gnarly, but clearing this rectangle breaks when using explorercanvas (clears whole canvas)\n\t\t\t\t\t//ctx.clearRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize/2, this.fontSize, this.fontSize);\n\t\t\t\t\t//Instead we'll make a white filled block to put the legendColour palette over.\n\n\t\t\t\t\tctx.fillStyle = this.legendColorBackground;\n\t\t\t\t\tctx.fillRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize/2, this.fontSize, this.fontSize);\n\n\t\t\t\t\tctx.fillStyle = this.legendColors[index].fill;\n\t\t\t\t\tctx.fillRect(this.x + this.xPadding, this.getLineHeight(index + 1) - this.fontSize/2, this.fontSize, this.fontSize);\n\n\n\t\t\t\t},this);\n\t\t\t}\n\t\t}\n\t});\n\n\tChart.Scale = Chart.Element.extend({\n\t\tinitialize : function(){\n\t\t\tthis.fit();\n\t\t},\n\t\tbuildYLabels : function(){\n\t\t\tthis.yLabels = [];\n\n\t\t\tvar stepDecimalPlaces = getDecimalPlaces(this.stepValue);\n\n\t\t\tfor (var i=0; i<=this.steps; i++){\n\t\t\t\tthis.yLabels.push(template(this.templateString,{value:(this.min + (i * this.stepValue)).toFixed(stepDecimalPlaces)}));\n\t\t\t}\n\t\t\tthis.yLabelWidth = (this.display && this.showLabels) ? longestText(this.ctx,this.font,this.yLabels) : 0;\n\t\t},\n\t\taddXLabel : function(label){\n\t\t\tthis.xLabels.push(label);\n\t\t\tthis.valuesCount++;\n\t\t\tthis.fit();\n\t\t},\n\t\tremoveXLabel : function(){\n\t\t\tthis.xLabels.shift();\n\t\t\tthis.valuesCount--;\n\t\t\tthis.fit();\n\t\t},\n\t\t// Fitting loop to rotate x Labels and figure out what fits there, and also calculate how many Y steps to use\n\t\tfit: function(){\n\t\t\t// First we need the width of the yLabels, assuming the xLabels aren't rotated\n\n\t\t\t// To do that we need the base line at the top and base of the chart, assuming there is no x label rotation\n\t\t\tthis.startPoint = (this.display) ? this.fontSize : 0;\n\t\t\tthis.endPoint = (this.display) ? this.height - (this.fontSize * 1.5) - 5 : this.height; // -5 to pad labels\n\n\t\t\t// Apply padding settings to the start and end point.\n\t\t\tthis.startPoint += this.padding;\n\t\t\tthis.endPoint -= this.padding;\n\n\t\t\t// Cache the starting height, so can determine if we need to recalculate the scale yAxis\n\t\t\tvar cachedHeight = this.endPoint - this.startPoint,\n\t\t\t\tcachedYLabelWidth;\n\n\t\t\t// Build the current yLabels so we have an idea of what size they'll be to start\n\t\t\t/*\n\t\t\t *\tThis sets what is returned from calculateScaleRange as static properties of this class:\n\t\t\t *\n\t\t\t\tthis.steps;\n\t\t\t\tthis.stepValue;\n\t\t\t\tthis.min;\n\t\t\t\tthis.max;\n\t\t\t *\n\t\t\t */\n\t\t\tthis.calculateYRange(cachedHeight);\n\n\t\t\t// With these properties set we can now build the array of yLabels\n\t\t\t// and also the width of the largest yLabel\n\t\t\tthis.buildYLabels();\n\n\t\t\tthis.calculateXLabelRotation();\n\n\t\t\twhile((cachedHeight > this.endPoint - this.startPoint)){\n\t\t\t\tcachedHeight = this.endPoint - this.startPoint;\n\t\t\t\tcachedYLabelWidth = this.yLabelWidth;\n\n\t\t\t\tthis.calculateYRange(cachedHeight);\n\t\t\t\tthis.buildYLabels();\n\n\t\t\t\t// Only go through the xLabel loop again if the yLabel width has changed\n\t\t\t\tif (cachedYLabelWidth < this.yLabelWidth){\n\t\t\t\t\tthis.calculateXLabelRotation();\n\t\t\t\t}\n\t\t\t}\n\n\t\t},\n\t\tcalculateXLabelRotation : function(){\n\t\t\t//Get the width of each grid by calculating the difference\n\t\t\t//between x offsets between 0 and 1.\n\n\t\t\tthis.ctx.font = this.font;\n\n\t\t\tvar firstWidth = this.ctx.measureText(this.xLabels[0]).width,\n\t\t\t\tlastWidth = this.ctx.measureText(this.xLabels[this.xLabels.length - 1]).width,\n\t\t\t\tfirstRotated,\n\t\t\t\tlastRotated;\n\n\n\t\t\tthis.xScalePaddingRight = lastWidth/2 + 3;\n\t\t\tthis.xScalePaddingLeft = (firstWidth/2 > this.yLabelWidth + 10) ? firstWidth/2 : this.yLabelWidth + 10;\n\n\t\t\tthis.xLabelRotation = 0;\n\t\t\tif (this.display){\n\t\t\t\tvar originalLabelWidth = longestText(this.ctx,this.font,this.xLabels),\n\t\t\t\t\tcosRotation,\n\t\t\t\t\tfirstRotatedWidth;\n\t\t\t\tthis.xLabelWidth = originalLabelWidth;\n\t\t\t\t//Allow 3 pixels x2 padding either side for label readability\n\t\t\t\tvar xGridWidth = Math.floor(this.calculateX(1) - this.calculateX(0)) - 6;\n\n\t\t\t\t//Max label rotate should be 90 - also act as a loop counter\n\t\t\t\twhile ((this.xLabelWidth > xGridWidth && this.xLabelRotation === 0) || (this.xLabelWidth > xGridWidth && this.xLabelRotation <= 90 && this.xLabelRotation > 0)){\n\t\t\t\t\tcosRotation = Math.cos(toRadians(this.xLabelRotation));\n\n\t\t\t\t\tfirstRotated = cosRotation * firstWidth;\n\t\t\t\t\tlastRotated = cosRotation * lastWidth;\n\n\t\t\t\t\t// We're right aligning the text now.\n\t\t\t\t\tif (firstRotated + this.fontSize / 2 > this.yLabelWidth + 8){\n\t\t\t\t\t\tthis.xScalePaddingLeft = firstRotated + this.fontSize / 2;\n\t\t\t\t\t}\n\t\t\t\t\tthis.xScalePaddingRight = this.fontSize/2;\n\n\n\t\t\t\t\tthis.xLabelRotation++;\n\t\t\t\t\tthis.xLabelWidth = cosRotation * originalLabelWidth;\n\n\t\t\t\t}\n\t\t\t\tif (this.xLabelRotation > 0){\n\t\t\t\t\tthis.endPoint -= Math.sin(toRadians(this.xLabelRotation))*originalLabelWidth + 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse{\n\t\t\t\tthis.xLabelWidth = 0;\n\t\t\t\tthis.xScalePaddingRight = this.padding;\n\t\t\t\tthis.xScalePaddingLeft = this.padding;\n\t\t\t}\n\n\t\t},\n\t\t// Needs to be overidden in each Chart type\n\t\t// Otherwise we need to pass all the data into the scale class\n\t\tcalculateYRange: noop,\n\t\tdrawingArea: function(){\n\t\t\treturn this.startPoint - this.endPoint;\n\t\t},\n\t\tcalculateY : function(value){\n\t\t\tvar scalingFactor = this.drawingArea() / (this.min - this.max);\n\t\t\treturn this.endPoint - (scalingFactor * (value - this.min));\n\t\t},\n\t\tcalculateX : function(index){\n\t\t\tvar isRotated = (this.xLabelRotation > 0),\n\t\t\t\t// innerWidth = (this.offsetGridLines) ? this.width - offsetLeft - this.padding : this.width - (offsetLeft + halfLabelWidth * 2) - this.padding,\n\t\t\t\tinnerWidth = this.width - (this.xScalePaddingLeft + this.xScalePaddingRight),\n\t\t\t\tvalueWidth = innerWidth/Math.max((this.valuesCount - ((this.offsetGridLines) ? 0 : 1)), 1),\n\t\t\t\tvalueOffset = (valueWidth * index) + this.xScalePaddingLeft;\n\n\t\t\tif (this.offsetGridLines){\n\t\t\t\tvalueOffset += (valueWidth/2);\n\t\t\t}\n\n\t\t\treturn Math.round(valueOffset);\n\t\t},\n\t\tupdate : function(newProps){\n\t\t\thelpers.extend(this, newProps);\n\t\t\tthis.fit();\n\t\t},\n\t\tdraw : function(){\n\t\t\tvar ctx = this.ctx,\n\t\t\t\tyLabelGap = (this.endPoint - this.startPoint) / this.steps,\n\t\t\t\txStart = Math.round(this.xScalePaddingLeft);\n\t\t\tif (this.display){\n\t\t\t\tctx.fillStyle = this.textColor;\n\t\t\t\tctx.font = this.font;\n\t\t\t\teach(this.yLabels,function(labelString,index){\n\t\t\t\t\tvar yLabelCenter = this.endPoint - (yLabelGap * index),\n\t\t\t\t\t\tlinePositionY = Math.round(yLabelCenter),\n\t\t\t\t\t\tdrawHorizontalLine = this.showHorizontalLines;\n\n\t\t\t\t\tctx.textAlign = \"right\";\n\t\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\t\tif (this.showLabels){\n\t\t\t\t\t\tctx.fillText(labelString,xStart - 10,yLabelCenter);\n\t\t\t\t\t}\n\n\t\t\t\t\t// This is X axis, so draw it\n\t\t\t\t\tif (index === 0 && !drawHorizontalLine){\n\t\t\t\t\t\tdrawHorizontalLine = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (drawHorizontalLine){\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index > 0){\n\t\t\t\t\t\t// This is a grid line in the centre, so drop that\n\t\t\t\t\t\tctx.lineWidth = this.gridLineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.gridLineColor;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// This is the first line on the scale\n\t\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tlinePositionY += helpers.aliasPixel(ctx.lineWidth);\n\n\t\t\t\t\tif(drawHorizontalLine){\n\t\t\t\t\t\tctx.moveTo(xStart, linePositionY);\n\t\t\t\t\t\tctx.lineTo(this.width, linePositionY);\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t}\n\n\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(xStart - 5, linePositionY);\n\t\t\t\t\tctx.lineTo(xStart, linePositionY);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t\tctx.closePath();\n\n\t\t\t\t},this);\n\n\t\t\t\teach(this.xLabels,function(label,index){\n\t\t\t\t\tvar xPos = this.calculateX(index) + aliasPixel(this.lineWidth),\n\t\t\t\t\t\t// Check to see if line/bar here and decide where to place the line\n\t\t\t\t\t\tlinePos = this.calculateX(index - (this.offsetGridLines ? 0.5 : 0)) + aliasPixel(this.lineWidth),\n\t\t\t\t\t\tisRotated = (this.xLabelRotation > 0),\n\t\t\t\t\t\tdrawVerticalLine = this.showVerticalLines;\n\n\t\t\t\t\t// This is Y axis, so draw it\n\t\t\t\t\tif (index === 0 && !drawVerticalLine){\n\t\t\t\t\t\tdrawVerticalLine = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (drawVerticalLine){\n\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t}\n\n\t\t\t\t\tif (index > 0){\n\t\t\t\t\t\t// This is a grid line in the centre, so drop that\n\t\t\t\t\t\tctx.lineWidth = this.gridLineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.gridLineColor;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// This is the first line on the scale\n\t\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (drawVerticalLine){\n\t\t\t\t\t\tctx.moveTo(linePos,this.endPoint);\n\t\t\t\t\t\tctx.lineTo(linePos,this.startPoint - 3);\n\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t}\n\n\n\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\n\n\t\t\t\t\t// Small lines at the bottom of the base grid line\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.moveTo(linePos,this.endPoint);\n\t\t\t\t\tctx.lineTo(linePos,this.endPoint + 5);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t\tctx.closePath();\n\n\t\t\t\t\tctx.save();\n\t\t\t\t\tctx.translate(xPos,(isRotated) ? this.endPoint + 12 : this.endPoint + 8);\n\t\t\t\t\tctx.rotate(toRadians(this.xLabelRotation)*-1);\n\t\t\t\t\tctx.font = this.font;\n\t\t\t\t\tctx.textAlign = (isRotated) ? \"right\" : \"center\";\n\t\t\t\t\tctx.textBaseline = (isRotated) ? \"middle\" : \"top\";\n\t\t\t\t\tctx.fillText(label, 0, 0);\n\t\t\t\t\tctx.restore();\n\t\t\t\t},this);\n\n\t\t\t}\n\t\t}\n\n\t});\n\n\tChart.RadialScale = Chart.Element.extend({\n\t\tinitialize: function(){\n\t\t\tthis.size = min([this.height, this.width]);\n\t\t\tthis.drawingArea = (this.display) ? (this.size/2) - (this.fontSize/2 + this.backdropPaddingY) : (this.size/2);\n\t\t},\n\t\tcalculateCenterOffset: function(value){\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = this.drawingArea / (this.max - this.min);\n\n\t\t\treturn (value - this.min) * scalingFactor;\n\t\t},\n\t\tupdate : function(){\n\t\t\tif (!this.lineArc){\n\t\t\t\tthis.setScaleSize();\n\t\t\t} else {\n\t\t\t\tthis.drawingArea = (this.display) ? (this.size/2) - (this.fontSize/2 + this.backdropPaddingY) : (this.size/2);\n\t\t\t}\n\t\t\tthis.buildYLabels();\n\t\t},\n\t\tbuildYLabels: function(){\n\t\t\tthis.yLabels = [];\n\n\t\t\tvar stepDecimalPlaces = getDecimalPlaces(this.stepValue);\n\n\t\t\tfor (var i=0; i<=this.steps; i++){\n\t\t\t\tthis.yLabels.push(template(this.templateString,{value:(this.min + (i * this.stepValue)).toFixed(stepDecimalPlaces)}));\n\t\t\t}\n\t\t},\n\t\tgetCircumference : function(){\n\t\t\treturn ((Math.PI*2) / this.valuesCount);\n\t\t},\n\t\tsetScaleSize: function(){\n\t\t\t/*\n\t\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t\t *\n\t\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t\t *\n\t\t\t * Solution:\n\t\t\t *\n\t\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t\t * at each index we check if the text overlaps.\n\t\t\t *\n\t\t\t * Where it does, we store that angle and that index.\n\t\t\t *\n\t\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t\t * from the shape radius to move the point inwards by that x.\n\t\t\t *\n\t\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t\t * along with labels.\n\t\t\t *\n\t\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t\t *\n\t\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t\t * and position it in the most space efficient manner\n\t\t\t *\n\t\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t\t */\n\n\n\t\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\t\tvar largestPossibleRadius = min([(this.height/2 - this.pointLabelFontSize - 5), this.width/2]),\n\t\t\t\tpointPosition,\n\t\t\t\ti,\n\t\t\t\ttextWidth,\n\t\t\t\thalfTextWidth,\n\t\t\t\tfurthestRight = this.width,\n\t\t\t\tfurthestRightIndex,\n\t\t\t\tfurthestRightAngle,\n\t\t\t\tfurthestLeft = 0,\n\t\t\t\tfurthestLeftIndex,\n\t\t\t\tfurthestLeftAngle,\n\t\t\t\txProtrusionLeft,\n\t\t\t\txProtrusionRight,\n\t\t\t\tradiusReductionRight,\n\t\t\t\tradiusReductionLeft,\n\t\t\t\tmaxWidthRadius;\n\t\t\tthis.ctx.font = fontString(this.pointLabelFontSize,this.pointLabelFontStyle,this.pointLabelFontFamily);\n\t\t\tfor (i=0;i<this.valuesCount;i++){\n\t\t\t\t// 5px to space the text slightly out - similar to what we do in the draw function.\n\t\t\t\tpointPosition = this.getPointPosition(i, largestPossibleRadius);\n\t\t\t\ttextWidth = this.ctx.measureText(template(this.templateString, { value: this.labels[i] })).width + 5;\n\t\t\t\tif (i === 0 || i === this.valuesCount/2){\n\t\t\t\t\t// If we're at index zero, or exactly the middle, we're at exactly the top/bottom\n\t\t\t\t\t// of the radar chart, so text will be aligned centrally, so we'll half it and compare\n\t\t\t\t\t// w/left and right text sizes\n\t\t\t\t\thalfTextWidth = textWidth/2;\n\t\t\t\t\tif (pointPosition.x + halfTextWidth > furthestRight) {\n\t\t\t\t\t\tfurthestRight = pointPosition.x + halfTextWidth;\n\t\t\t\t\t\tfurthestRightIndex = i;\n\t\t\t\t\t}\n\t\t\t\t\tif (pointPosition.x - halfTextWidth < furthestLeft) {\n\t\t\t\t\t\tfurthestLeft = pointPosition.x - halfTextWidth;\n\t\t\t\t\t\tfurthestLeftIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (i < this.valuesCount/2) {\n\t\t\t\t\t// Less than half the values means we'll left align the text\n\t\t\t\t\tif (pointPosition.x + textWidth > furthestRight) {\n\t\t\t\t\t\tfurthestRight = pointPosition.x + textWidth;\n\t\t\t\t\t\tfurthestRightIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (i > this.valuesCount/2){\n\t\t\t\t\t// More than half the values means we'll right align the text\n\t\t\t\t\tif (pointPosition.x - textWidth < furthestLeft) {\n\t\t\t\t\t\tfurthestLeft = pointPosition.x - textWidth;\n\t\t\t\t\t\tfurthestLeftIndex = i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\txProtrusionLeft = furthestLeft;\n\n\t\t\txProtrusionRight = Math.ceil(furthestRight - this.width);\n\n\t\t\tfurthestRightAngle = this.getIndexAngle(furthestRightIndex);\n\n\t\t\tfurthestLeftAngle = this.getIndexAngle(furthestLeftIndex);\n\n\t\t\tradiusReductionRight = xProtrusionRight / Math.sin(furthestRightAngle + Math.PI/2);\n\n\t\t\tradiusReductionLeft = xProtrusionLeft / Math.sin(furthestLeftAngle + Math.PI/2);\n\n\t\t\t// Ensure we actually need to reduce the size of the chart\n\t\t\tradiusReductionRight = (isNumber(radiusReductionRight)) ? radiusReductionRight : 0;\n\t\t\tradiusReductionLeft = (isNumber(radiusReductionLeft)) ? radiusReductionLeft : 0;\n\n\t\t\tthis.drawingArea = largestPossibleRadius - (radiusReductionLeft + radiusReductionRight)/2;\n\n\t\t\t//this.drawingArea = min([maxWidthRadius, (this.height - (2 * (this.pointLabelFontSize + 5)))/2])\n\t\t\tthis.setCenterPoint(radiusReductionLeft, radiusReductionRight);\n\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement){\n\n\t\t\tvar maxRight = this.width - rightMovement - this.drawingArea,\n\t\t\t\tmaxLeft = leftMovement + this.drawingArea;\n\n\t\t\tthis.xCenter = (maxLeft + maxRight)/2;\n\t\t\t// Always vertically in the centre as the text height doesn't change\n\t\t\tthis.yCenter = (this.height/2);\n\t\t},\n\n\t\tgetIndexAngle : function(index){\n\t\t\tvar angleMultiplier = (Math.PI * 2) / this.valuesCount;\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\n\t\t\treturn index * angleMultiplier - (Math.PI/2);\n\t\t},\n\t\tgetPointPosition : function(index, distanceFromCenter){\n\t\t\tvar thisAngle = this.getIndexAngle(index);\n\t\t\treturn {\n\t\t\t\tx : (Math.cos(thisAngle) * distanceFromCenter) + this.xCenter,\n\t\t\t\ty : (Math.sin(thisAngle) * distanceFromCenter) + this.yCenter\n\t\t\t};\n\t\t},\n\t\tdraw: function(){\n\t\t\tif (this.display){\n\t\t\t\tvar ctx = this.ctx;\n\t\t\t\teach(this.yLabels, function(label, index){\n\t\t\t\t\t// Don't draw a centre value\n\t\t\t\t\tif (index > 0){\n\t\t\t\t\t\tvar yCenterOffset = index * (this.drawingArea/this.steps),\n\t\t\t\t\t\t\tyHeight = this.yCenter - yCenterOffset,\n\t\t\t\t\t\t\tpointPosition;\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (this.lineWidth > 0){\n\t\t\t\t\t\t\tctx.strokeStyle = this.lineColor;\n\t\t\t\t\t\t\tctx.lineWidth = this.lineWidth;\n\n\t\t\t\t\t\t\tif(this.lineArc){\n\t\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\t\tctx.arc(this.xCenter, this.yCenter, yCenterOffset, 0, Math.PI*2);\n\t\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\t} else{\n\t\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\t\tfor (var i=0;i<this.valuesCount;i++)\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tpointPosition = this.getPointPosition(i, this.calculateCenterOffset(this.min + (index * this.stepValue)));\n\t\t\t\t\t\t\t\t\tif (i === 0){\n\t\t\t\t\t\t\t\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(this.showLabels){\n\t\t\t\t\t\t\tctx.font = fontString(this.fontSize,this.fontStyle,this.fontFamily);\n\t\t\t\t\t\t\tif (this.showLabelBackdrop){\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = this.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\tthis.xCenter - labelWidth/2 - this.backdropPaddingX,\n\t\t\t\t\t\t\t\t\tyHeight - this.fontSize/2 - this.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + this.backdropPaddingX*2,\n\t\t\t\t\t\t\t\t\tthis.fontSize + this.backdropPaddingY*2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = \"middle\";\n\t\t\t\t\t\t\tctx.fillStyle = this.fontColor;\n\t\t\t\t\t\t\tctx.fillText(label, this.xCenter, yHeight);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\n\t\t\t\tif (!this.lineArc){\n\t\t\t\t\tctx.lineWidth = this.angleLineWidth;\n\t\t\t\t\tctx.strokeStyle = this.angleLineColor;\n\t\t\t\t\tfor (var i = this.valuesCount - 1; i >= 0; i--) {\n\t\t\t\t\t\tif (this.angleLineWidth > 0){\n\t\t\t\t\t\t\tvar outerPosition = this.getPointPosition(i, this.calculateCenterOffset(this.max));\n\t\t\t\t\t\t\tctx.beginPath();\n\t\t\t\t\t\t\tctx.moveTo(this.xCenter, this.yCenter);\n\t\t\t\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\t\t\t\tctx.stroke();\n\t\t\t\t\t\t\tctx.closePath();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\t\t\tvar pointLabelPosition = this.getPointPosition(i, this.calculateCenterOffset(this.max) + 5);\n\t\t\t\t\t\tctx.font = fontString(this.pointLabelFontSize,this.pointLabelFontStyle,this.pointLabelFontFamily);\n\t\t\t\t\t\tctx.fillStyle = this.pointLabelFontColor;\n\n\t\t\t\t\t\tvar labelsCount = this.labels.length,\n\t\t\t\t\t\t\thalfLabelsCount = this.labels.length/2,\n\t\t\t\t\t\t\tquarterLabelsCount = halfLabelsCount/2,\n\t\t\t\t\t\t\tupperHalf = (i < quarterLabelsCount || i > labelsCount - quarterLabelsCount),\n\t\t\t\t\t\t\texactQuarter = (i === quarterLabelsCount || i === labelsCount - quarterLabelsCount);\n\t\t\t\t\t\tif (i === 0){\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t} else if(i === halfLabelsCount){\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t} else if (i < halfLabelsCount){\n\t\t\t\t\t\t\tctx.textAlign = 'left';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.textAlign = 'right';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Set the correct text baseline based on outer positioning\n\t\t\t\t\t\tif (exactQuarter){\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t} else if (upperHalf){\n\t\t\t\t\t\t\tctx.textBaseline = 'bottom';\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tctx.textBaseline = 'top';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tctx.fillText(this.labels[i], pointLabelPosition.x, pointLabelPosition.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\t// Attach global event to resize each chart instance when the browser resizes\n\thelpers.addEvent(window, \"resize\", (function(){\n\t\t// Basic debounce of resize function so it doesn't hurt performance when resizing browser.\n\t\tvar timeout;\n\t\treturn function(){\n\t\t\tclearTimeout(timeout);\n\t\t\ttimeout = setTimeout(function(){\n\t\t\t\teach(Chart.instances,function(instance){\n\t\t\t\t\t// If the responsive flag is set in the chart instance config\n\t\t\t\t\t// Cascade the resize event down to the chart.\n\t\t\t\t\tif (instance.options.responsive){\n\t\t\t\t\t\tinstance.resize(instance.render, true);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, 50);\n\t\t};\n\t})());\n\n\n\tif (amd) {\n\t\tdefine(function(){\n\t\t\treturn Chart;\n\t\t});\n\t} else if (typeof module === 'object' && module.exports) {\n\t\tmodule.exports = Chart;\n\t}\n\n\troot.Chart = Chart;\n\n\tChart.noConflict = function(){\n\t\troot.Chart = previous;\n\t\treturn Chart;\n\t};\n\n}).call(this);\n\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\thelpers = Chart.helpers;\n\n\n\tvar defaultConfig = {\n\t\t//Boolean - Whether the scale should start at zero, or an order of magnitude down from the lowest value\n\t\tscaleBeginAtZero : true,\n\n\t\t//Boolean - Whether grid lines are shown across the chart\n\t\tscaleShowGridLines : true,\n\n\t\t//String - Colour of the grid lines\n\t\tscaleGridLineColor : \"rgba(0,0,0,.05)\",\n\n\t\t//Number - Width of the grid lines\n\t\tscaleGridLineWidth : 1,\n\n\t\t//Boolean - Whether to show horizontal lines (except X axis)\n\t\tscaleShowHorizontalLines: true,\n\n\t\t//Boolean - Whether to show vertical lines (except Y axis)\n\t\tscaleShowVerticalLines: true,\n\n\t\t//Boolean - If there is a stroke on each bar\n\t\tbarShowStroke : true,\n\n\t\t//Number - Pixel width of the bar stroke\n\t\tbarStrokeWidth : 2,\n\n\t\t//Number - Spacing between each of the X value sets\n\t\tbarValueSpacing : 5,\n\n\t\t//Number - Spacing between data sets within X values\n\t\tbarDatasetSpacing : 1,\n\n\t\t//String - A legend template\n\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\\\"background-color:<%=datasets[i].fillColor%>\\\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>\"\n\n\t};\n\n\n\tChart.Type.extend({\n\t\tname: \"Bar\",\n\t\tdefaults : defaultConfig,\n\t\tinitialize:  function(data){\n\n\t\t\t//Expose options as a scope variable here so we can access it in the ScaleClass\n\t\t\tvar options = this.options;\n\n\t\t\tthis.ScaleClass = Chart.Scale.extend({\n\t\t\t\toffsetGridLines : true,\n\t\t\t\tcalculateBarX : function(datasetCount, datasetIndex, barIndex){\n\t\t\t\t\t//Reusable method for calculating the xPosition of a given bar based on datasetIndex & width of the bar\n\t\t\t\t\tvar xWidth = this.calculateBaseWidth(),\n\t\t\t\t\t\txAbsolute = this.calculateX(barIndex) - (xWidth/2),\n\t\t\t\t\t\tbarWidth = this.calculateBarWidth(datasetCount);\n\n\t\t\t\t\treturn xAbsolute + (barWidth * datasetIndex) + (datasetIndex * options.barDatasetSpacing) + barWidth/2;\n\t\t\t\t},\n\t\t\t\tcalculateBaseWidth : function(){\n\t\t\t\t\treturn (this.calculateX(1) - this.calculateX(0)) - (2*options.barValueSpacing);\n\t\t\t\t},\n\t\t\t\tcalculateBarWidth : function(datasetCount){\n\t\t\t\t\t//The padding between datasets is to the right of each bar, providing that there are more than 1 dataset\n\t\t\t\t\tvar baseWidth = this.calculateBaseWidth() - ((datasetCount - 1) * options.barDatasetSpacing);\n\n\t\t\t\t\treturn (baseWidth / datasetCount);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.datasets = [];\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activeBars = (evt.type !== 'mouseout') ? this.getBarsAtEvent(evt) : [];\n\n\t\t\t\t\tthis.eachBars(function(bar){\n\t\t\t\t\t\tbar.restore(['fillColor', 'strokeColor']);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activeBars, function(activeBar){\n\t\t\t\t\t\tactiveBar.fillColor = activeBar.highlightFill;\n\t\t\t\t\t\tactiveBar.strokeColor = activeBar.highlightStroke;\n\t\t\t\t\t});\n\t\t\t\t\tthis.showTooltip(activeBars);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Declare the extension of the default point, to cater for the options passed in to the constructor\n\t\t\tthis.BarClass = Chart.Rectangle.extend({\n\t\t\t\tstrokeWidth : this.options.barStrokeWidth,\n\t\t\t\tshowStroke : this.options.barShowStroke,\n\t\t\t\tctx : this.chart.ctx\n\t\t\t});\n\n\t\t\t//Iterate through each of the datasets, and build this into a property of the chart\n\t\t\thelpers.each(data.datasets,function(dataset,datasetIndex){\n\n\t\t\t\tvar datasetObject = {\n\t\t\t\t\tlabel : dataset.label || null,\n\t\t\t\t\tfillColor : dataset.fillColor,\n\t\t\t\t\tstrokeColor : dataset.strokeColor,\n\t\t\t\t\tbars : []\n\t\t\t\t};\n\n\t\t\t\tthis.datasets.push(datasetObject);\n\n\t\t\t\thelpers.each(dataset.data,function(dataPoint,index){\n\t\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\t\tdatasetObject.bars.push(new this.BarClass({\n\t\t\t\t\t\tvalue : dataPoint,\n\t\t\t\t\t\tlabel : data.labels[index],\n\t\t\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\t\t\tstrokeColor : dataset.strokeColor,\n\t\t\t\t\t\tfillColor : dataset.fillColor,\n\t\t\t\t\t\thighlightFill : dataset.highlightFill || dataset.fillColor,\n\t\t\t\t\t\thighlightStroke : dataset.highlightStroke || dataset.strokeColor\n\t\t\t\t\t}));\n\t\t\t\t},this);\n\n\t\t\t},this);\n\n\t\t\tthis.buildScale(data.labels);\n\n\t\t\tthis.BarClass.prototype.base = this.scale.endPoint;\n\n\t\t\tthis.eachBars(function(bar, index, datasetIndex){\n\t\t\t\thelpers.extend(bar, {\n\t\t\t\t\twidth : this.scale.calculateBarWidth(this.datasets.length),\n\t\t\t\t\tx: this.scale.calculateBarX(this.datasets.length, datasetIndex, index),\n\t\t\t\t\ty: this.scale.endPoint\n\t\t\t\t});\n\t\t\t\tbar.save();\n\t\t\t}, this);\n\n\t\t\tthis.render();\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.scale.update();\n\t\t\t// Reset any highlight colours before updating.\n\t\t\thelpers.each(this.activeElements, function(activeElement){\n\t\t\t\tactiveElement.restore(['fillColor', 'strokeColor']);\n\t\t\t});\n\n\t\t\tthis.eachBars(function(bar){\n\t\t\t\tbar.save();\n\t\t\t});\n\t\t\tthis.render();\n\t\t},\n\t\teachBars : function(callback){\n\t\t\thelpers.each(this.datasets,function(dataset, datasetIndex){\n\t\t\t\thelpers.each(dataset.bars, callback, this, datasetIndex);\n\t\t\t},this);\n\t\t},\n\t\tgetBarsAtEvent : function(e){\n\t\t\tvar barsArray = [],\n\t\t\t\teventPosition = helpers.getRelativePosition(e),\n\t\t\t\tdatasetIterator = function(dataset){\n\t\t\t\t\tbarsArray.push(dataset.bars[barIndex]);\n\t\t\t\t},\n\t\t\t\tbarIndex;\n\n\t\t\tfor (var datasetIndex = 0; datasetIndex < this.datasets.length; datasetIndex++) {\n\t\t\t\tfor (barIndex = 0; barIndex < this.datasets[datasetIndex].bars.length; barIndex++) {\n\t\t\t\t\tif (this.datasets[datasetIndex].bars[barIndex].inRange(eventPosition.x,eventPosition.y)){\n\t\t\t\t\t\thelpers.each(this.datasets, datasetIterator);\n\t\t\t\t\t\treturn barsArray;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn barsArray;\n\t\t},\n\t\tbuildScale : function(labels){\n\t\t\tvar self = this;\n\n\t\t\tvar dataTotal = function(){\n\t\t\t\tvar values = [];\n\t\t\t\tself.eachBars(function(bar){\n\t\t\t\t\tvalues.push(bar.value);\n\t\t\t\t});\n\t\t\t\treturn values;\n\t\t\t};\n\n\t\t\tvar scaleOptions = {\n\t\t\t\ttemplateString : this.options.scaleLabel,\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth : this.chart.width,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\ttextColor : this.options.scaleFontColor,\n\t\t\t\tfontSize : this.options.scaleFontSize,\n\t\t\t\tfontStyle : this.options.scaleFontStyle,\n\t\t\t\tfontFamily : this.options.scaleFontFamily,\n\t\t\t\tvaluesCount : labels.length,\n\t\t\t\tbeginAtZero : this.options.scaleBeginAtZero,\n\t\t\t\tintegersOnly : this.options.scaleIntegersOnly,\n\t\t\t\tcalculateYRange: function(currentHeight){\n\t\t\t\t\tvar updatedRanges = helpers.calculateScaleRange(\n\t\t\t\t\t\tdataTotal(),\n\t\t\t\t\t\tcurrentHeight,\n\t\t\t\t\t\tthis.fontSize,\n\t\t\t\t\t\tthis.beginAtZero,\n\t\t\t\t\t\tthis.integersOnly\n\t\t\t\t\t);\n\t\t\t\t\thelpers.extend(this, updatedRanges);\n\t\t\t\t},\n\t\t\t\txLabels : labels,\n\t\t\t\tfont : helpers.fontString(this.options.scaleFontSize, this.options.scaleFontStyle, this.options.scaleFontFamily),\n\t\t\t\tlineWidth : this.options.scaleLineWidth,\n\t\t\t\tlineColor : this.options.scaleLineColor,\n\t\t\t\tshowHorizontalLines : this.options.scaleShowHorizontalLines,\n\t\t\t\tshowVerticalLines : this.options.scaleShowVerticalLines,\n\t\t\t\tgridLineWidth : (this.options.scaleShowGridLines) ? this.options.scaleGridLineWidth : 0,\n\t\t\t\tgridLineColor : (this.options.scaleShowGridLines) ? this.options.scaleGridLineColor : \"rgba(0,0,0,0)\",\n\t\t\t\tpadding : (this.options.showScale) ? 0 : (this.options.barShowStroke) ? this.options.barStrokeWidth : 0,\n\t\t\t\tshowLabels : this.options.scaleShowLabels,\n\t\t\t\tdisplay : this.options.showScale\n\t\t\t};\n\n\t\t\tif (this.options.scaleOverride){\n\t\t\t\thelpers.extend(scaleOptions, {\n\t\t\t\t\tcalculateYRange: helpers.noop,\n\t\t\t\t\tsteps: this.options.scaleSteps,\n\t\t\t\t\tstepValue: this.options.scaleStepWidth,\n\t\t\t\t\tmin: this.options.scaleStartValue,\n\t\t\t\t\tmax: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.scale = new this.ScaleClass(scaleOptions);\n\t\t},\n\t\taddData : function(valuesArray,label){\n\t\t\t//Map the values array for each of the datasets\n\t\t\thelpers.each(valuesArray,function(value,datasetIndex){\n\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\tthis.datasets[datasetIndex].bars.push(new this.BarClass({\n\t\t\t\t\tvalue : value,\n\t\t\t\t\tlabel : label,\n\t\t\t\t\tx: this.scale.calculateBarX(this.datasets.length, datasetIndex, this.scale.valuesCount+1),\n\t\t\t\t\ty: this.scale.endPoint,\n\t\t\t\t\twidth : this.scale.calculateBarWidth(this.datasets.length),\n\t\t\t\t\tbase : this.scale.endPoint,\n\t\t\t\t\tstrokeColor : this.datasets[datasetIndex].strokeColor,\n\t\t\t\t\tfillColor : this.datasets[datasetIndex].fillColor\n\t\t\t\t}));\n\t\t\t},this);\n\n\t\t\tthis.scale.addXLabel(label);\n\t\t\t//Then re-render the chart.\n\t\t\tthis.update();\n\t\t},\n\t\tremoveData : function(){\n\t\t\tthis.scale.removeXLabel();\n\t\t\t//Then re-render the chart.\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\tdataset.bars.shift();\n\t\t\t},this);\n\t\t\tthis.update();\n\t\t},\n\t\treflow : function(){\n\t\t\thelpers.extend(this.BarClass.prototype,{\n\t\t\t\ty: this.scale.endPoint,\n\t\t\t\tbase : this.scale.endPoint\n\t\t\t});\n\t\t\tvar newScaleProps = helpers.extend({\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth : this.chart.width\n\t\t\t});\n\t\t\tthis.scale.update(newScaleProps);\n\t\t},\n\t\tdraw : function(ease){\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\tthis.clear();\n\n\t\t\tvar ctx = this.chart.ctx;\n\n\t\t\tthis.scale.draw(easingDecimal);\n\n\t\t\t//Draw all the bars for each dataset\n\t\t\thelpers.each(this.datasets,function(dataset,datasetIndex){\n\t\t\t\thelpers.each(dataset.bars,function(bar,index){\n\t\t\t\t\tif (bar.hasValue()){\n\t\t\t\t\t\tbar.base = this.scale.endPoint;\n\t\t\t\t\t\t//Transition then draw\n\t\t\t\t\t\tbar.transition({\n\t\t\t\t\t\t\tx : this.scale.calculateBarX(this.datasets.length, datasetIndex, index),\n\t\t\t\t\t\t\ty : this.scale.calculateY(bar.value),\n\t\t\t\t\t\t\twidth : this.scale.calculateBarWidth(this.datasets.length)\n\t\t\t\t\t\t}, easingDecimal).draw();\n\t\t\t\t\t}\n\t\t\t\t},this);\n\n\t\t\t},this);\n\t\t}\n\t});\n\n\n}).call(this);\n\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\t//Cache a local reference to Chart.helpers\n\t\thelpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\t\t//Boolean - Whether we should show a stroke on each segment\n\t\tsegmentShowStroke : true,\n\n\t\t//String - The colour of each segment stroke\n\t\tsegmentStrokeColor : \"#fff\",\n\n\t\t//Number - The width of each segment stroke\n\t\tsegmentStrokeWidth : 2,\n\n\t\t//The percentage of the chart that we cut out of the middle.\n\t\tpercentageInnerCutout : 50,\n\n\t\t//Number - Amount of animation steps\n\t\tanimationSteps : 100,\n\n\t\t//String - Animation easing effect\n\t\tanimationEasing : \"easeOutBounce\",\n\n\t\t//Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate : true,\n\n\t\t//Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale : false,\n\n\t\t//String - A legend template\n\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<segments.length; i++){%><li><span style=\\\"background-color:<%=segments[i].fillColor%>\\\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>\"\n\n\t};\n\n\n\tChart.Type.extend({\n\t\t//Passing in a name registers this chart in the Chart namespace\n\t\tname: \"Doughnut\",\n\t\t//Providing a defaults will also register the deafults in the chart namespace\n\t\tdefaults : defaultConfig,\n\t\t//Initialize is fired when the chart is initialized - Data is passed in as a parameter\n\t\t//Config is automatically merged by the core of Chart.js, and is available at this.options\n\t\tinitialize:  function(data){\n\n\t\t\t//Declare segments as a static property to prevent inheriting across the Chart type prototype\n\t\t\tthis.segments = [];\n\t\t\tthis.outerRadius = (helpers.min([this.chart.width,this.chart.height]) -\tthis.options.segmentStrokeWidth/2)/2;\n\n\t\t\tthis.SegmentArc = Chart.Arc.extend({\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\tx : this.chart.width/2,\n\t\t\t\ty : this.chart.height/2\n\t\t\t});\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activeSegments = (evt.type !== 'mouseout') ? this.getSegmentsAtEvent(evt) : [];\n\n\t\t\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\t\t\tsegment.restore([\"fillColor\"]);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activeSegments,function(activeSegment){\n\t\t\t\t\t\tactiveSegment.fillColor = activeSegment.highlightColor;\n\t\t\t\t\t});\n\t\t\t\t\tthis.showTooltip(activeSegments);\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis.calculateTotal(data);\n\n\t\t\thelpers.each(data,function(datapoint, index){\n\t\t\t\tthis.addData(datapoint, index, true);\n\t\t\t},this);\n\n\t\t\tthis.render();\n\t\t},\n\t\tgetSegmentsAtEvent : function(e){\n\t\t\tvar segmentsArray = [];\n\n\t\t\tvar location = helpers.getRelativePosition(e);\n\n\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\tif (segment.inRange(location.x,location.y)) segmentsArray.push(segment);\n\t\t\t},this);\n\t\t\treturn segmentsArray;\n\t\t},\n\t\taddData : function(segment, atIndex, silent){\n\t\t\tvar index = atIndex || this.segments.length;\n\t\t\tthis.segments.splice(index, 0, new this.SegmentArc({\n\t\t\t\tvalue : segment.value,\n\t\t\t\touterRadius : (this.options.animateScale) ? 0 : this.outerRadius,\n\t\t\t\tinnerRadius : (this.options.animateScale) ? 0 : (this.outerRadius/100) * this.options.percentageInnerCutout,\n\t\t\t\tfillColor : segment.color,\n\t\t\t\thighlightColor : segment.highlight || segment.color,\n\t\t\t\tshowStroke : this.options.segmentShowStroke,\n\t\t\t\tstrokeWidth : this.options.segmentStrokeWidth,\n\t\t\t\tstrokeColor : this.options.segmentStrokeColor,\n\t\t\t\tstartAngle : Math.PI * 1.5,\n\t\t\t\tcircumference : (this.options.animateRotate) ? 0 : this.calculateCircumference(segment.value),\n\t\t\t\tlabel : segment.label\n\t\t\t}));\n\t\t\tif (!silent){\n\t\t\t\tthis.reflow();\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t},\n\t\tcalculateCircumference : function(value){\n\t\t\treturn (Math.PI*2)*(Math.abs(value) / this.total);\n\t\t},\n\t\tcalculateTotal : function(data){\n\t\t\tthis.total = 0;\n\t\t\thelpers.each(data,function(segment){\n\t\t\t\tthis.total += Math.abs(segment.value);\n\t\t\t},this);\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.calculateTotal(this.segments);\n\n\t\t\t// Reset any highlight colours before updating.\n\t\t\thelpers.each(this.activeElements, function(activeElement){\n\t\t\t\tactiveElement.restore(['fillColor']);\n\t\t\t});\n\n\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\tsegment.save();\n\t\t\t});\n\t\t\tthis.render();\n\t\t},\n\n\t\tremoveData: function(atIndex){\n\t\t\tvar indexToDelete = (helpers.isNumber(atIndex)) ? atIndex : this.segments.length-1;\n\t\t\tthis.segments.splice(indexToDelete, 1);\n\t\t\tthis.reflow();\n\t\t\tthis.update();\n\t\t},\n\n\t\treflow : function(){\n\t\t\thelpers.extend(this.SegmentArc.prototype,{\n\t\t\t\tx : this.chart.width/2,\n\t\t\t\ty : this.chart.height/2\n\t\t\t});\n\t\t\tthis.outerRadius = (helpers.min([this.chart.width,this.chart.height]) -\tthis.options.segmentStrokeWidth/2)/2;\n\t\t\thelpers.each(this.segments, function(segment){\n\t\t\t\tsegment.update({\n\t\t\t\t\touterRadius : this.outerRadius,\n\t\t\t\t\tinnerRadius : (this.outerRadius/100) * this.options.percentageInnerCutout\n\t\t\t\t});\n\t\t\t}, this);\n\t\t},\n\t\tdraw : function(easeDecimal){\n\t\t\tvar animDecimal = (easeDecimal) ? easeDecimal : 1;\n\t\t\tthis.clear();\n\t\t\thelpers.each(this.segments,function(segment,index){\n\t\t\t\tsegment.transition({\n\t\t\t\t\tcircumference : this.calculateCircumference(segment.value),\n\t\t\t\t\touterRadius : this.outerRadius,\n\t\t\t\t\tinnerRadius : (this.outerRadius/100) * this.options.percentageInnerCutout\n\t\t\t\t},animDecimal);\n\n\t\t\t\tsegment.endAngle = segment.startAngle + segment.circumference;\n\n\t\t\t\tsegment.draw();\n\t\t\t\tif (index === 0){\n\t\t\t\t\tsegment.startAngle = Math.PI * 1.5;\n\t\t\t\t}\n\t\t\t\t//Check to see if it's the last segment, if not get the next and update the start angle\n\t\t\t\tif (index < this.segments.length-1){\n\t\t\t\t\tthis.segments[index+1].startAngle = segment.endAngle;\n\t\t\t\t}\n\t\t\t},this);\n\n\t\t}\n\t});\n\n\tChart.types.Doughnut.extend({\n\t\tname : \"Pie\",\n\t\tdefaults : helpers.merge(defaultConfig,{percentageInnerCutout : 0})\n\t});\n\n}).call(this);\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\thelpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\n\t\t///Boolean - Whether grid lines are shown across the chart\n\t\tscaleShowGridLines : true,\n\n\t\t//String - Colour of the grid lines\n\t\tscaleGridLineColor : \"rgba(0,0,0,.05)\",\n\n\t\t//Number - Width of the grid lines\n\t\tscaleGridLineWidth : 1,\n\n\t\t//Boolean - Whether to show horizontal lines (except X axis)\n\t\tscaleShowHorizontalLines: true,\n\n\t\t//Boolean - Whether to show vertical lines (except Y axis)\n\t\tscaleShowVerticalLines: true,\n\n\t\t//Boolean - Whether the line is curved between points\n\t\tbezierCurve : true,\n\n\t\t//Number - Tension of the bezier curve between points\n\t\tbezierCurveTension : 0.4,\n\n\t\t//Boolean - Whether to show a dot for each point\n\t\tpointDot : true,\n\n\t\t//Number - Radius of each point dot in pixels\n\t\tpointDotRadius : 4,\n\n\t\t//Number - Pixel width of point dot stroke\n\t\tpointDotStrokeWidth : 1,\n\n\t\t//Number - amount extra to add to the radius to cater for hit detection outside the drawn point\n\t\tpointHitDetectionRadius : 20,\n\n\t\t//Boolean - Whether to show a stroke for datasets\n\t\tdatasetStroke : true,\n\n\t\t//Number - Pixel width of dataset stroke\n\t\tdatasetStrokeWidth : 2,\n\n\t\t//Boolean - Whether to fill the dataset with a colour\n\t\tdatasetFill : true,\n\n\t\t//String - A legend template\n\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\\\"background-color:<%=datasets[i].strokeColor%>\\\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>\"\n\n\t};\n\n\n\tChart.Type.extend({\n\t\tname: \"Line\",\n\t\tdefaults : defaultConfig,\n\t\tinitialize:  function(data){\n\t\t\t//Declare the extension of the default point, to cater for the options passed in to the constructor\n\t\t\tthis.PointClass = Chart.Point.extend({\n\t\t\t\tstrokeWidth : this.options.pointDotStrokeWidth,\n\t\t\t\tradius : this.options.pointDotRadius,\n\t\t\t\tdisplay: this.options.pointDot,\n\t\t\t\thitDetectionRadius : this.options.pointHitDetectionRadius,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\tinRange : function(mouseX){\n\t\t\t\t\treturn (Math.pow(mouseX-this.x, 2) < Math.pow(this.radius + this.hitDetectionRadius,2));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.datasets = [];\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activePoints = (evt.type !== 'mouseout') ? this.getPointsAtEvent(evt) : [];\n\t\t\t\t\tthis.eachPoints(function(point){\n\t\t\t\t\t\tpoint.restore(['fillColor', 'strokeColor']);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activePoints, function(activePoint){\n\t\t\t\t\t\tactivePoint.fillColor = activePoint.highlightFill;\n\t\t\t\t\t\tactivePoint.strokeColor = activePoint.highlightStroke;\n\t\t\t\t\t});\n\t\t\t\t\tthis.showTooltip(activePoints);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Iterate through each of the datasets, and build this into a property of the chart\n\t\t\thelpers.each(data.datasets,function(dataset){\n\n\t\t\t\tvar datasetObject = {\n\t\t\t\t\tlabel : dataset.label || null,\n\t\t\t\t\tfillColor : dataset.fillColor,\n\t\t\t\t\tstrokeColor : dataset.strokeColor,\n\t\t\t\t\tpointColor : dataset.pointColor,\n\t\t\t\t\tpointStrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\tpoints : []\n\t\t\t\t};\n\n\t\t\t\tthis.datasets.push(datasetObject);\n\n\n\t\t\t\thelpers.each(dataset.data,function(dataPoint,index){\n\t\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\t\tdatasetObject.points.push(new this.PointClass({\n\t\t\t\t\t\tvalue : dataPoint,\n\t\t\t\t\t\tlabel : data.labels[index],\n\t\t\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\t\t\tstrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\t\tfillColor : dataset.pointColor,\n\t\t\t\t\t\thighlightFill : dataset.pointHighlightFill || dataset.pointColor,\n\t\t\t\t\t\thighlightStroke : dataset.pointHighlightStroke || dataset.pointStrokeColor\n\t\t\t\t\t}));\n\t\t\t\t},this);\n\n\t\t\t\tthis.buildScale(data.labels);\n\n\n\t\t\t\tthis.eachPoints(function(point, index){\n\t\t\t\t\thelpers.extend(point, {\n\t\t\t\t\t\tx: this.scale.calculateX(index),\n\t\t\t\t\t\ty: this.scale.endPoint\n\t\t\t\t\t});\n\t\t\t\t\tpoint.save();\n\t\t\t\t}, this);\n\n\t\t\t},this);\n\n\n\t\t\tthis.render();\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.scale.update();\n\t\t\t// Reset any highlight colours before updating.\n\t\t\thelpers.each(this.activeElements, function(activeElement){\n\t\t\t\tactiveElement.restore(['fillColor', 'strokeColor']);\n\t\t\t});\n\t\t\tthis.eachPoints(function(point){\n\t\t\t\tpoint.save();\n\t\t\t});\n\t\t\tthis.render();\n\t\t},\n\t\teachPoints : function(callback){\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\thelpers.each(dataset.points,callback,this);\n\t\t\t},this);\n\t\t},\n\t\tgetPointsAtEvent : function(e){\n\t\t\tvar pointsArray = [],\n\t\t\t\teventPosition = helpers.getRelativePosition(e);\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\thelpers.each(dataset.points,function(point){\n\t\t\t\t\tif (point.inRange(eventPosition.x,eventPosition.y)) pointsArray.push(point);\n\t\t\t\t});\n\t\t\t},this);\n\t\t\treturn pointsArray;\n\t\t},\n\t\tbuildScale : function(labels){\n\t\t\tvar self = this;\n\n\t\t\tvar dataTotal = function(){\n\t\t\t\tvar values = [];\n\t\t\t\tself.eachPoints(function(point){\n\t\t\t\t\tvalues.push(point.value);\n\t\t\t\t});\n\n\t\t\t\treturn values;\n\t\t\t};\n\n\t\t\tvar scaleOptions = {\n\t\t\t\ttemplateString : this.options.scaleLabel,\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth : this.chart.width,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\ttextColor : this.options.scaleFontColor,\n\t\t\t\tfontSize : this.options.scaleFontSize,\n\t\t\t\tfontStyle : this.options.scaleFontStyle,\n\t\t\t\tfontFamily : this.options.scaleFontFamily,\n\t\t\t\tvaluesCount : labels.length,\n\t\t\t\tbeginAtZero : this.options.scaleBeginAtZero,\n\t\t\t\tintegersOnly : this.options.scaleIntegersOnly,\n\t\t\t\tcalculateYRange : function(currentHeight){\n\t\t\t\t\tvar updatedRanges = helpers.calculateScaleRange(\n\t\t\t\t\t\tdataTotal(),\n\t\t\t\t\t\tcurrentHeight,\n\t\t\t\t\t\tthis.fontSize,\n\t\t\t\t\t\tthis.beginAtZero,\n\t\t\t\t\t\tthis.integersOnly\n\t\t\t\t\t);\n\t\t\t\t\thelpers.extend(this, updatedRanges);\n\t\t\t\t},\n\t\t\t\txLabels : labels,\n\t\t\t\tfont : helpers.fontString(this.options.scaleFontSize, this.options.scaleFontStyle, this.options.scaleFontFamily),\n\t\t\t\tlineWidth : this.options.scaleLineWidth,\n\t\t\t\tlineColor : this.options.scaleLineColor,\n\t\t\t\tshowHorizontalLines : this.options.scaleShowHorizontalLines,\n\t\t\t\tshowVerticalLines : this.options.scaleShowVerticalLines,\n\t\t\t\tgridLineWidth : (this.options.scaleShowGridLines) ? this.options.scaleGridLineWidth : 0,\n\t\t\t\tgridLineColor : (this.options.scaleShowGridLines) ? this.options.scaleGridLineColor : \"rgba(0,0,0,0)\",\n\t\t\t\tpadding: (this.options.showScale) ? 0 : this.options.pointDotRadius + this.options.pointDotStrokeWidth,\n\t\t\t\tshowLabels : this.options.scaleShowLabels,\n\t\t\t\tdisplay : this.options.showScale\n\t\t\t};\n\n\t\t\tif (this.options.scaleOverride){\n\t\t\t\thelpers.extend(scaleOptions, {\n\t\t\t\t\tcalculateYRange: helpers.noop,\n\t\t\t\t\tsteps: this.options.scaleSteps,\n\t\t\t\t\tstepValue: this.options.scaleStepWidth,\n\t\t\t\t\tmin: this.options.scaleStartValue,\n\t\t\t\t\tmax: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n\t\t\t\t});\n\t\t\t}\n\n\n\t\t\tthis.scale = new Chart.Scale(scaleOptions);\n\t\t},\n\t\taddData : function(valuesArray,label){\n\t\t\t//Map the values array for each of the datasets\n\n\t\t\thelpers.each(valuesArray,function(value,datasetIndex){\n\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\tthis.datasets[datasetIndex].points.push(new this.PointClass({\n\t\t\t\t\tvalue : value,\n\t\t\t\t\tlabel : label,\n\t\t\t\t\tx: this.scale.calculateX(this.scale.valuesCount+1),\n\t\t\t\t\ty: this.scale.endPoint,\n\t\t\t\t\tstrokeColor : this.datasets[datasetIndex].pointStrokeColor,\n\t\t\t\t\tfillColor : this.datasets[datasetIndex].pointColor\n\t\t\t\t}));\n\t\t\t},this);\n\n\t\t\tthis.scale.addXLabel(label);\n\t\t\t//Then re-render the chart.\n\t\t\tthis.update();\n\t\t},\n\t\tremoveData : function(){\n\t\t\tthis.scale.removeXLabel();\n\t\t\t//Then re-render the chart.\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\tdataset.points.shift();\n\t\t\t},this);\n\t\t\tthis.update();\n\t\t},\n\t\treflow : function(){\n\t\t\tvar newScaleProps = helpers.extend({\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth : this.chart.width\n\t\t\t});\n\t\t\tthis.scale.update(newScaleProps);\n\t\t},\n\t\tdraw : function(ease){\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\tthis.clear();\n\n\t\t\tvar ctx = this.chart.ctx;\n\n\t\t\t// Some helper methods for getting the next/prev points\n\t\t\tvar hasValue = function(item){\n\t\t\t\treturn item.value !== null;\n\t\t\t},\n\t\t\tnextPoint = function(point, collection, index){\n\t\t\t\treturn helpers.findNextWhere(collection, hasValue, index) || point;\n\t\t\t},\n\t\t\tpreviousPoint = function(point, collection, index){\n\t\t\t\treturn helpers.findPreviousWhere(collection, hasValue, index) || point;\n\t\t\t};\n\n\t\t\tthis.scale.draw(easingDecimal);\n\n\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\tvar pointsWithValues = helpers.where(dataset.points, hasValue);\n\n\t\t\t\t//Transition each point first so that the line and point drawing isn't out of sync\n\t\t\t\t//We can use this extra loop to calculate the control points of this dataset also in this loop\n\n\t\t\t\thelpers.each(dataset.points, function(point, index){\n\t\t\t\t\tif (point.hasValue()){\n\t\t\t\t\t\tpoint.transition({\n\t\t\t\t\t\t\ty : this.scale.calculateY(point.value),\n\t\t\t\t\t\t\tx : this.scale.calculateX(index)\n\t\t\t\t\t\t}, easingDecimal);\n\t\t\t\t\t}\n\t\t\t\t},this);\n\n\n\t\t\t\t// Control points need to be calculated in a seperate loop, because we need to know the current x/y of the point\n\t\t\t\t// This would cause issues when there is no animation, because the y of the next point would be 0, so beziers would be skewed\n\t\t\t\tif (this.options.bezierCurve){\n\t\t\t\t\thelpers.each(pointsWithValues, function(point, index){\n\t\t\t\t\t\tvar tension = (index > 0 && index < pointsWithValues.length - 1) ? this.options.bezierCurveTension : 0;\n\t\t\t\t\t\tpoint.controlPoints = helpers.splineCurve(\n\t\t\t\t\t\t\tpreviousPoint(point, pointsWithValues, index),\n\t\t\t\t\t\t\tpoint,\n\t\t\t\t\t\t\tnextPoint(point, pointsWithValues, index),\n\t\t\t\t\t\t\ttension\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\n\t\t\t\t\t\t// Cap puter bezier handles to the upper/lower scale bounds\n\t\t\t\t\t\tif (point.controlPoints.outer.y > this.scale.endPoint){\n\t\t\t\t\t\t\tpoint.controlPoints.outer.y = this.scale.endPoint;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (point.controlPoints.outer.y < this.scale.startPoint){\n\t\t\t\t\t\t\tpoint.controlPoints.outer.y = this.scale.startPoint;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Cap inner bezier handles to the upper/lower scale bounds\n\t\t\t\t\t\tif (point.controlPoints.inner.y > this.scale.endPoint){\n\t\t\t\t\t\t\tpoint.controlPoints.inner.y = this.scale.endPoint;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (point.controlPoints.inner.y < this.scale.startPoint){\n\t\t\t\t\t\t\tpoint.controlPoints.inner.y = this.scale.startPoint;\n\t\t\t\t\t\t}\n\t\t\t\t\t},this);\n\t\t\t\t}\n\n\n\t\t\t\t//Draw the line between all the points\n\t\t\t\tctx.lineWidth = this.options.datasetStrokeWidth;\n\t\t\t\tctx.strokeStyle = dataset.strokeColor;\n\t\t\t\tctx.beginPath();\n\n\t\t\t\thelpers.each(pointsWithValues, function(point, index){\n\t\t\t\t\tif (index === 0){\n\t\t\t\t\t\tctx.moveTo(point.x, point.y);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tif(this.options.bezierCurve){\n\t\t\t\t\t\t\tvar previous = previousPoint(point, pointsWithValues, index);\n\n\t\t\t\t\t\t\tctx.bezierCurveTo(\n\t\t\t\t\t\t\t\tprevious.controlPoints.outer.x,\n\t\t\t\t\t\t\t\tprevious.controlPoints.outer.y,\n\t\t\t\t\t\t\t\tpoint.controlPoints.inner.x,\n\t\t\t\t\t\t\t\tpoint.controlPoints.inner.y,\n\t\t\t\t\t\t\t\tpoint.x,\n\t\t\t\t\t\t\t\tpoint.y\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\tctx.lineTo(point.x,point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}, this);\n\n\t\t\t\tctx.stroke();\n\n\t\t\t\tif (this.options.datasetFill && pointsWithValues.length > 0){\n\t\t\t\t\t//Round off the line by going to the base of the chart, back to the start, then fill.\n\t\t\t\t\tctx.lineTo(pointsWithValues[pointsWithValues.length - 1].x, this.scale.endPoint);\n\t\t\t\t\tctx.lineTo(pointsWithValues[0].x, this.scale.endPoint);\n\t\t\t\t\tctx.fillStyle = dataset.fillColor;\n\t\t\t\t\tctx.closePath();\n\t\t\t\t\tctx.fill();\n\t\t\t\t}\n\n\t\t\t\t//Now draw the points over the line\n\t\t\t\t//A little inefficient double looping, but better than the line\n\t\t\t\t//lagging behind the point positions\n\t\t\t\thelpers.each(pointsWithValues,function(point){\n\t\t\t\t\tpoint.draw();\n\t\t\t\t});\n\t\t\t},this);\n\t\t}\n\t});\n\n\n}).call(this);\n\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\t//Cache a local reference to Chart.helpers\n\t\thelpers = Chart.helpers;\n\n\tvar defaultConfig = {\n\t\t//Boolean - Show a backdrop to the scale label\n\t\tscaleShowLabelBackdrop : true,\n\n\t\t//String - The colour of the label backdrop\n\t\tscaleBackdropColor : \"rgba(255,255,255,0.75)\",\n\n\t\t// Boolean - Whether the scale should begin at zero\n\t\tscaleBeginAtZero : true,\n\n\t\t//Number - The backdrop padding above & below the label in pixels\n\t\tscaleBackdropPaddingY : 2,\n\n\t\t//Number - The backdrop padding to the side of the label in pixels\n\t\tscaleBackdropPaddingX : 2,\n\n\t\t//Boolean - Show line for each value in the scale\n\t\tscaleShowLine : true,\n\n\t\t//Boolean - Stroke a line around each segment in the chart\n\t\tsegmentShowStroke : true,\n\n\t\t//String - The colour of the stroke on each segement.\n\t\tsegmentStrokeColor : \"#fff\",\n\n\t\t//Number - The width of the stroke value in pixels\n\t\tsegmentStrokeWidth : 2,\n\n\t\t//Number - Amount of animation steps\n\t\tanimationSteps : 100,\n\n\t\t//String - Animation easing effect.\n\t\tanimationEasing : \"easeOutBounce\",\n\n\t\t//Boolean - Whether to animate the rotation of the chart\n\t\tanimateRotate : true,\n\n\t\t//Boolean - Whether to animate scaling the chart from the centre\n\t\tanimateScale : false,\n\n\t\t//String - A legend template\n\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<segments.length; i++){%><li><span style=\\\"background-color:<%=segments[i].fillColor%>\\\"></span><%if(segments[i].label){%><%=segments[i].label%><%}%></li><%}%></ul>\"\n\t};\n\n\n\tChart.Type.extend({\n\t\t//Passing in a name registers this chart in the Chart namespace\n\t\tname: \"PolarArea\",\n\t\t//Providing a defaults will also register the deafults in the chart namespace\n\t\tdefaults : defaultConfig,\n\t\t//Initialize is fired when the chart is initialized - Data is passed in as a parameter\n\t\t//Config is automatically merged by the core of Chart.js, and is available at this.options\n\t\tinitialize:  function(data){\n\t\t\tthis.segments = [];\n\t\t\t//Declare segment class as a chart instance specific class, so it can share props for this instance\n\t\t\tthis.SegmentArc = Chart.Arc.extend({\n\t\t\t\tshowStroke : this.options.segmentShowStroke,\n\t\t\t\tstrokeWidth : this.options.segmentStrokeWidth,\n\t\t\t\tstrokeColor : this.options.segmentStrokeColor,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\tinnerRadius : 0,\n\t\t\t\tx : this.chart.width/2,\n\t\t\t\ty : this.chart.height/2\n\t\t\t});\n\t\t\tthis.scale = new Chart.RadialScale({\n\t\t\t\tdisplay: this.options.showScale,\n\t\t\t\tfontStyle: this.options.scaleFontStyle,\n\t\t\t\tfontSize: this.options.scaleFontSize,\n\t\t\t\tfontFamily: this.options.scaleFontFamily,\n\t\t\t\tfontColor: this.options.scaleFontColor,\n\t\t\t\tshowLabels: this.options.scaleShowLabels,\n\t\t\t\tshowLabelBackdrop: this.options.scaleShowLabelBackdrop,\n\t\t\t\tbackdropColor: this.options.scaleBackdropColor,\n\t\t\t\tbackdropPaddingY : this.options.scaleBackdropPaddingY,\n\t\t\t\tbackdropPaddingX: this.options.scaleBackdropPaddingX,\n\t\t\t\tlineWidth: (this.options.scaleShowLine) ? this.options.scaleLineWidth : 0,\n\t\t\t\tlineColor: this.options.scaleLineColor,\n\t\t\t\tlineArc: true,\n\t\t\t\twidth: this.chart.width,\n\t\t\t\theight: this.chart.height,\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\ttemplateString: this.options.scaleLabel,\n\t\t\t\tvaluesCount: data.length\n\t\t\t});\n\n\t\t\tthis.updateScaleRange(data);\n\n\t\t\tthis.scale.update();\n\n\t\t\thelpers.each(data,function(segment,index){\n\t\t\t\tthis.addData(segment,index,true);\n\t\t\t},this);\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activeSegments = (evt.type !== 'mouseout') ? this.getSegmentsAtEvent(evt) : [];\n\t\t\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\t\t\tsegment.restore([\"fillColor\"]);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activeSegments,function(activeSegment){\n\t\t\t\t\t\tactiveSegment.fillColor = activeSegment.highlightColor;\n\t\t\t\t\t});\n\t\t\t\t\tthis.showTooltip(activeSegments);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.render();\n\t\t},\n\t\tgetSegmentsAtEvent : function(e){\n\t\t\tvar segmentsArray = [];\n\n\t\t\tvar location = helpers.getRelativePosition(e);\n\n\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\tif (segment.inRange(location.x,location.y)) segmentsArray.push(segment);\n\t\t\t},this);\n\t\t\treturn segmentsArray;\n\t\t},\n\t\taddData : function(segment, atIndex, silent){\n\t\t\tvar index = atIndex || this.segments.length;\n\n\t\t\tthis.segments.splice(index, 0, new this.SegmentArc({\n\t\t\t\tfillColor: segment.color,\n\t\t\t\thighlightColor: segment.highlight || segment.color,\n\t\t\t\tlabel: segment.label,\n\t\t\t\tvalue: segment.value,\n\t\t\t\touterRadius: (this.options.animateScale) ? 0 : this.scale.calculateCenterOffset(segment.value),\n\t\t\t\tcircumference: (this.options.animateRotate) ? 0 : this.scale.getCircumference(),\n\t\t\t\tstartAngle: Math.PI * 1.5\n\t\t\t}));\n\t\t\tif (!silent){\n\t\t\t\tthis.reflow();\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t},\n\t\tremoveData: function(atIndex){\n\t\t\tvar indexToDelete = (helpers.isNumber(atIndex)) ? atIndex : this.segments.length-1;\n\t\t\tthis.segments.splice(indexToDelete, 1);\n\t\t\tthis.reflow();\n\t\t\tthis.update();\n\t\t},\n\t\tcalculateTotal: function(data){\n\t\t\tthis.total = 0;\n\t\t\thelpers.each(data,function(segment){\n\t\t\t\tthis.total += segment.value;\n\t\t\t},this);\n\t\t\tthis.scale.valuesCount = this.segments.length;\n\t\t},\n\t\tupdateScaleRange: function(datapoints){\n\t\t\tvar valuesArray = [];\n\t\t\thelpers.each(datapoints,function(segment){\n\t\t\t\tvaluesArray.push(segment.value);\n\t\t\t});\n\n\t\t\tvar scaleSizes = (this.options.scaleOverride) ?\n\t\t\t\t{\n\t\t\t\t\tsteps: this.options.scaleSteps,\n\t\t\t\t\tstepValue: this.options.scaleStepWidth,\n\t\t\t\t\tmin: this.options.scaleStartValue,\n\t\t\t\t\tmax: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n\t\t\t\t} :\n\t\t\t\thelpers.calculateScaleRange(\n\t\t\t\t\tvaluesArray,\n\t\t\t\t\thelpers.min([this.chart.width, this.chart.height])/2,\n\t\t\t\t\tthis.options.scaleFontSize,\n\t\t\t\t\tthis.options.scaleBeginAtZero,\n\t\t\t\t\tthis.options.scaleIntegersOnly\n\t\t\t\t);\n\n\t\t\thelpers.extend(\n\t\t\t\tthis.scale,\n\t\t\t\tscaleSizes,\n\t\t\t\t{\n\t\t\t\t\tsize: helpers.min([this.chart.width, this.chart.height]),\n\t\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\t\tyCenter: this.chart.height/2\n\t\t\t\t}\n\t\t\t);\n\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.calculateTotal(this.segments);\n\n\t\t\thelpers.each(this.segments,function(segment){\n\t\t\t\tsegment.save();\n\t\t\t});\n\t\t\t\n\t\t\tthis.reflow();\n\t\t\tthis.render();\n\t\t},\n\t\treflow : function(){\n\t\t\thelpers.extend(this.SegmentArc.prototype,{\n\t\t\t\tx : this.chart.width/2,\n\t\t\t\ty : this.chart.height/2\n\t\t\t});\n\t\t\tthis.updateScaleRange(this.segments);\n\t\t\tthis.scale.update();\n\n\t\t\thelpers.extend(this.scale,{\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2\n\t\t\t});\n\n\t\t\thelpers.each(this.segments, function(segment){\n\t\t\t\tsegment.update({\n\t\t\t\t\touterRadius : this.scale.calculateCenterOffset(segment.value)\n\t\t\t\t});\n\t\t\t}, this);\n\n\t\t},\n\t\tdraw : function(ease){\n\t\t\tvar easingDecimal = ease || 1;\n\t\t\t//Clear & draw the canvas\n\t\t\tthis.clear();\n\t\t\thelpers.each(this.segments,function(segment, index){\n\t\t\t\tsegment.transition({\n\t\t\t\t\tcircumference : this.scale.getCircumference(),\n\t\t\t\t\touterRadius : this.scale.calculateCenterOffset(segment.value)\n\t\t\t\t},easingDecimal);\n\n\t\t\t\tsegment.endAngle = segment.startAngle + segment.circumference;\n\n\t\t\t\t// If we've removed the first segment we need to set the first one to\n\t\t\t\t// start at the top.\n\t\t\t\tif (index === 0){\n\t\t\t\t\tsegment.startAngle = Math.PI * 1.5;\n\t\t\t\t}\n\n\t\t\t\t//Check to see if it's the last segment, if not get the next and update the start angle\n\t\t\t\tif (index < this.segments.length - 1){\n\t\t\t\t\tthis.segments[index+1].startAngle = segment.endAngle;\n\t\t\t\t}\n\t\t\t\tsegment.draw();\n\t\t\t}, this);\n\t\t\tthis.scale.draw();\n\t\t}\n\t});\n\n}).call(this);\n(function(){\n\t\"use strict\";\n\n\tvar root = this,\n\t\tChart = root.Chart,\n\t\thelpers = Chart.helpers;\n\n\n\n\tChart.Type.extend({\n\t\tname: \"Radar\",\n\t\tdefaults:{\n\t\t\t//Boolean - Whether to show lines for each scale point\n\t\t\tscaleShowLine : true,\n\n\t\t\t//Boolean - Whether we show the angle lines out of the radar\n\t\t\tangleShowLineOut : true,\n\n\t\t\t//Boolean - Whether to show labels on the scale\n\t\t\tscaleShowLabels : false,\n\n\t\t\t// Boolean - Whether the scale should begin at zero\n\t\t\tscaleBeginAtZero : true,\n\n\t\t\t//String - Colour of the angle line\n\t\t\tangleLineColor : \"rgba(0,0,0,.1)\",\n\n\t\t\t//Number - Pixel width of the angle line\n\t\t\tangleLineWidth : 1,\n\n\t\t\t//String - Point label font declaration\n\t\t\tpointLabelFontFamily : \"'Arial'\",\n\n\t\t\t//String - Point label font weight\n\t\t\tpointLabelFontStyle : \"normal\",\n\n\t\t\t//Number - Point label font size in pixels\n\t\t\tpointLabelFontSize : 10,\n\n\t\t\t//String - Point label font colour\n\t\t\tpointLabelFontColor : \"#666\",\n\n\t\t\t//Boolean - Whether to show a dot for each point\n\t\t\tpointDot : true,\n\n\t\t\t//Number - Radius of each point dot in pixels\n\t\t\tpointDotRadius : 3,\n\n\t\t\t//Number - Pixel width of point dot stroke\n\t\t\tpointDotStrokeWidth : 1,\n\n\t\t\t//Number - amount extra to add to the radius to cater for hit detection outside the drawn point\n\t\t\tpointHitDetectionRadius : 20,\n\n\t\t\t//Boolean - Whether to show a stroke for datasets\n\t\t\tdatasetStroke : true,\n\n\t\t\t//Number - Pixel width of dataset stroke\n\t\t\tdatasetStrokeWidth : 2,\n\n\t\t\t//Boolean - Whether to fill the dataset with a colour\n\t\t\tdatasetFill : true,\n\n\t\t\t//String - A legend template\n\t\t\tlegendTemplate : \"<ul class=\\\"<%=name.toLowerCase()%>-legend\\\"><% for (var i=0; i<datasets.length; i++){%><li><span style=\\\"background-color:<%=datasets[i].strokeColor%>\\\"></span><%if(datasets[i].label){%><%=datasets[i].label%><%}%></li><%}%></ul>\"\n\n\t\t},\n\n\t\tinitialize: function(data){\n\t\t\tthis.PointClass = Chart.Point.extend({\n\t\t\t\tstrokeWidth : this.options.pointDotStrokeWidth,\n\t\t\t\tradius : this.options.pointDotRadius,\n\t\t\t\tdisplay: this.options.pointDot,\n\t\t\t\thitDetectionRadius : this.options.pointHitDetectionRadius,\n\t\t\t\tctx : this.chart.ctx\n\t\t\t});\n\n\t\t\tthis.datasets = [];\n\n\t\t\tthis.buildScale(data);\n\n\t\t\t//Set up tooltip events on the chart\n\t\t\tif (this.options.showTooltips){\n\t\t\t\thelpers.bindEvents(this, this.options.tooltipEvents, function(evt){\n\t\t\t\t\tvar activePointsCollection = (evt.type !== 'mouseout') ? this.getPointsAtEvent(evt) : [];\n\n\t\t\t\t\tthis.eachPoints(function(point){\n\t\t\t\t\t\tpoint.restore(['fillColor', 'strokeColor']);\n\t\t\t\t\t});\n\t\t\t\t\thelpers.each(activePointsCollection, function(activePoint){\n\t\t\t\t\t\tactivePoint.fillColor = activePoint.highlightFill;\n\t\t\t\t\t\tactivePoint.strokeColor = activePoint.highlightStroke;\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.showTooltip(activePointsCollection);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t//Iterate through each of the datasets, and build this into a property of the chart\n\t\t\thelpers.each(data.datasets,function(dataset){\n\n\t\t\t\tvar datasetObject = {\n\t\t\t\t\tlabel: dataset.label || null,\n\t\t\t\t\tfillColor : dataset.fillColor,\n\t\t\t\t\tstrokeColor : dataset.strokeColor,\n\t\t\t\t\tpointColor : dataset.pointColor,\n\t\t\t\t\tpointStrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\tpoints : []\n\t\t\t\t};\n\n\t\t\t\tthis.datasets.push(datasetObject);\n\n\t\t\t\thelpers.each(dataset.data,function(dataPoint,index){\n\t\t\t\t\t//Add a new point for each piece of data, passing any required data to draw.\n\t\t\t\t\tvar pointPosition;\n\t\t\t\t\tif (!this.scale.animation){\n\t\t\t\t\t\tpointPosition = this.scale.getPointPosition(index, this.scale.calculateCenterOffset(dataPoint));\n\t\t\t\t\t}\n\t\t\t\t\tdatasetObject.points.push(new this.PointClass({\n\t\t\t\t\t\tvalue : dataPoint,\n\t\t\t\t\t\tlabel : data.labels[index],\n\t\t\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\t\t\tx: (this.options.animation) ? this.scale.xCenter : pointPosition.x,\n\t\t\t\t\t\ty: (this.options.animation) ? this.scale.yCenter : pointPosition.y,\n\t\t\t\t\t\tstrokeColor : dataset.pointStrokeColor,\n\t\t\t\t\t\tfillColor : dataset.pointColor,\n\t\t\t\t\t\thighlightFill : dataset.pointHighlightFill || dataset.pointColor,\n\t\t\t\t\t\thighlightStroke : dataset.pointHighlightStroke || dataset.pointStrokeColor\n\t\t\t\t\t}));\n\t\t\t\t},this);\n\n\t\t\t},this);\n\n\t\t\tthis.render();\n\t\t},\n\t\teachPoints : function(callback){\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\thelpers.each(dataset.points,callback,this);\n\t\t\t},this);\n\t\t},\n\n\t\tgetPointsAtEvent : function(evt){\n\t\t\tvar mousePosition = helpers.getRelativePosition(evt),\n\t\t\t\tfromCenter = helpers.getAngleFromPoint({\n\t\t\t\t\tx: this.scale.xCenter,\n\t\t\t\t\ty: this.scale.yCenter\n\t\t\t\t}, mousePosition);\n\n\t\t\tvar anglePerIndex = (Math.PI * 2) /this.scale.valuesCount,\n\t\t\t\tpointIndex = Math.round((fromCenter.angle - Math.PI * 1.5) / anglePerIndex),\n\t\t\t\tactivePointsCollection = [];\n\n\t\t\t// If we're at the top, make the pointIndex 0 to get the first of the array.\n\t\t\tif (pointIndex >= this.scale.valuesCount || pointIndex < 0){\n\t\t\t\tpointIndex = 0;\n\t\t\t}\n\n\t\t\tif (fromCenter.distance <= this.scale.drawingArea){\n\t\t\t\thelpers.each(this.datasets, function(dataset){\n\t\t\t\t\tactivePointsCollection.push(dataset.points[pointIndex]);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn activePointsCollection;\n\t\t},\n\n\t\tbuildScale : function(data){\n\t\t\tthis.scale = new Chart.RadialScale({\n\t\t\t\tdisplay: this.options.showScale,\n\t\t\t\tfontStyle: this.options.scaleFontStyle,\n\t\t\t\tfontSize: this.options.scaleFontSize,\n\t\t\t\tfontFamily: this.options.scaleFontFamily,\n\t\t\t\tfontColor: this.options.scaleFontColor,\n\t\t\t\tshowLabels: this.options.scaleShowLabels,\n\t\t\t\tshowLabelBackdrop: this.options.scaleShowLabelBackdrop,\n\t\t\t\tbackdropColor: this.options.scaleBackdropColor,\n\t\t\t\tbackdropPaddingY : this.options.scaleBackdropPaddingY,\n\t\t\t\tbackdropPaddingX: this.options.scaleBackdropPaddingX,\n\t\t\t\tlineWidth: (this.options.scaleShowLine) ? this.options.scaleLineWidth : 0,\n\t\t\t\tlineColor: this.options.scaleLineColor,\n\t\t\t\tangleLineColor : this.options.angleLineColor,\n\t\t\t\tangleLineWidth : (this.options.angleShowLineOut) ? this.options.angleLineWidth : 0,\n\t\t\t\t// Point labels at the edge of each line\n\t\t\t\tpointLabelFontColor : this.options.pointLabelFontColor,\n\t\t\t\tpointLabelFontSize : this.options.pointLabelFontSize,\n\t\t\t\tpointLabelFontFamily : this.options.pointLabelFontFamily,\n\t\t\t\tpointLabelFontStyle : this.options.pointLabelFontStyle,\n\t\t\t\theight : this.chart.height,\n\t\t\t\twidth: this.chart.width,\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2,\n\t\t\t\tctx : this.chart.ctx,\n\t\t\t\ttemplateString: this.options.scaleLabel,\n\t\t\t\tlabels: data.labels,\n\t\t\t\tvaluesCount: data.datasets[0].data.length\n\t\t\t});\n\n\t\t\tthis.scale.setScaleSize();\n\t\t\tthis.updateScaleRange(data.datasets);\n\t\t\tthis.scale.buildYLabels();\n\t\t},\n\t\tupdateScaleRange: function(datasets){\n\t\t\tvar valuesArray = (function(){\n\t\t\t\tvar totalDataArray = [];\n\t\t\t\thelpers.each(datasets,function(dataset){\n\t\t\t\t\tif (dataset.data){\n\t\t\t\t\t\ttotalDataArray = totalDataArray.concat(dataset.data);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\thelpers.each(dataset.points, function(point){\n\t\t\t\t\t\t\ttotalDataArray.push(point.value);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn totalDataArray;\n\t\t\t})();\n\n\n\t\t\tvar scaleSizes = (this.options.scaleOverride) ?\n\t\t\t\t{\n\t\t\t\t\tsteps: this.options.scaleSteps,\n\t\t\t\t\tstepValue: this.options.scaleStepWidth,\n\t\t\t\t\tmin: this.options.scaleStartValue,\n\t\t\t\t\tmax: this.options.scaleStartValue + (this.options.scaleSteps * this.options.scaleStepWidth)\n\t\t\t\t} :\n\t\t\t\thelpers.calculateScaleRange(\n\t\t\t\t\tvaluesArray,\n\t\t\t\t\thelpers.min([this.chart.width, this.chart.height])/2,\n\t\t\t\t\tthis.options.scaleFontSize,\n\t\t\t\t\tthis.options.scaleBeginAtZero,\n\t\t\t\t\tthis.options.scaleIntegersOnly\n\t\t\t\t);\n\n\t\t\thelpers.extend(\n\t\t\t\tthis.scale,\n\t\t\t\tscaleSizes\n\t\t\t);\n\n\t\t},\n\t\taddData : function(valuesArray,label){\n\t\t\t//Map the values array for each of the datasets\n\t\t\tthis.scale.valuesCount++;\n\t\t\thelpers.each(valuesArray,function(value,datasetIndex){\n\t\t\t\tvar pointPosition = this.scale.getPointPosition(this.scale.valuesCount, this.scale.calculateCenterOffset(value));\n\t\t\t\tthis.datasets[datasetIndex].points.push(new this.PointClass({\n\t\t\t\t\tvalue : value,\n\t\t\t\t\tlabel : label,\n\t\t\t\t\tx: pointPosition.x,\n\t\t\t\t\ty: pointPosition.y,\n\t\t\t\t\tstrokeColor : this.datasets[datasetIndex].pointStrokeColor,\n\t\t\t\t\tfillColor : this.datasets[datasetIndex].pointColor\n\t\t\t\t}));\n\t\t\t},this);\n\n\t\t\tthis.scale.labels.push(label);\n\n\t\t\tthis.reflow();\n\n\t\t\tthis.update();\n\t\t},\n\t\tremoveData : function(){\n\t\t\tthis.scale.valuesCount--;\n\t\t\tthis.scale.labels.shift();\n\t\t\thelpers.each(this.datasets,function(dataset){\n\t\t\t\tdataset.points.shift();\n\t\t\t},this);\n\t\t\tthis.reflow();\n\t\t\tthis.update();\n\t\t},\n\t\tupdate : function(){\n\t\t\tthis.eachPoints(function(point){\n\t\t\t\tpoint.save();\n\t\t\t});\n\t\t\tthis.reflow();\n\t\t\tthis.render();\n\t\t},\n\t\treflow: function(){\n\t\t\thelpers.extend(this.scale, {\n\t\t\t\twidth : this.chart.width,\n\t\t\t\theight: this.chart.height,\n\t\t\t\tsize : helpers.min([this.chart.width, this.chart.height]),\n\t\t\t\txCenter: this.chart.width/2,\n\t\t\t\tyCenter: this.chart.height/2\n\t\t\t});\n\t\t\tthis.updateScaleRange(this.datasets);\n\t\t\tthis.scale.setScaleSize();\n\t\t\tthis.scale.buildYLabels();\n\t\t},\n\t\tdraw : function(ease){\n\t\t\tvar easeDecimal = ease || 1,\n\t\t\t\tctx = this.chart.ctx;\n\t\t\tthis.clear();\n\t\t\tthis.scale.draw();\n\n\t\t\thelpers.each(this.datasets,function(dataset){\n\n\t\t\t\t//Transition each point first so that the line and point drawing isn't out of sync\n\t\t\t\thelpers.each(dataset.points,function(point,index){\n\t\t\t\t\tif (point.hasValue()){\n\t\t\t\t\t\tpoint.transition(this.scale.getPointPosition(index, this.scale.calculateCenterOffset(point.value)), easeDecimal);\n\t\t\t\t\t}\n\t\t\t\t},this);\n\n\n\n\t\t\t\t//Draw the line between all the points\n\t\t\t\tctx.lineWidth = this.options.datasetStrokeWidth;\n\t\t\t\tctx.strokeStyle = dataset.strokeColor;\n\t\t\t\tctx.beginPath();\n\t\t\t\thelpers.each(dataset.points,function(point,index){\n\t\t\t\t\tif (index === 0){\n\t\t\t\t\t\tctx.moveTo(point.x,point.y);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tctx.lineTo(point.x,point.y);\n\t\t\t\t\t}\n\t\t\t\t},this);\n\t\t\t\tctx.closePath();\n\t\t\t\tctx.stroke();\n\n\t\t\t\tctx.fillStyle = dataset.fillColor;\n\t\t\t\tctx.fill();\n\n\t\t\t\t//Now draw the points over the line\n\t\t\t\t//A little inefficient double looping, but better than the line\n\t\t\t\t//lagging behind the point positions\n\t\t\t\thelpers.each(dataset.points,function(point){\n\t\t\t\t\tif (point.hasValue()){\n\t\t\t\t\t\tpoint.draw();\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t},this);\n\n\t\t}\n\n\t});\n\n\n\n\n\n}).call(this);","import initGkeDropdowns from '~/projects/gke_cluster_dropdowns';\nimport PersistentUserCallout from '../../persistent_user_callout';\nimport Project from './project';\nimport ShortcutsNavigation from '../../behaviors/shortcuts/shortcuts_navigation';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const { page } = document.body.dataset;\n  const newClusterViews = [\n    'projects:clusters:new',\n    'projects:clusters:create_gcp',\n    'projects:clusters:create_user',\n  ];\n\n  if (newClusterViews.indexOf(page) > -1) {\n    const callout = document.querySelector('.gcp-signup-offer');\n    if (callout) new PersistentUserCallout(callout); // eslint-disable-line no-new\n\n    initGkeDropdowns();\n  }\n\n  new Project(); // eslint-disable-line no-new\n  new ShortcutsNavigation(); // eslint-disable-line no-new\n});\n"],"sourceRoot":""}