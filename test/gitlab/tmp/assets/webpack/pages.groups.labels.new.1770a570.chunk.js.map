{"version":3,"sources":["webpack:///./pages/groups/labels/new/index.js","webpack:///./pages/groups/index.js","webpack:///./labels.js"],"names":["__webpack_require__","r","__webpack_exports__","_labels__WEBPACK_IMPORTED_MODULE_0__","document","addEventListener","Labels","_persistent_user_callout__WEBPACK_IMPORTED_MODULE_0__","_projects_gke_cluster_dropdowns__WEBPACK_IMPORTED_MODULE_1__","callout","page","body","dataset","indexOf","querySelector","PersistentUserCallout","initGkeDropdowns","_classCallCheck","this","setSuggestedColor","bind","updateColorPreview","cleanBinding","addBinding","$","on","off","previewColor","val","css","e","color","currentTarget","data","trigger","preventDefault"],"mappings":"6IAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,KAEAI,SAASC,iBAAiB,mBAAoB,kBAAM,IAAIC,wCCFxDN,EAAAC,EAAAC,GAAA,IAAAK,EAAAP,EAAA,IAAAQ,EAAAR,EAAA,IASAI,SAASC,iBAAiB,mBAAoB,WAAM,IAL5CI,EAMEC,EAASN,SAASO,KAAKC,QAAvBF,MAEN,sBACA,6BACA,+BAGkBG,QAAQH,IAAS,KAb/BD,EAAUL,SAASU,cAAc,uBAE1B,IAAIC,IAAsBN,GAarCO,iRCjBiBV,aACnB,SAAAA,iGAAcW,CAAAC,KAAAZ,GACZY,KAAKC,kBAAoBD,KAAKC,kBAAkBC,KAAKF,MACrDA,KAAKG,mBAAqBH,KAAKG,mBAAmBD,KAAKF,MACvDA,KAAKI,eACLJ,KAAKK,aACLL,KAAKG,iFAKL,OADAG,IAAEpB,UAAUqB,GAAG,QAAS,oBAAqBP,KAAKC,mBAC3CK,IAAEpB,UAAUqB,GAAG,QAAS,oBAAqBP,KAAKG,2DAKzD,OADAG,IAAEpB,UAAUsB,IAAI,QAAS,qBAClBF,IAAEpB,UAAUsB,IAAI,QAAS,kEAIhC,IAAMC,EAAeH,IAAE,qBAAqBI,MAC5C,OAAOJ,IAAE,2BAA2BK,IAAI,mBAAoBF,6CAK5CG,GAChB,IAAMC,EAAQP,IAAEM,EAAEE,eAAeC,KAAK,SAKtC,OAJAT,IAAE,qBAAqBI,IAAIG,GAC3Bb,KAAKG,qBAELG,IAAE,eAAeU,QAAQ,SAClBJ,EAAEK","file":"pages.groups.labels.new.1770a570.chunk.js","sourcesContent":["import Labels from '~/labels';\n\ndocument.addEventListener('DOMContentLoaded', () => new Labels());\n","import PersistentUserCallout from '~/persistent_user_callout';\nimport initGkeDropdowns from '~/projects/gke_cluster_dropdowns';\n\nfunction initGcpSignupCallout() {\n  const callout = document.querySelector('.gcp-signup-offer');\n\n  if (callout) new PersistentUserCallout(callout); // eslint-disable-line no-new\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const { page } = document.body.dataset;\n  const newClusterViews = [\n    'groups:clusters:new',\n    'groups:clusters:create_gcp',\n    'groups:clusters:create_user',\n  ];\n\n  if (newClusterViews.indexOf(page) > -1) {\n    initGcpSignupCallout();\n    initGkeDropdowns();\n  }\n});\n","import $ from 'jquery';\n\nexport default class Labels {\n  constructor() {\n    this.setSuggestedColor = this.setSuggestedColor.bind(this);\n    this.updateColorPreview = this.updateColorPreview.bind(this);\n    this.cleanBinding();\n    this.addBinding();\n    this.updateColorPreview();\n  }\n\n  addBinding() {\n    $(document).on('click', '.suggest-colors a', this.setSuggestedColor);\n    return $(document).on('input', 'input#label_color', this.updateColorPreview);\n  }\n  // eslint-disable-next-line class-methods-use-this\n  cleanBinding() {\n    $(document).off('click', '.suggest-colors a');\n    return $(document).off('input', 'input#label_color');\n  }\n  // eslint-disable-next-line class-methods-use-this\n  updateColorPreview() {\n    const previewColor = $('input#label_color').val();\n    return $('div.label-color-preview').css('background-color', previewColor);\n    // Updates the preview color with the hex-color input\n  }\n\n  // Updates the preview color with a click on a suggested color\n  setSuggestedColor(e) {\n    const color = $(e.currentTarget).data('color');\n    $('input#label_color').val(color);\n    this.updateColorPreview();\n    // Notify the form, that color has changed\n    $('.label-form').trigger('keyup');\n    return e.preventDefault();\n  }\n}\n"],"sourceRoot":""}