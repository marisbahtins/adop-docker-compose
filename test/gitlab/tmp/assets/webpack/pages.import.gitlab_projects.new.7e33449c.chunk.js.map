{"version":3,"sources":["webpack:///./pages/import/gitlab_projects/new/index.js","webpack:///./projects/project_import_gitlab_project.js","webpack:///./projects/project_new.js"],"names":["document","addEventListener","pathParam","getParameterValues","nameParam","$projectPath","$","$projectName","val","keyup","projectNew","onProjectNameChange","jquery__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","jquery__WEBPACK_IMPORTED_MODULE_0___default","n","_lib_utils_common_utils__WEBPACK_IMPORTED_MODULE_1__","_lib_utils_text_utility__WEBPACK_IMPORTED_MODULE_2__","hasUserDefinedProjectPath","deriveProjectPathFromUrl","$projectImportUrl","$currentProjectPath","parents","find","importUrl","trim","length","replace","pathMatch","exec","$projectNameInput","$projectPathInput","slug","slugifyWithHyphens","__webpack_exports__","bindEvents","$newProjectForm","$useTemplateBtn","$projectFieldsForm","$selectedTemplateText","$changeTemplateBtn","$selectedIcon","$pushNewProjectTipTrigger","$projectTemplateButtons","on","e","preventDefault","currentTarget","next","show","hide","importHref","attr","concat","removeAttr","popover","title","data","placement","html","content","event","target","closest","trigger","addSelectOnFocusBehaviour","focus","off","addClass","empty","selectedTemplate","rails","text","icon","express","spring","this","clone","appendTo","$activeTabProjectName","$activeTabProjectPath","removeClass","prop"],"mappings":"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","file":"pages.import.gitlab_projects.new.7e33449c.chunk.js","sourcesContent":["import initGitLabImportProject from '~/projects/project_import_gitlab_project';\n\ndocument.addEventListener('DOMContentLoaded', initGitLabImportProject);\n","import $ from 'jquery';\nimport { getParameterValues } from '../lib/utils/url_utility';\nimport projectNew from './project_new';\n\nexport default () => {\n  const pathParam = getParameterValues('path')[0];\n  const nameParam = getParameterValues('name')[0];\n  const $projectPath = $('.js-path-name');\n  const $projectName = $('.js-project-name');\n\n  // get the path url and append it in the input\n  $projectPath.val(pathParam);\n\n  // get the project name from the URL and set it as input value\n  $projectName.val(nameParam);\n\n  // generate slug when project name changes\n  $projectName.keyup(() => projectNew.onProjectNameChange($projectName, $projectPath));\n};\n","import $ from 'jquery';\nimport { addSelectOnFocusBehaviour } from '../lib/utils/common_utils';\nimport { slugifyWithHyphens } from '../lib/utils/text_utility';\n\nlet hasUserDefinedProjectPath = false;\n\nconst deriveProjectPathFromUrl = $projectImportUrl => {\n  const $currentProjectPath = $projectImportUrl\n    .parents('.toggle-import-form')\n    .find('#project_path');\n  if (hasUserDefinedProjectPath) {\n    return;\n  }\n\n  let importUrl = $projectImportUrl.val().trim();\n  if (importUrl.length === 0) {\n    return;\n  }\n\n  /*\n    \\/?: remove trailing slash\n    (\\.git\\/?)?: remove trailing .git (with optional trailing slash)\n    (\\?.*)?: remove query string\n    (#.*)?: remove fragment identifier\n  */\n  importUrl = importUrl.replace(/\\/?(\\.git\\/?)?(\\?.*)?(#.*)?$/, '');\n\n  // extract everything after the last slash\n  const pathMatch = /\\/([^/]+)$/.exec(importUrl);\n  if (pathMatch) {\n    $currentProjectPath.val(pathMatch[1]);\n  }\n};\n\nconst onProjectNameChange = ($projectNameInput, $projectPathInput) => {\n  const slug = slugifyWithHyphens($projectNameInput.val());\n  $projectPathInput.val(slug);\n};\n\nconst bindEvents = () => {\n  const $newProjectForm = $('#new_project');\n  const $projectImportUrl = $('#project_import_url');\n  const $projectPath = $('.tab-pane.active #project_path');\n  const $useTemplateBtn = $('.template-button > input');\n  const $projectFieldsForm = $('.project-fields-form');\n  const $selectedTemplateText = $('.selected-template');\n  const $changeTemplateBtn = $('.change-template');\n  const $selectedIcon = $('.selected-icon');\n  const $pushNewProjectTipTrigger = $('.push-new-project-tip');\n  const $projectTemplateButtons = $('.project-templates-buttons');\n  const $projectName = $('.tab-pane.active #project_name');\n\n  if ($newProjectForm.length !== 1) {\n    return;\n  }\n\n  $('.how_to_import_link').on('click', e => {\n    e.preventDefault();\n    $(e.currentTarget)\n      .next('.modal')\n      .show();\n  });\n\n  $('.modal-header .close').on('click', () => {\n    $('.modal').hide();\n  });\n\n  $('.btn_import_gitlab_project').on('click', () => {\n    const importHref = $('a.btn_import_gitlab_project').attr('href');\n    $('.btn_import_gitlab_project').attr(\n      'href',\n      `${importHref}?namespace_id=${$(\n        '#project_namespace_id',\n      ).val()}&name=${$projectName.val()}&path=${$projectPath.val()}`,\n    );\n  });\n\n  if ($pushNewProjectTipTrigger) {\n    $pushNewProjectTipTrigger\n      .removeAttr('rel')\n      .removeAttr('target')\n      .on('click', e => {\n        e.preventDefault();\n      })\n      .popover({\n        title: $pushNewProjectTipTrigger.data('title'),\n        placement: 'bottom',\n        html: true,\n        content: $('.push-new-project-tip-template').html(),\n      })\n      .on('shown.bs.popover', () => {\n        $(document).on('click.popover touchstart.popover', event => {\n          if ($(event.target).closest('.popover').length === 0) {\n            $pushNewProjectTipTrigger.trigger('click');\n          }\n        });\n\n        const target = $(`#${$pushNewProjectTipTrigger.attr('aria-describedby')}`).find(\n          '.js-select-on-focus',\n        );\n        addSelectOnFocusBehaviour(target);\n\n        target.focus();\n      })\n      .on('hide.bs.popover', () => {\n        $(document).off('click.popover touchstart.popover');\n      });\n  }\n\n  function chooseTemplate() {\n    $projectTemplateButtons.addClass('hidden');\n    $projectFieldsForm.addClass('selected');\n    $selectedIcon.empty();\n    const value = $(this).val();\n    const templates = {\n      rails: {\n        text: 'Ruby on Rails',\n        icon: '.template-option svg.icon-rails',\n      },\n      express: {\n        text: 'NodeJS Express',\n        icon: '.template-option svg.icon-node-express',\n      },\n      spring: {\n        text: 'Spring',\n        icon: '.template-option svg.icon-java-spring',\n      },\n    };\n\n    const selectedTemplate = templates[value];\n    $selectedTemplateText.text(selectedTemplate.text);\n    $(selectedTemplate.icon)\n      .clone()\n      .addClass('d-block')\n      .appendTo($selectedIcon);\n\n    const $activeTabProjectName = $('.tab-pane.active #project_name');\n    const $activeTabProjectPath = $('.tab-pane.active #project_path');\n    $activeTabProjectName.focus();\n    $activeTabProjectName.keyup(() => {\n      onProjectNameChange($activeTabProjectName, $activeTabProjectPath);\n      hasUserDefinedProjectPath = $activeTabProjectPath.val().trim().length > 0;\n    });\n  }\n\n  $useTemplateBtn.on('change', chooseTemplate);\n\n  $changeTemplateBtn.on('click', () => {\n    $projectTemplateButtons.removeClass('hidden');\n    $projectFieldsForm.removeClass('selected');\n    $useTemplateBtn.prop('checked', false);\n  });\n\n  $newProjectForm.on('submit', () => {\n    $projectPath.val($projectPath.val().trim());\n  });\n\n  $projectPath.on('keyup', () => {\n    hasUserDefinedProjectPath = $projectPath.val().trim().length > 0;\n  });\n\n  $projectImportUrl.keyup(() => deriveProjectPathFromUrl($projectImportUrl));\n\n  $projectName.on('keyup change', () => {\n    onProjectNameChange($projectName, $projectPath);\n    hasUserDefinedProjectPath = $projectPath.val().trim().length > 0;\n  });\n};\n\nexport default {\n  bindEvents,\n  deriveProjectPathFromUrl,\n  onProjectNameChange,\n};\n"],"sourceRoot":""}