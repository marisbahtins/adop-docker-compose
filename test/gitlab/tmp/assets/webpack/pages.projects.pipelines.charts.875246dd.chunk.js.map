{"version":3,"sources":["webpack:///./pages/projects/pipelines/charts/index.js"],"names":["__webpack_require__","r","__webpack_exports__","jquery__WEBPACK_IMPORTED_MODULE_0__","jquery__WEBPACK_IMPORTED_MODULE_0___default","n","chart_js__WEBPACK_IMPORTED_MODULE_1__","chart_js__WEBPACK_IMPORTED_MODULE_1___default","options","scaleOverlay","responsive","maintainAspectRatio","document","addEventListener","chartTimesData","JSON","parse","getElementById","innerHTML","chartsData","data","labels","datasets","fillColor","strokeColor","barStrokeWidth","barValueSpacing","barDatasetSpacing","values","window","innerWidth","scaleFontSize","Chart","$","get","getContext","Bar","forEach","scope","chartScope","pointColor","pointStrokeColor","totalValues","successValues","ctx","concat","Line"],"mappings":"6IAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,KAAAO,EAAAP,EAAAK,EAAAC,GAGME,GACJC,cAAc,EACdC,YAAY,EACZC,qBAAqB,GA8BvBC,SAASC,iBAAiB,mBAAoB,WAC5C,IAAMC,EAAiBC,KAAKC,MAAMJ,SAASK,eAAe,4BAA4BC,WAChFC,EAAaJ,KAAKC,MAAMJ,SAASK,eAAe,uBAAuBC,WACvEE,GACJC,OAAQP,EAAeO,OACvBC,WAEIC,UAAW,wBACXC,YAAa,sBACbC,eAAgB,EAChBC,gBAAiB,EACjBC,kBAAmB,EACnBP,KAAMN,EAAec,UAKvBC,OAAOC,WAAa,MAEtBtB,EAAQuB,cAAgB,GAG1B,IAAIC,IACFC,IAAE,qBACCC,IAAI,GACJC,WAAW,OACdC,IAAIhB,EAAMZ,GAEZW,EAAWkB,QAAQ,SAAAC,GAAK,OAtDlBlB,GACJC,QAFekB,EAuDsBD,GArDlBjB,OACnBC,WAEIC,UAAW,UACXC,YAAa,UACbgB,WAAY,UACZC,iBAAkB,OAClBrB,KAAMmB,EAAWG,cAGjBnB,UAAW,UACXC,YAAa,UACbgB,WAAY,UACZC,iBAAkB,OAClBrB,KAAMmB,EAAWI,iBAIjBC,EAAMX,IAAC,IAAAY,OAAKN,EAAWD,MAAhB,UACVJ,IAAI,GACJC,WAAW,WAEd,IAAIH,IAAMY,GAAKE,KAAK1B,EAAMZ,GAxBT,IAAA+B,EACXnB,EAmBAwB","file":"pages.projects.pipelines.charts.875246dd.chunk.js","sourcesContent":["import $ from 'jquery';\nimport Chart from 'chart.js';\n\nconst options = {\n  scaleOverlay: true,\n  responsive: true,\n  maintainAspectRatio: false,\n};\n\nconst buildChart = chartScope => {\n  const data = {\n    labels: chartScope.labels,\n    datasets: [\n      {\n        fillColor: '#707070',\n        strokeColor: '#707070',\n        pointColor: '#707070',\n        pointStrokeColor: '#EEE',\n        data: chartScope.totalValues,\n      },\n      {\n        fillColor: '#1aaa55',\n        strokeColor: '#1aaa55',\n        pointColor: '#1aaa55',\n        pointStrokeColor: '#fff',\n        data: chartScope.successValues,\n      },\n    ],\n  };\n  const ctx = $(`#${chartScope.scope}Chart`)\n    .get(0)\n    .getContext('2d');\n\n  new Chart(ctx).Line(data, options);\n};\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const chartTimesData = JSON.parse(document.getElementById('pipelinesTimesChartsData').innerHTML);\n  const chartsData = JSON.parse(document.getElementById('pipelinesChartsData').innerHTML);\n  const data = {\n    labels: chartTimesData.labels,\n    datasets: [\n      {\n        fillColor: 'rgba(220,220,220,0.5)',\n        strokeColor: 'rgba(220,220,220,1)',\n        barStrokeWidth: 1,\n        barValueSpacing: 1,\n        barDatasetSpacing: 1,\n        data: chartTimesData.values,\n      },\n    ],\n  };\n\n  if (window.innerWidth < 768) {\n    // Scale fonts if window width lower than 768px (iPad portrait)\n    options.scaleFontSize = 8;\n  }\n\n  new Chart(\n    $('#build_timesChart')\n      .get(0)\n      .getContext('2d'),\n  ).Bar(data, options);\n\n  chartsData.forEach(scope => buildChart(scope));\n});\n"],"sourceRoot":""}