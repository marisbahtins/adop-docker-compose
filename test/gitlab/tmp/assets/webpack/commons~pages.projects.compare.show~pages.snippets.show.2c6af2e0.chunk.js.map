{"version":3,"sources":["webpack:///./image_diff/helpers/badge_helper.js","webpack:///./image_diff/helpers/comment_indicator_helper.js","webpack:///./image_diff/image_badge.js","webpack:///./image_diff/image_diff.js","webpack:///./lib/utils/image_utility.js","webpack:///./image_diff/view_types.js","webpack:///./image_diff/replaced_image_diff.js","webpack:///./commit/image_file.js","webpack:///./image_diff/helpers/index.js","webpack:///./image_diff/helpers/dom_helper.js","webpack:///./image_diff/helpers/utils_helper.js"],"names":["createImageBadge","noteId","_ref","x","y","classNames","arguments","length","undefined","buttonEl","document","createElement","concat","forEach","className","classList","add","setAttribute","dataset","style","left","top","addCommentIndicator","containerEl","innerHTML","gl","utils","spriteIcon","appendChild","defaultMeta","width","height","ImageBadge","options","_classCallCheck","this","discussionId","actual","browser","imageEl","imageDiffHelper","resizeCoordinatesToImageElement","ImageDiff","el","image_diff_classCallCheck","canCreateNote","renderCommentBadge","$noteContainer","$","imageBadges","imageFrameEl","querySelector","bindEvents","element","imageClickedWrapper","imageClicked","bind","imageBlurredWrapper","removeCommentIndicator","addBadgeWrapper","addBadge","removeBadgeWrapper","removeBadge","renderBadgesWrapper","renderBadges","complete","naturalHeight","addEventListener","on","toggleCollapsed","commentIndicatorOnClick","event","customEvent","detail","selection","getTargetSelection","currentTarget","setPositionDataAttribute","showCommentIndicator","_toConsumableArray","querySelectorAll","renderBadge","discussionEl","index","imageBadge","generateBadgeFromDiscussionDOM","push","coordinate","addImageCommentBadge","numberBadgeOptions","Object","assign","badgeText","addImageBadge","_event$detail","addAvatarBadge","badgeNumber","updateDiscussionBadgeNumber","_this","indexToRemove","imageBadgeEls","badge","updatedBadgeNumber","innerText","updateDiscussionAvatarBadgeNumber","splice","remove","viewTypes","TWO_UP","SWIPE","ONION_SKIN","ReplacedImageDiff","_this$imageFrameEls","_this$viewModesEls","defaultViewType","imageFrameEls","_defineProperty","viewModesEl","viewModesEls","currentView","generateImageEls","imageEls","getOwnPropertyNames","viewType","_get","_getPrototypeOf","prototype","call","changeToViewTwoUp","changeView","changeToViewSwipe","changeToViewOnionSkin","newView","validate","find","indicator","replaced_image_diff_toConsumableArray","map","setTimeout","renderNewView","removed","normalizedIndicator","image","availWidth","viewModes","ImageFile","file","image_file_classCallCheck","two-up","each","wrap","requestImageInfo","text","removeClass","swipe","maxHeight","maxWidth","view","_ref2","$swipeWrap","$swipeBar","$swipeFrame","wrapPadding","_slicedToArray","prepareFrames","css","parseInt","replace","initDraggable","e","onion-skin","dragTrackWidth","_ref4","$frame","$track","$dragger","$frameAdded","framePadding","opacity","deletedWidth","deletedHeight","initViewModes","waitForImages","initView","viewMode","hasClass","activateViewMode","filter","addClass","fadeOut","fadeIn","views","$el","padding","callback","dragging","$body","$offsetEl","parent","off","pageX","offset","frame","img","domImg","get","naturalWidth","helpers","__webpack_exports__","commentIndicatorHelper","commentIndicatorEl","willRemove","meta","stopPropagation","closest","focus","_ref3","avatarBadgeEl","position","positionObject","JSON","parse","stringify","newBadgeNumber","discussionNotesEl","formEl","isCollapsed","contains","display","imageWidth","imageHeight","widthRatio","heightRatio","Math","round","firstNoteEl","id","offsetX","offsetY","actualWidth","actualHeight","normalizedX","max","min","normalizedY","initImageDiff","fileEl","diff","init"],"mappings":"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","file":"commons~pages.projects.compare.show~pages.snippets.show.2c6af2e0.chunk.js","sourcesContent":["export function createImageBadge(noteId, { x, y }, classNames = []) {\n  const buttonEl = document.createElement('button');\n  const classList = classNames.concat(['js-image-badge']);\n  classList.forEach(className => buttonEl.classList.add(className));\n  buttonEl.setAttribute('type', 'button');\n  buttonEl.setAttribute('disabled', true);\n  buttonEl.dataset.noteId = noteId;\n  buttonEl.style.left = `${x}px`;\n  buttonEl.style.top = `${y}px`;\n\n  return buttonEl;\n}\n\nexport function addImageBadge(containerEl, { coordinate, badgeText, noteId }) {\n  const buttonEl = createImageBadge(noteId, coordinate, ['badge', 'badge-pill']);\n  buttonEl.innerText = badgeText;\n\n  containerEl.appendChild(buttonEl);\n}\n\nexport function addImageCommentBadge(containerEl, { coordinate, noteId }) {\n  const buttonEl = createImageBadge(noteId, coordinate, ['image-comment-badge']);\n  buttonEl.innerHTML = gl.utils.spriteIcon('image-comment-dark');\n\n  containerEl.appendChild(buttonEl);\n}\n\nexport function addAvatarBadge(el, event) {\n  const { noteId, badgeNumber } = event.detail;\n\n  // Add badge to new comment\n  const avatarBadgeEl = el.querySelector(`#${noteId} .badge`);\n  avatarBadgeEl.innerText = badgeNumber;\n  avatarBadgeEl.classList.remove('hidden');\n}\n","export function addCommentIndicator(containerEl, { x, y }) {\n  const buttonEl = document.createElement('button');\n  buttonEl.classList.add('btn-transparent');\n  buttonEl.classList.add('comment-indicator');\n  buttonEl.setAttribute('type', 'button');\n  buttonEl.style.left = `${x}px`;\n  buttonEl.style.top = `${y}px`;\n\n  buttonEl.innerHTML = gl.utils.spriteIcon('image-comment-dark');\n\n  containerEl.appendChild(buttonEl);\n}\n\nexport function removeCommentIndicator(imageFrameEl) {\n  const commentIndicatorEl = imageFrameEl.querySelector('.comment-indicator');\n  const imageEl = imageFrameEl.querySelector('img');\n  const willRemove = !!commentIndicatorEl;\n  let meta = {};\n\n  if (willRemove) {\n    meta = {\n      x: parseInt(commentIndicatorEl.style.left, 10),\n      y: parseInt(commentIndicatorEl.style.top, 10),\n      image: {\n        width: imageEl.width,\n        height: imageEl.height,\n      },\n    };\n\n    commentIndicatorEl.remove();\n  }\n\n  return Object.assign({}, meta, {\n    removed: willRemove,\n  });\n}\n\nexport function showCommentIndicator(imageFrameEl, coordinate) {\n  const { x, y } = coordinate;\n  const commentIndicatorEl = imageFrameEl.querySelector('.comment-indicator');\n\n  if (commentIndicatorEl) {\n    commentIndicatorEl.style.left = `${x}px`;\n    commentIndicatorEl.style.top = `${y}px`;\n  } else {\n    addCommentIndicator(imageFrameEl, coordinate);\n  }\n}\n\nexport function commentIndicatorOnClick(event) {\n  // Prevent from triggering onAddImageDiffNote in notes.js\n  event.stopPropagation();\n\n  const buttonEl = event.currentTarget;\n  const diffViewerEl = buttonEl.closest('.diff-viewer');\n  const textareaEl = diffViewerEl.querySelector('.note-container .note-textarea');\n  textareaEl.focus();\n}\n","import imageDiffHelper from './helpers/index';\n\nconst defaultMeta = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n};\n\nexport default class ImageBadge {\n  constructor(options) {\n    const { noteId, discussionId } = options;\n\n    this.actual = options.actual || defaultMeta;\n    this.browser = options.browser || defaultMeta;\n    this.noteId = noteId;\n    this.discussionId = discussionId;\n\n    if (options.imageEl && !options.browser) {\n      this.browser = imageDiffHelper.resizeCoordinatesToImageElement(options.imageEl, this.actual);\n    }\n  }\n}\n","import $ from 'jquery';\nimport imageDiffHelper from './helpers/index';\nimport ImageBadge from './image_badge';\nimport { isImageLoaded } from '../lib/utils/image_utility';\n\nexport default class ImageDiff {\n  constructor(el, options) {\n    this.el = el;\n    this.canCreateNote = !!(options && options.canCreateNote);\n    this.renderCommentBadge = !!(options && options.renderCommentBadge);\n    this.$noteContainer = $('.note-container', this.el);\n    this.imageBadges = [];\n  }\n\n  init() {\n    this.imageFrameEl = this.el.querySelector('.diff-file .js-image-frame');\n    this.imageEl = this.imageFrameEl.querySelector('img');\n\n    this.bindEvents();\n  }\n\n  bindEvents() {\n    this.imageClickedWrapper = this.imageClicked.bind(this);\n    this.imageBlurredWrapper = imageDiffHelper.removeCommentIndicator.bind(null, this.imageFrameEl);\n    this.addBadgeWrapper = this.addBadge.bind(this);\n    this.removeBadgeWrapper = this.removeBadge.bind(this);\n    this.renderBadgesWrapper = this.renderBadges.bind(this);\n\n    // Render badges\n    if (isImageLoaded(this.imageEl)) {\n      this.renderBadges();\n    } else {\n      this.imageEl.addEventListener('load', this.renderBadgesWrapper);\n    }\n\n    // jquery makes the event delegation here much simpler\n    this.$noteContainer.on('click', '.js-diff-notes-toggle', imageDiffHelper.toggleCollapsed);\n    $(this.el).on('click', '.comment-indicator', imageDiffHelper.commentIndicatorOnClick);\n\n    if (this.canCreateNote) {\n      this.el.addEventListener('click.imageDiff', this.imageClickedWrapper);\n      this.el.addEventListener('blur.imageDiff', this.imageBlurredWrapper);\n      this.el.addEventListener('addBadge.imageDiff', this.addBadgeWrapper);\n      this.el.addEventListener('removeBadge.imageDiff', this.removeBadgeWrapper);\n    }\n  }\n\n  imageClicked(event) {\n    const customEvent = event.detail;\n    const selection = imageDiffHelper.getTargetSelection(customEvent);\n    const el = customEvent.currentTarget;\n\n    imageDiffHelper.setPositionDataAttribute(el, selection.actual);\n    imageDiffHelper.showCommentIndicator(this.imageFrameEl, selection.browser);\n  }\n\n  renderBadges() {\n    const discussionsEls = this.el.querySelectorAll('.note-container .discussion-notes .notes');\n    [...discussionsEls].forEach(this.renderBadge.bind(this));\n  }\n\n  renderBadge(discussionEl, index) {\n    const imageBadge = imageDiffHelper.generateBadgeFromDiscussionDOM(\n      this.imageFrameEl,\n      discussionEl,\n    );\n\n    this.imageBadges.push(imageBadge);\n\n    const options = {\n      coordinate: imageBadge.browser,\n      noteId: imageBadge.noteId,\n    };\n\n    if (this.renderCommentBadge) {\n      imageDiffHelper.addImageCommentBadge(this.imageFrameEl, options);\n    } else {\n      const numberBadgeOptions = Object.assign({}, options, {\n        badgeText: index + 1,\n      });\n\n      imageDiffHelper.addImageBadge(this.imageFrameEl, numberBadgeOptions);\n    }\n  }\n\n  addBadge(event) {\n    const { x, y, width, height, noteId, discussionId } = event.detail;\n    const badgeText = this.imageBadges.length + 1;\n    const imageBadge = new ImageBadge({\n      actual: {\n        x,\n        y,\n        width,\n        height,\n      },\n      imageEl: this.imageFrameEl.querySelector('img'),\n      noteId,\n      discussionId,\n    });\n\n    this.imageBadges.push(imageBadge);\n\n    imageDiffHelper.addImageBadge(this.imageFrameEl, {\n      coordinate: imageBadge.browser,\n      badgeText,\n      noteId,\n    });\n\n    imageDiffHelper.addAvatarBadge(this.el, {\n      detail: {\n        noteId,\n        badgeNumber: badgeText,\n      },\n    });\n\n    const discussionEl = this.el.querySelector(`#discussion_${discussionId}`);\n    imageDiffHelper.updateDiscussionBadgeNumber(discussionEl, badgeText);\n  }\n\n  removeBadge(event) {\n    const { badgeNumber } = event.detail;\n    const indexToRemove = badgeNumber - 1;\n    const imageBadgeEls = this.imageFrameEl.querySelectorAll('.badge');\n\n    if (this.imageBadges.length !== badgeNumber) {\n      // Cascade badges count numbers for (avatar badges + image badges)\n      this.imageBadges.forEach((badge, index) => {\n        if (index > indexToRemove) {\n          const { discussionId } = badge;\n          const updatedBadgeNumber = index;\n          const discussionEl = this.el.querySelector(`#discussion_${discussionId}`);\n\n          imageBadgeEls[index].innerText = updatedBadgeNumber;\n\n          imageDiffHelper.updateDiscussionBadgeNumber(discussionEl, updatedBadgeNumber);\n          imageDiffHelper.updateDiscussionAvatarBadgeNumber(discussionEl, updatedBadgeNumber);\n        }\n      });\n    }\n\n    this.imageBadges.splice(indexToRemove, 1);\n\n    const imageBadgeEl = imageBadgeEls[indexToRemove];\n    imageBadgeEl.remove();\n  }\n}\n","/* eslint-disable import/prefer-default-export */\n\nexport function isImageLoaded(element) {\n  return element.complete && element.naturalHeight !== 0;\n}\n","export const viewTypes = {\n  TWO_UP: 'TWO_UP',\n  SWIPE: 'SWIPE',\n  ONION_SKIN: 'ONION_SKIN',\n};\n\nexport function isValidViewType(validate) {\n  return !!Object.getOwnPropertyNames(viewTypes).find(viewType => viewType === validate);\n}\n","import imageDiffHelper from './helpers/index';\nimport { viewTypes, isValidViewType } from './view_types';\nimport ImageDiff from './image_diff';\n\nexport default class ReplacedImageDiff extends ImageDiff {\n  init(defaultViewType = viewTypes.TWO_UP) {\n    this.imageFrameEls = {\n      [viewTypes.TWO_UP]: this.el.querySelector('.two-up .js-image-frame'),\n      [viewTypes.SWIPE]: this.el.querySelector('.swipe .js-image-frame'),\n      [viewTypes.ONION_SKIN]: this.el.querySelector('.onion-skin .js-image-frame'),\n    };\n\n    const viewModesEl = this.el.querySelector('.view-modes-menu');\n    this.viewModesEls = {\n      [viewTypes.TWO_UP]: viewModesEl.querySelector('.two-up'),\n      [viewTypes.SWIPE]: viewModesEl.querySelector('.swipe'),\n      [viewTypes.ONION_SKIN]: viewModesEl.querySelector('.onion-skin'),\n    };\n\n    this.currentView = defaultViewType;\n    this.generateImageEls();\n    this.bindEvents();\n  }\n\n  generateImageEls() {\n    this.imageEls = {};\n\n    const viewTypeNames = Object.getOwnPropertyNames(viewTypes);\n    viewTypeNames.forEach(viewType => {\n      this.imageEls[viewType] = this.imageFrameEls[viewType].querySelector('img');\n    });\n  }\n\n  bindEvents() {\n    super.bindEvents();\n\n    this.changeToViewTwoUp = this.changeView.bind(this, viewTypes.TWO_UP);\n    this.changeToViewSwipe = this.changeView.bind(this, viewTypes.SWIPE);\n    this.changeToViewOnionSkin = this.changeView.bind(this, viewTypes.ONION_SKIN);\n\n    this.viewModesEls[viewTypes.TWO_UP].addEventListener('click', this.changeToViewTwoUp);\n    this.viewModesEls[viewTypes.SWIPE].addEventListener('click', this.changeToViewSwipe);\n    this.viewModesEls[viewTypes.ONION_SKIN].addEventListener('click', this.changeToViewOnionSkin);\n  }\n\n  get imageEl() {\n    return this.imageEls[this.currentView];\n  }\n\n  get imageFrameEl() {\n    return this.imageFrameEls[this.currentView];\n  }\n\n  changeView(newView) {\n    if (!isValidViewType(newView)) {\n      return;\n    }\n\n    const indicator = imageDiffHelper.removeCommentIndicator(this.imageFrameEl);\n\n    this.currentView = newView;\n\n    // Clear existing badges on new view\n    const existingBadges = this.imageFrameEl.querySelectorAll('.badge');\n    [...existingBadges].map(badge => badge.remove());\n\n    // Remove existing references to old view image badges\n    this.imageBadges = [];\n\n    // Image_file.js has a fade animation of 200ms for loading the view\n    // Need to wait an additional 250ms for the images to be displayed\n    // on window in order to re-normalize their dimensions\n    setTimeout(this.renderNewView.bind(this, indicator), 250);\n  }\n\n  renderNewView(indicator) {\n    // Generate badge coordinates on new view\n    this.renderBadges();\n\n    // Re-render indicator in new view\n    if (indicator.removed) {\n      const normalizedIndicator = imageDiffHelper.resizeCoordinatesToImageElement(this.imageEl, {\n        x: indicator.x,\n        y: indicator.y,\n        width: indicator.image.width,\n        height: indicator.image.height,\n      });\n      imageDiffHelper.showCommentIndicator(this.imageFrameEl, normalizedIndicator);\n    }\n  }\n}\n","/* eslint-disable func-names, no-var, prefer-arrow-callback, no-else-return, consistent-return, prefer-template, one-var, no-unused-vars, no-return-assign, no-unused-expressions, no-sequences */\n\nimport $ from 'jquery';\n\n// Width where images must fits in, for 2-up this gets divided by 2\nconst availWidth = 900;\nconst viewModes = ['two-up', 'swipe'];\n\nexport default class ImageFile {\n  constructor(file) {\n    this.file = file;\n    this.requestImageInfo(\n      $('.two-up.view .frame.deleted img', this.file),\n      (function(_this) {\n        return function(deletedWidth, deletedHeight) {\n          return _this.requestImageInfo($('.two-up.view .frame.added img', _this.file), function(\n            width,\n            height,\n          ) {\n            _this.initViewModes();\n\n            // Load two-up view after images are loaded\n            // so that we can display the correct width and height information\n            const $images = $('.two-up.view img', _this.file);\n\n            $images.waitForImages(function() {\n              _this.initView('two-up');\n            });\n          });\n        };\n      })(this),\n    );\n  }\n\n  initViewModes() {\n    const viewMode = viewModes[0];\n    $('.view-modes', this.file).removeClass('hide');\n    $('.view-modes-menu', this.file).on(\n      'click',\n      'li',\n      (function(_this) {\n        return function(event) {\n          if (!$(event.currentTarget).hasClass('active')) {\n            return _this.activateViewMode(event.currentTarget.className);\n          }\n        };\n      })(this),\n    );\n    return this.activateViewMode(viewMode);\n  }\n\n  activateViewMode(viewMode) {\n    $('.view-modes-menu li', this.file)\n      .removeClass('active')\n      .filter('.' + viewMode)\n      .addClass('active');\n    return $('.view:visible:not(.' + viewMode + ')', this.file).fadeOut(\n      200,\n      (function(_this) {\n        return function() {\n          $('.view.' + viewMode, _this.file).fadeIn(200);\n          return _this.initView(viewMode);\n        };\n      })(this),\n    );\n  }\n\n  initView(viewMode) {\n    return this.views[viewMode].call(this);\n  }\n  // eslint-disable-next-line class-methods-use-this\n  initDraggable($el, padding, callback) {\n    var dragging = false;\n    var $body = $('body');\n    var $offsetEl = $el.parent();\n\n    $el.off('mousedown').on('mousedown', function() {\n      dragging = true;\n      $body.css('user-select', 'none');\n    });\n\n    $body\n      .off('mouseup')\n      .off('mousemove')\n      .on('mouseup', function() {\n        dragging = false;\n        $body.css('user-select', '');\n      })\n      .on('mousemove', function(e) {\n        var left;\n        if (!dragging) return;\n\n        left = e.pageX - ($offsetEl.offset().left + padding);\n\n        callback(e, left);\n      });\n  }\n\n  prepareFrames(view) {\n    var maxHeight, maxWidth;\n    maxWidth = 0;\n    maxHeight = 0;\n    $('.frame', view)\n      .each(\n        (function(_this) {\n          return function(index, frame) {\n            var height, width;\n            width = $(frame).width();\n            height = $(frame).height();\n            maxWidth = width > maxWidth ? width : maxWidth;\n            return (maxHeight = height > maxHeight ? height : maxHeight);\n          };\n        })(this),\n      )\n      .css({\n        width: maxWidth,\n        height: maxHeight,\n      });\n    return [maxWidth, maxHeight];\n  }\n\n  views = {\n    'two-up': function() {\n      return $('.two-up.view .wrap', this.file).each(\n        (function(_this) {\n          return function(index, wrap) {\n            $('img', wrap).each(function() {\n              var currentWidth;\n              currentWidth = $(this).width();\n              if (currentWidth > availWidth / 2) {\n                return $(this).width(availWidth / 2);\n              }\n            });\n            return _this.requestImageInfo($('img', wrap), function(width, height) {\n              $('.image-info .meta-width', wrap).text(width + 'px');\n              $('.image-info .meta-height', wrap).text(height + 'px');\n              return $('.image-info', wrap).removeClass('hide');\n            });\n          };\n        })(this),\n      );\n    },\n    swipe() {\n      var maxHeight, maxWidth;\n      maxWidth = 0;\n      maxHeight = 0;\n      return $('.swipe.view', this.file).each(\n        (function(_this) {\n          return function(index, view) {\n            var $swipeWrap, $swipeBar, $swipeFrame, wrapPadding, ref;\n            (ref = _this.prepareFrames(view)), ([maxWidth, maxHeight] = ref);\n            $swipeFrame = $('.swipe-frame', view);\n            $swipeWrap = $('.swipe-wrap', view);\n            $swipeBar = $('.swipe-bar', view);\n\n            $swipeFrame.css({\n              width: maxWidth + 16,\n              height: maxHeight + 28,\n            });\n            $swipeWrap.css({\n              width: maxWidth + 1,\n              height: maxHeight + 2,\n            });\n            // Set swipeBar left position to match image frame\n            $swipeBar.css({\n              left: 1,\n            });\n\n            wrapPadding = parseInt($swipeWrap.css('right').replace('px', ''), 10);\n\n            _this.initDraggable($swipeBar, wrapPadding, function(e, left) {\n              if (left > 0 && left < $swipeFrame.width() - wrapPadding * 2) {\n                $swipeWrap.width(maxWidth + 1 - left);\n                $swipeBar.css('left', left);\n              }\n            });\n          };\n        })(this),\n      );\n    },\n    'onion-skin': function() {\n      var dragTrackWidth, maxHeight, maxWidth;\n      maxWidth = 0;\n      maxHeight = 0;\n      dragTrackWidth = $('.drag-track', this.file).width() - $('.dragger', this.file).width();\n      return $('.onion-skin.view', this.file).each(\n        (function(_this) {\n          return function(index, view) {\n            var $frame,\n              $track,\n              $dragger,\n              $frameAdded,\n              framePadding,\n              ref,\n              dragging = false;\n            (ref = _this.prepareFrames(view)), ([maxWidth, maxHeight] = ref);\n            $frame = $('.onion-skin-frame', view);\n            $frameAdded = $('.frame.added', view);\n            $track = $('.drag-track', view);\n            $dragger = $('.dragger', $track);\n\n            $frame.css({\n              width: maxWidth + 16,\n              height: maxHeight + 28,\n            });\n            $('.swipe-wrap', view).css({\n              width: maxWidth + 1,\n              height: maxHeight + 2,\n            });\n            $dragger.css({\n              left: dragTrackWidth,\n            });\n\n            $frameAdded.css('opacity', 1);\n            framePadding = parseInt($frameAdded.css('right').replace('px', ''), 10);\n\n            _this.initDraggable($dragger, framePadding, function(e, left) {\n              var opacity = left / dragTrackWidth;\n\n              if (opacity >= 0 && opacity <= 1) {\n                $dragger.css('left', left);\n                $frameAdded.css('opacity', opacity);\n              }\n            });\n          };\n        })(this),\n      );\n    },\n  };\n\n  requestImageInfo(img, callback) {\n    const domImg = img.get(0);\n    if (domImg) {\n      if (domImg.complete) {\n        return callback.call(this, domImg.naturalWidth, domImg.naturalHeight);\n      } else {\n        return img.on(\n          'load',\n          (function(_this) {\n            return function() {\n              return callback.call(_this, domImg.naturalWidth, domImg.naturalHeight);\n            };\n          })(this),\n        );\n      }\n    }\n  }\n}\n","import * as badgeHelper from './badge_helper';\nimport * as commentIndicatorHelper from './comment_indicator_helper';\nimport * as domHelper from './dom_helper';\nimport * as utilsHelper from './utils_helper';\n\nexport default {\n  addCommentIndicator: commentIndicatorHelper.addCommentIndicator,\n  removeCommentIndicator: commentIndicatorHelper.removeCommentIndicator,\n  showCommentIndicator: commentIndicatorHelper.showCommentIndicator,\n  commentIndicatorOnClick: commentIndicatorHelper.commentIndicatorOnClick,\n\n  addImageBadge: badgeHelper.addImageBadge,\n  addImageCommentBadge: badgeHelper.addImageCommentBadge,\n  addAvatarBadge: badgeHelper.addAvatarBadge,\n\n  setPositionDataAttribute: domHelper.setPositionDataAttribute,\n  updateDiscussionAvatarBadgeNumber: domHelper.updateDiscussionAvatarBadgeNumber,\n  updateDiscussionBadgeNumber: domHelper.updateDiscussionBadgeNumber,\n  toggleCollapsed: domHelper.toggleCollapsed,\n\n  resizeCoordinatesToImageElement: utilsHelper.resizeCoordinatesToImageElement,\n  generateBadgeFromDiscussionDOM: utilsHelper.generateBadgeFromDiscussionDOM,\n  getTargetSelection: utilsHelper.getTargetSelection,\n  initImageDiff: utilsHelper.initImageDiff,\n};\n","export function setPositionDataAttribute(el, options) {\n  // Update position data attribute so that the\n  // new comment form can use this data for ajax request\n  const { x, y, width, height } = options;\n  const { position } = el.dataset;\n\n  const positionObject = Object.assign({}, JSON.parse(position), {\n    x,\n    y,\n    width,\n    height,\n  });\n\n  el.setAttribute('data-position', JSON.stringify(positionObject));\n}\n\nexport function updateDiscussionAvatarBadgeNumber(discussionEl, newBadgeNumber) {\n  const avatarBadgeEl = discussionEl.querySelector('.image-diff-avatar-link .badge');\n  avatarBadgeEl.innerText = newBadgeNumber;\n}\n\nexport function updateDiscussionBadgeNumber(discussionEl, newBadgeNumber) {\n  const discussionBadgeEl = discussionEl.querySelector('.badge');\n  discussionBadgeEl.innerText = newBadgeNumber;\n}\n\nexport function toggleCollapsed(event) {\n  const toggleButtonEl = event.currentTarget;\n  const discussionNotesEl = toggleButtonEl.closest('.discussion-notes');\n  const formEl = discussionNotesEl.querySelector('.discussion-form');\n  const isCollapsed = discussionNotesEl.classList.contains('collapsed');\n\n  if (isCollapsed) {\n    discussionNotesEl.classList.remove('collapsed');\n  } else {\n    discussionNotesEl.classList.add('collapsed');\n  }\n\n  // Override the inline display style set in notes.js\n  if (formEl && !isCollapsed) {\n    formEl.style.display = 'none';\n  } else if (formEl && isCollapsed) {\n    formEl.style.display = 'block';\n  }\n}\n","import ImageBadge from '../image_badge';\nimport ImageDiff from '../image_diff';\nimport ReplacedImageDiff from '../replaced_image_diff';\nimport ImageFile from '../../commit/image_file';\n\nexport function resizeCoordinatesToImageElement(imageEl, meta) {\n  const { x, y, width, height } = meta;\n\n  const imageWidth = imageEl.width;\n  const imageHeight = imageEl.height;\n\n  const widthRatio = imageWidth / width;\n  const heightRatio = imageHeight / height;\n\n  return {\n    x: Math.round(x * widthRatio),\n    y: Math.round(y * heightRatio),\n    width: imageWidth,\n    height: imageHeight,\n  };\n}\n\nexport function generateBadgeFromDiscussionDOM(imageFrameEl, discussionEl) {\n  const position = JSON.parse(discussionEl.dataset.position);\n  const firstNoteEl = discussionEl.querySelector('.note');\n  const badge = new ImageBadge({\n    actual: position,\n    imageEl: imageFrameEl.querySelector('img'),\n    noteId: firstNoteEl.id,\n    discussionId: discussionEl.dataset.discussionId,\n  });\n\n  return badge;\n}\n\nexport function getTargetSelection(event) {\n  const containerEl = event.currentTarget;\n  const imageEl = containerEl.querySelector('img');\n\n  const x = event.offsetX;\n  const y = event.offsetY;\n\n  const { width, height } = imageEl;\n\n  const actualWidth = imageEl.naturalWidth;\n  const actualHeight = imageEl.naturalHeight;\n\n  const widthRatio = actualWidth / width;\n  const heightRatio = actualHeight / height;\n\n  // Browser will include the frame as a clickable target,\n  // which would result in potential 1px out of bounds value\n  // This bound the coordinates to inside the frame\n  const normalizedX = Math.max(0, x) && Math.min(x, width);\n  const normalizedY = Math.max(0, y) && Math.min(y, height);\n\n  return {\n    browser: {\n      x: normalizedX,\n      y: normalizedY,\n      width,\n      height,\n    },\n    actual: {\n      // Round x, y so that we don't need to deal with decimals\n      x: Math.round(normalizedX * widthRatio),\n      y: Math.round(normalizedY * heightRatio),\n      width: actualWidth,\n      height: actualHeight,\n    },\n  };\n}\n\nexport function initImageDiff(fileEl, canCreateNote, renderCommentBadge) {\n  const options = {\n    canCreateNote,\n    renderCommentBadge,\n  };\n  let diff;\n\n  // ImageFile needs to be invoked before initImageDiff so that badges\n  // can mount to the correct location\n  new ImageFile(fileEl); // eslint-disable-line no-new\n\n  if (fileEl.querySelector('.diff-file .js-single-image')) {\n    diff = new ImageDiff(fileEl, options);\n    diff.init();\n  } else if (fileEl.querySelector('.diff-file .js-replaced-image')) {\n    diff = new ReplacedImageDiff(fileEl, options);\n    diff.init();\n  }\n\n  return diff;\n}\n"],"sourceRoot":""}