{"version":3,"sources":["webpack:///./project_select_combo_button.js","webpack:///./project_select.js","webpack:///./pages/dashboard/milestones/index/index.js"],"names":["ProjectSelectComboButton","select","_classCallCheck","this","projectSelectInput","$","newItemBtn","resourceType","data","resourceLabel","formattedText","deriveTextVariants","groupId","bindEvents","initLocalStorage","_this","siblings","on","e","openDropdown","getProjectFromLocalStorage","preventDefault","selectProject","AccessorUtilities","isLocalStorageAccessSafe","localStorageKey","localStorageItemType","join","setBtnTextFromLocalStorage","event","currentTarget","select2","selectedProjectData","JSON","parse","val","projectMeta","url","concat","name","setNewItemBtnAttributes","setProjectInLocalStorage","cachedProjectData","project","attr","text","defaultTextPrefix","presetTextSuffix","projectString","localStorage","getItem","stringify","setItem","split","slice","projectSelect","each","i","placeholder","simpleFilter","includeGroups","allProjects","orderBy","withIssuesEnabled","withMergeRequestsEnabled","withShared","undefined","includeProjectsInSubgroups","allowClear","minimumInputLength","query","finalCallback","projectsCallback","projects","results","callback","groupsCallback","groups","Api","term","groupProjects","with_issues_enabled","with_merge_requests_enabled","with_shared","include_subgroups","order_by","membership","id","web_url","name_with_namespace","initSelection","el","then","_ref","dropdownCssClass","__webpack_require__","d","__webpack_exports__","r","_project_select__WEBPACK_IMPORTED_MODULE_0__","document","addEventListener"],"mappings":"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","file":"pages.dashboard.milestones.index.6e7a5240.chunk.js","sourcesContent":["import $ from 'jquery';\nimport AccessorUtilities from './lib/utils/accessor';\n\nexport default class ProjectSelectComboButton {\n  constructor(select) {\n    this.projectSelectInput = $(select);\n    this.newItemBtn = $('.new-project-item-link');\n    this.resourceType = this.newItemBtn.data('type');\n    this.resourceLabel = this.newItemBtn.data('label');\n    this.formattedText = this.deriveTextVariants();\n    this.groupId = this.projectSelectInput.data('groupId');\n    this.bindEvents();\n    this.initLocalStorage();\n  }\n\n  bindEvents() {\n    this.projectSelectInput\n      .siblings('.new-project-item-select-button')\n      .on('click', e => this.openDropdown(e));\n\n    this.newItemBtn.on('click', e => {\n      if (!this.getProjectFromLocalStorage()) {\n        e.preventDefault();\n        this.openDropdown(e);\n      }\n    });\n\n    this.projectSelectInput.on('change', () => this.selectProject());\n  }\n\n  initLocalStorage() {\n    const localStorageIsSafe = AccessorUtilities.isLocalStorageAccessSafe();\n\n    if (localStorageIsSafe) {\n      this.localStorageKey = [\n        'group',\n        this.groupId,\n        this.formattedText.localStorageItemType,\n        'recent-project',\n      ].join('-');\n      this.setBtnTextFromLocalStorage();\n    }\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  openDropdown(event) {\n    $(event.currentTarget)\n      .siblings('.project-item-select')\n      .select2('open');\n  }\n\n  selectProject() {\n    const selectedProjectData = JSON.parse(this.projectSelectInput.val());\n    const projectUrl = `${selectedProjectData.url}/${this.projectSelectInput.data('relativePath')}`;\n    const projectName = selectedProjectData.name;\n\n    const projectMeta = {\n      url: projectUrl,\n      name: projectName,\n    };\n\n    this.setNewItemBtnAttributes(projectMeta);\n    this.setProjectInLocalStorage(projectMeta);\n  }\n\n  setBtnTextFromLocalStorage() {\n    const cachedProjectData = this.getProjectFromLocalStorage();\n\n    this.setNewItemBtnAttributes(cachedProjectData);\n  }\n\n  setNewItemBtnAttributes(project) {\n    if (project) {\n      this.newItemBtn.attr('href', project.url);\n      this.newItemBtn.text(`${this.formattedText.defaultTextPrefix} in ${project.name}`);\n    } else {\n      this.newItemBtn.text(`Select project to create ${this.formattedText.presetTextSuffix}`);\n    }\n  }\n\n  getProjectFromLocalStorage() {\n    const projectString = localStorage.getItem(this.localStorageKey);\n\n    return JSON.parse(projectString);\n  }\n\n  setProjectInLocalStorage(projectMeta) {\n    const projectString = JSON.stringify(projectMeta);\n\n    localStorage.setItem(this.localStorageKey, projectString);\n  }\n\n  deriveTextVariants() {\n    const defaultTextPrefix = this.resourceLabel;\n\n    // the trailing slice call depluralizes each of these strings (e.g. new-issues -> new-issue)\n    const localStorageItemType = `new-${this.resourceType\n      .split('_')\n      .join('-')\n      .slice(0, -1)}`;\n    const presetTextSuffix = this.resourceType\n      .split('_')\n      .join(' ')\n      .slice(0, -1);\n\n    return {\n      localStorageItemType, // new-issue / new-merge-request\n      defaultTextPrefix, // New issue / New merge request\n      presetTextSuffix, // issue / merge request\n    };\n  }\n}\n","/* eslint-disable func-names, no-var, object-shorthand, one-var, no-else-return */\n\nimport $ from 'jquery';\nimport Api from './api';\nimport ProjectSelectComboButton from './project_select_combo_button';\n\nexport default function projectSelect() {\n  $('.ajax-project-select').each(function(i, select) {\n    var placeholder;\n    const simpleFilter = $(select).data('simpleFilter') || false;\n    this.groupId = $(select).data('groupId');\n    this.includeGroups = $(select).data('includeGroups');\n    this.allProjects = $(select).data('allProjects') || false;\n    this.orderBy = $(select).data('orderBy') || 'id';\n    this.withIssuesEnabled = $(select).data('withIssuesEnabled');\n    this.withMergeRequestsEnabled = $(select).data('withMergeRequestsEnabled');\n    this.withShared =\n      $(select).data('withShared') === undefined ? true : $(select).data('withShared');\n    this.includeProjectsInSubgroups = $(select).data('includeProjectsInSubgroups') || false;\n    this.allowClear = $(select).data('allowClear') || false;\n\n    placeholder = 'Search for project';\n    if (this.includeGroups) {\n      placeholder += ' or group';\n    }\n\n    $(select).select2({\n      placeholder: placeholder,\n      minimumInputLength: 0,\n      query: (function(_this) {\n        return function(query) {\n          var finalCallback, projectsCallback;\n          finalCallback = function(projects) {\n            var data;\n            data = {\n              results: projects,\n            };\n            return query.callback(data);\n          };\n          if (_this.includeGroups) {\n            projectsCallback = function(projects) {\n              var groupsCallback;\n              groupsCallback = function(groups) {\n                var data;\n                data = groups.concat(projects);\n                return finalCallback(data);\n              };\n              return Api.groups(query.term, {}, groupsCallback);\n            };\n          } else {\n            projectsCallback = finalCallback;\n          }\n          if (_this.groupId) {\n            return Api.groupProjects(\n              _this.groupId,\n              query.term,\n              {\n                with_issues_enabled: _this.withIssuesEnabled,\n                with_merge_requests_enabled: _this.withMergeRequestsEnabled,\n                with_shared: _this.withShared,\n                include_subgroups: _this.includeProjectsInSubgroups,\n              },\n              projectsCallback,\n            );\n          } else {\n            return Api.projects(\n              query.term,\n              {\n                order_by: _this.orderBy,\n                with_issues_enabled: _this.withIssuesEnabled,\n                with_merge_requests_enabled: _this.withMergeRequestsEnabled,\n                membership: !_this.allProjects,\n              },\n              projectsCallback,\n            );\n          }\n        };\n      })(this),\n      id: function(project) {\n        if (simpleFilter) return project.id;\n        return JSON.stringify({\n          name: project.name,\n          url: project.web_url,\n        });\n      },\n      text: function(project) {\n        return project.name_with_namespace || project.name;\n      },\n\n      initSelection: function(el, callback) {\n        return Api.project(el.val()).then(({ data }) => callback(data));\n      },\n\n      allowClear: this.allowClear,\n\n      dropdownCssClass: 'ajax-project-dropdown',\n    });\n    if (simpleFilter) return select;\n    return new ProjectSelectComboButton(select);\n  });\n}\n","import projectSelect from '~/project_select';\n\ndocument.addEventListener('DOMContentLoaded', projectSelect);\n"],"sourceRoot":""}