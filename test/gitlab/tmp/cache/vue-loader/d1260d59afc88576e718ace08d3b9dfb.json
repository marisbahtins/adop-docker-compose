{"remainingRequest":"/home/git/gitlab/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/git/gitlab/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/git/gitlab/app/assets/javascripts/pages/projects/pipeline_schedules/shared/components/interval_pattern_input.vue?vue&type=template&id=e4485f00&","dependencies":[{"path":"/home/git/gitlab/app/assets/javascripts/pages/projects/pipeline_schedules/shared/components/interval_pattern_input.vue","mtime":1549351734000},{"path":"/home/git/gitlab/node_modules/cache-loader/dist/cjs.js","mtime":1549352765000},{"path":"/home/git/gitlab/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1549352754000},{"path":"/home/git/gitlab/node_modules/vue-loader/lib/index.js","mtime":1549352754000}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"interval-pattern-form-group\"},[_c('div',{staticClass:\"cron-preset-radio-input\"},[_c('input',{staticClass:\"label-bold\",attrs:{\"id\":\"custom\",\"name\":_vm.inputNameAttribute,\"type\":\"radio\"},domProps:{\"value\":_vm.cronInterval,\"checked\":_vm.isEditable},on:{\"click\":function($event){_vm.toggleCustomInput(true);}}}),_vm._v(\" \"),_c('label',{attrs:{\"for\":\"custom\"}},[_vm._v(\" \"+_vm._s(_vm.s__('PipelineSheduleIntervalPattern|Custom'))+\" \")]),_vm._v(\" \"),_c('span',{staticClass:\"cron-syntax-link-wrap\"},[_vm._v(\"\\n      (\"),_c('a',{attrs:{\"href\":_vm.cronSyntaxUrl,\"target\":\"_blank\"}},[_vm._v(\" \"+_vm._s(_vm.__('Cron syntax'))+\" \")]),_vm._v(\")\\n    \")])]),_vm._v(\" \"),_c('div',{staticClass:\"cron-preset-radio-input\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.cronInterval),expression:\"cronInterval\"}],staticClass:\"label-bold\",attrs:{\"id\":\"every-day\",\"name\":_vm.inputNameAttribute,\"type\":\"radio\"},domProps:{\"value\":_vm.cronIntervalPresets.everyDay,\"checked\":_vm._q(_vm.cronInterval,_vm.cronIntervalPresets.everyDay)},on:{\"click\":function($event){_vm.toggleCustomInput(false);},\"change\":function($event){_vm.cronInterval=_vm.cronIntervalPresets.everyDay}}}),_vm._v(\" \"),_c('label',{staticClass:\"label-bold\",attrs:{\"for\":\"every-day\"}},[_vm._v(\" \"+_vm._s(_vm.__('Every day (at 4:00am)'))+\" \")])]),_vm._v(\" \"),_c('div',{staticClass:\"cron-preset-radio-input\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.cronInterval),expression:\"cronInterval\"}],staticClass:\"label-bold\",attrs:{\"id\":\"every-week\",\"name\":_vm.inputNameAttribute,\"type\":\"radio\"},domProps:{\"value\":_vm.cronIntervalPresets.everyWeek,\"checked\":_vm._q(_vm.cronInterval,_vm.cronIntervalPresets.everyWeek)},on:{\"click\":function($event){_vm.toggleCustomInput(false);},\"change\":function($event){_vm.cronInterval=_vm.cronIntervalPresets.everyWeek}}}),_vm._v(\" \"),_c('label',{staticClass:\"label-bold\",attrs:{\"for\":\"every-week\"}},[_vm._v(\"\\n      \"+_vm._s(_vm.__('Every week (Sundays at 4:00am)'))+\"\\n    \")])]),_vm._v(\" \"),_c('div',{staticClass:\"cron-preset-radio-input\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.cronInterval),expression:\"cronInterval\"}],staticClass:\"label-bold\",attrs:{\"id\":\"every-month\",\"name\":_vm.inputNameAttribute,\"type\":\"radio\"},domProps:{\"value\":_vm.cronIntervalPresets.everyMonth,\"checked\":_vm._q(_vm.cronInterval,_vm.cronIntervalPresets.everyMonth)},on:{\"click\":function($event){_vm.toggleCustomInput(false);},\"change\":function($event){_vm.cronInterval=_vm.cronIntervalPresets.everyMonth}}}),_vm._v(\" \"),_c('label',{staticClass:\"label-bold\",attrs:{\"for\":\"every-month\"}},[_vm._v(\"\\n      \"+_vm._s(_vm.__('Every month (on the 1st at 4:00am)'))+\"\\n    \")])]),_vm._v(\" \"),_c('div',{staticClass:\"cron-interval-input-wrapper\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.cronInterval),expression:\"cronInterval\"}],staticClass:\"form-control inline cron-interval-input\",attrs:{\"id\":\"schedule_cron\",\"placeholder\":_vm.__('Define a custom pattern with cron syntax'),\"name\":_vm.inputNameAttribute,\"disabled\":!_vm.isEditable,\"type\":\"text\",\"required\":\"true\"},domProps:{\"value\":(_vm.cronInterval)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.cronInterval=$event.target.value}}})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}