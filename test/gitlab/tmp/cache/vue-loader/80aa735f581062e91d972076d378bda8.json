{"remainingRequest":"/home/git/gitlab/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/git/gitlab/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/git/gitlab/app/assets/javascripts/cycle_analytics/components/stage_review_component.vue?vue&type=template&id=f4f3eb4c&","dependencies":[{"path":"/home/git/gitlab/app/assets/javascripts/cycle_analytics/components/stage_review_component.vue","mtime":1549351734000},{"path":"/home/git/gitlab/node_modules/cache-loader/dist/cjs.js","mtime":1549352765000},{"path":"/home/git/gitlab/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1549352754000},{"path":"/home/git/gitlab/node_modules/vue-loader/lib/index.js","mtime":1549352754000}],"contextDependencies":[],"result":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"events-description\"},[_vm._v(\"\\n    \"+_vm._s(_vm.stage.description)+\"\\n    \"),_c('limit-warning',{attrs:{\"count\":_vm.items.length}})],1),_vm._v(\" \"),_c('ul',{staticClass:\"stage-event-list\"},_vm._l((_vm.items),function(mergeRequest,i){return _c('li',{key:i,staticClass:\"stage-event-item\"},[_c('div',{staticClass:\"item-details\"},[_c('user-avatar-image',{attrs:{\"img-src\":mergeRequest.author.avatarUrl}}),_vm._v(\" \"),_c('h5',{staticClass:\"item-title merge-merquest-title\"},[_c('a',{attrs:{\"href\":mergeRequest.url}},[_vm._v(\" \"+_vm._s(mergeRequest.title)+\" \")])]),_vm._v(\" \"),_c('a',{staticClass:\"issue-link\",attrs:{\"href\":mergeRequest.url}},[_vm._v(\"!\"+_vm._s(mergeRequest.iid))]),_vm._v(\" Â·\\n        \"),_c('span',[_vm._v(\"\\n          \"+_vm._s(_vm.s__('OpenedNDaysAgo|Opened'))+\"\\n          \"),_c('a',{staticClass:\"issue-date\",attrs:{\"href\":mergeRequest.url}},[_vm._v(_vm._s(mergeRequest.createdAt))])]),_vm._v(\" \"),_c('span',[_vm._v(\"\\n          \"+_vm._s(_vm.s__('ByAuthor|by'))+\"\\n          \"),_c('a',{staticClass:\"issue-author-link\",attrs:{\"href\":mergeRequest.author.webUrl}},[_vm._v(_vm._s(mergeRequest.author.name))])]),_vm._v(\" \"),(mergeRequest.state === 'closed')?[_c('span',{staticClass:\"merge-request-state\"},[_c('i',{staticClass:\"fa fa-ban\",attrs:{\"aria-hidden\":\"true\"}}),_vm._v(\" \"+_vm._s(mergeRequest.state.toUpperCase())+\"\\n          \")])]:[(mergeRequest.branch)?_c('span',{staticClass:\"merge-request-branch\"},[_c('icon',{attrs:{\"size\":16,\"name\":\"fork\"}}),_vm._v(\" \"),_c('a',{attrs:{\"href\":mergeRequest.branch.url}},[_vm._v(\" \"+_vm._s(mergeRequest.branch.name)+\" \")])],1):_vm._e()]],2),_vm._v(\" \"),_c('div',{staticClass:\"item-time\"},[_c('total-time',{attrs:{\"time\":mergeRequest.totalTime}})],1)])}),0)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }"]}